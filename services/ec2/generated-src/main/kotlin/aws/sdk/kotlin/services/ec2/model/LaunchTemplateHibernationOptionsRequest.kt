// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Indicates whether the instance is configured for hibernation. This parameter is valid only
 * if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
 * prerequisites.
 */
class LaunchTemplateHibernationOptionsRequest private constructor(builder: BuilderImpl) {
    /**
     * If you set this parameter to true, the instance is enabled for hibernation.
     * Default: false
     */
    val configured: Boolean? = builder.configured

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LaunchTemplateHibernationOptionsRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplateHibernationOptionsRequest(")
        append("configured=$configured)")
    }

    override fun hashCode(): kotlin.Int {
        var result = configured?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LaunchTemplateHibernationOptionsRequest

        if (configured != other.configured) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LaunchTemplateHibernationOptionsRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LaunchTemplateHibernationOptionsRequest
        /**
         * If you set this parameter to true, the instance is enabled for hibernation.
         * Default: false
         */
        fun configured(configured: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * If you set this parameter to true, the instance is enabled for hibernation.
         * Default: false
         */
        var configured: Boolean?

        fun build(): LaunchTemplateHibernationOptionsRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var configured: Boolean? = null

        constructor(x: LaunchTemplateHibernationOptionsRequest) : this() {
            this.configured = x.configured
        }

        override fun build(): LaunchTemplateHibernationOptionsRequest = LaunchTemplateHibernationOptionsRequest(this)
        override fun configured(configured: Boolean): FluentBuilder = apply { this.configured = configured }
    }
}
