// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for GetReservedInstanceExchangeQuote.
 */
class GetReservedInstancesExchangeQuoteRequest private constructor(builder: BuilderImpl) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The IDs of the Convertible Reserved Instances to exchange.
     */
    val reservedInstanceIds: List<String>? = builder.reservedInstanceIds
    /**
     * The configuration of the target Convertible Reserved Instance to exchange for your
     * current Convertible Reserved Instances.
     */
    val targetConfigurations: List<TargetConfigurationRequest>? = builder.targetConfigurations

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetReservedInstancesExchangeQuoteRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetReservedInstancesExchangeQuoteRequest(")
        append("dryRun=$dryRun,")
        append("reservedInstanceIds=$reservedInstanceIds,")
        append("targetConfigurations=$targetConfigurations)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (reservedInstanceIds?.hashCode() ?: 0)
        result = 31 * result + (targetConfigurations?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetReservedInstancesExchangeQuoteRequest

        if (dryRun != other.dryRun) return false
        if (reservedInstanceIds != other.reservedInstanceIds) return false
        if (targetConfigurations != other.targetConfigurations) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetReservedInstancesExchangeQuoteRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetReservedInstancesExchangeQuoteRequest
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The IDs of the Convertible Reserved Instances to exchange.
         */
        fun reservedInstanceIds(reservedInstanceIds: List<String>): FluentBuilder
        /**
         * The configuration of the target Convertible Reserved Instance to exchange for your
         * current Convertible Reserved Instances.
         */
        fun targetConfigurations(targetConfigurations: List<TargetConfigurationRequest>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The IDs of the Convertible Reserved Instances to exchange.
         */
        var reservedInstanceIds: List<String>?
        /**
         * The configuration of the target Convertible Reserved Instance to exchange for your
         * current Convertible Reserved Instances.
         */
        var targetConfigurations: List<TargetConfigurationRequest>?

        fun build(): GetReservedInstancesExchangeQuoteRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var dryRun: Boolean? = null
        override var reservedInstanceIds: List<String>? = null
        override var targetConfigurations: List<TargetConfigurationRequest>? = null

        constructor(x: GetReservedInstancesExchangeQuoteRequest) : this() {
            this.dryRun = x.dryRun
            this.reservedInstanceIds = x.reservedInstanceIds
            this.targetConfigurations = x.targetConfigurations
        }

        override fun build(): GetReservedInstancesExchangeQuoteRequest = GetReservedInstancesExchangeQuoteRequest(this)
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun reservedInstanceIds(reservedInstanceIds: List<String>): FluentBuilder = apply { this.reservedInstanceIds = reservedInstanceIds }
        override fun targetConfigurations(targetConfigurations: List<TargetConfigurationRequest>): FluentBuilder = apply { this.targetConfigurations = targetConfigurations }
    }
}
