// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class TerminateInstancesResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the terminated instances.
     */
    val terminatingInstances: List<InstanceStateChange>? = builder.terminatingInstances

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TerminateInstancesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TerminateInstancesResponse(")
        append("terminatingInstances=$terminatingInstances)")
    }

    override fun hashCode(): kotlin.Int {
        var result = terminatingInstances?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TerminateInstancesResponse

        if (terminatingInstances != other.terminatingInstances) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TerminateInstancesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TerminateInstancesResponse
        /**
         * Information about the terminated instances.
         */
        fun terminatingInstances(terminatingInstances: List<InstanceStateChange>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the terminated instances.
         */
        var terminatingInstances: List<InstanceStateChange>?

        fun build(): TerminateInstancesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var terminatingInstances: List<InstanceStateChange>? = null

        constructor(x: TerminateInstancesResponse) : this() {
            this.terminatingInstances = x.terminatingInstances
        }

        override fun build(): TerminateInstancesResponse = TerminateInstancesResponse(this)
        override fun terminatingInstances(terminatingInstances: List<InstanceStateChange>): FluentBuilder = apply { this.terminatingInstances = terminatingInstances }
    }
}
