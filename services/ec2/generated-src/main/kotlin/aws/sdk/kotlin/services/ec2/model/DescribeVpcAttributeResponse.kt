// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribeVpcAttributeResponse private constructor(builder: BuilderImpl) {
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames.
     * If this attribute is true, instances in the VPC get DNS hostnames;
     * otherwise, they do not.
     */
    val enableDnsHostnames: AttributeBooleanValue? = builder.enableDnsHostnames
    /**
     * Indicates whether DNS resolution is enabled for
     * the VPC. If this attribute is true, the Amazon DNS server
     * resolves DNS hostnames for your instances to their corresponding
     * IP addresses; otherwise, it does not.
     */
    val enableDnsSupport: AttributeBooleanValue? = builder.enableDnsSupport
    /**
     * The ID of the VPC.
     */
    val vpcId: String? = builder.vpcId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeVpcAttributeResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeVpcAttributeResponse(")
        append("enableDnsHostnames=$enableDnsHostnames,")
        append("enableDnsSupport=$enableDnsSupport,")
        append("vpcId=$vpcId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = enableDnsHostnames?.hashCode() ?: 0
        result = 31 * result + (enableDnsSupport?.hashCode() ?: 0)
        result = 31 * result + (vpcId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeVpcAttributeResponse

        if (enableDnsHostnames != other.enableDnsHostnames) return false
        if (enableDnsSupport != other.enableDnsSupport) return false
        if (vpcId != other.vpcId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeVpcAttributeResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeVpcAttributeResponse
        /**
         * Indicates whether the instances launched in the VPC get DNS hostnames.
         * If this attribute is true, instances in the VPC get DNS hostnames;
         * otherwise, they do not.
         */
        fun enableDnsHostnames(enableDnsHostnames: AttributeBooleanValue): FluentBuilder
        /**
         * Indicates whether DNS resolution is enabled for
         * the VPC. If this attribute is true, the Amazon DNS server
         * resolves DNS hostnames for your instances to their corresponding
         * IP addresses; otherwise, it does not.
         */
        fun enableDnsSupport(enableDnsSupport: AttributeBooleanValue): FluentBuilder
        /**
         * The ID of the VPC.
         */
        fun vpcId(vpcId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates whether the instances launched in the VPC get DNS hostnames.
         * If this attribute is true, instances in the VPC get DNS hostnames;
         * otherwise, they do not.
         */
        var enableDnsHostnames: AttributeBooleanValue?
        /**
         * Indicates whether DNS resolution is enabled for
         * the VPC. If this attribute is true, the Amazon DNS server
         * resolves DNS hostnames for your instances to their corresponding
         * IP addresses; otherwise, it does not.
         */
        var enableDnsSupport: AttributeBooleanValue?
        /**
         * The ID of the VPC.
         */
        var vpcId: String?

        fun build(): DescribeVpcAttributeResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        fun enableDnsHostnames(block: AttributeBooleanValue.DslBuilder.() -> kotlin.Unit) {
            this.enableDnsHostnames = AttributeBooleanValue.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        fun enableDnsSupport(block: AttributeBooleanValue.DslBuilder.() -> kotlin.Unit) {
            this.enableDnsSupport = AttributeBooleanValue.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var enableDnsHostnames: AttributeBooleanValue? = null
        override var enableDnsSupport: AttributeBooleanValue? = null
        override var vpcId: String? = null

        constructor(x: DescribeVpcAttributeResponse) : this() {
            this.enableDnsHostnames = x.enableDnsHostnames
            this.enableDnsSupport = x.enableDnsSupport
            this.vpcId = x.vpcId
        }

        override fun build(): DescribeVpcAttributeResponse = DescribeVpcAttributeResponse(this)
        override fun enableDnsHostnames(enableDnsHostnames: AttributeBooleanValue): FluentBuilder = apply { this.enableDnsHostnames = enableDnsHostnames }
        override fun enableDnsSupport(enableDnsSupport: AttributeBooleanValue): FluentBuilder = apply { this.enableDnsSupport = enableDnsSupport }
        override fun vpcId(vpcId: String): FluentBuilder = apply { this.vpcId = vpcId }
    }
}
