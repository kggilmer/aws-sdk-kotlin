// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateNetworkAclResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the network ACL.
     */
    val networkAcl: NetworkAcl? = builder.networkAcl

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateNetworkAclResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateNetworkAclResponse(")
        append("networkAcl=$networkAcl)")
    }

    override fun hashCode(): kotlin.Int {
        var result = networkAcl?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateNetworkAclResponse

        if (networkAcl != other.networkAcl) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateNetworkAclResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateNetworkAclResponse
        /**
         * Information about the network ACL.
         */
        fun networkAcl(networkAcl: NetworkAcl): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the network ACL.
         */
        var networkAcl: NetworkAcl?

        fun build(): CreateNetworkAclResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.NetworkAcl] inside the given [block]
         */
        fun networkAcl(block: NetworkAcl.DslBuilder.() -> kotlin.Unit) {
            this.networkAcl = NetworkAcl.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var networkAcl: NetworkAcl? = null

        constructor(x: CreateNetworkAclResponse) : this() {
            this.networkAcl = x.networkAcl
        }

        override fun build(): CreateNetworkAclResponse = CreateNetworkAclResponse(this)
        override fun networkAcl(networkAcl: NetworkAcl): FluentBuilder = apply { this.networkAcl = networkAcl }
    }
}
