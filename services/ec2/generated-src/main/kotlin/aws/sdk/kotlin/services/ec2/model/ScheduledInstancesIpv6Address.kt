// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an IPv6 address.
 */
class ScheduledInstancesIpv6Address private constructor(builder: BuilderImpl) {
    /**
     * The IPv6 address.
     */
    val ipv6Address: String? = builder.ipv6Address

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ScheduledInstancesIpv6Address = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ScheduledInstancesIpv6Address(")
        append("ipv6Address=$ipv6Address)")
    }

    override fun hashCode(): kotlin.Int {
        var result = ipv6Address?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ScheduledInstancesIpv6Address

        if (ipv6Address != other.ipv6Address) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ScheduledInstancesIpv6Address = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ScheduledInstancesIpv6Address
        /**
         * The IPv6 address.
         */
        fun ipv6Address(ipv6Address: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The IPv6 address.
         */
        var ipv6Address: String?

        fun build(): ScheduledInstancesIpv6Address
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var ipv6Address: String? = null

        constructor(x: ScheduledInstancesIpv6Address) : this() {
            this.ipv6Address = x.ipv6Address
        }

        override fun build(): ScheduledInstancesIpv6Address = ScheduledInstancesIpv6Address(this)
        override fun ipv6Address(ipv6Address: String): FluentBuilder = apply { this.ipv6Address = ipv6Address }
    }
}
