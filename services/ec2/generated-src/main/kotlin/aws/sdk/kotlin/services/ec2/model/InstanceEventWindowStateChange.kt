// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The state of the event window.
 */
class InstanceEventWindowStateChange private constructor(builder: BuilderImpl) {
    /**
     * The ID of the event window.
     */
    val instanceEventWindowId: String? = builder.instanceEventWindowId
    /**
     * The current state of the event window.
     */
    val state: InstanceEventWindowState? = builder.state

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InstanceEventWindowStateChange = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceEventWindowStateChange(")
        append("instanceEventWindowId=$instanceEventWindowId,")
        append("state=$state)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceEventWindowId?.hashCode() ?: 0
        result = 31 * result + (state?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InstanceEventWindowStateChange

        if (instanceEventWindowId != other.instanceEventWindowId) return false
        if (state != other.state) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InstanceEventWindowStateChange = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InstanceEventWindowStateChange
        /**
         * The ID of the event window.
         */
        fun instanceEventWindowId(instanceEventWindowId: String): FluentBuilder
        /**
         * The current state of the event window.
         */
        fun state(state: InstanceEventWindowState): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the event window.
         */
        var instanceEventWindowId: String?
        /**
         * The current state of the event window.
         */
        var state: InstanceEventWindowState?

        fun build(): InstanceEventWindowStateChange
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceEventWindowId: String? = null
        override var state: InstanceEventWindowState? = null

        constructor(x: InstanceEventWindowStateChange) : this() {
            this.instanceEventWindowId = x.instanceEventWindowId
            this.state = x.state
        }

        override fun build(): InstanceEventWindowStateChange = InstanceEventWindowStateChange(this)
        override fun instanceEventWindowId(instanceEventWindowId: String): FluentBuilder = apply { this.instanceEventWindowId = instanceEventWindowId }
        override fun state(state: InstanceEventWindowState): FluentBuilder = apply { this.state = state }
    }
}
