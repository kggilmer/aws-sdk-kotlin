// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class AnalysisStatus {

    abstract val value: kotlin.String

    object Failed : aws.sdk.kotlin.services.ec2.model.AnalysisStatus() {
        override val value: kotlin.String = "failed"
        override fun toString(): kotlin.String = value
    }

    object Running : aws.sdk.kotlin.services.ec2.model.AnalysisStatus() {
        override val value: kotlin.String = "running"
        override fun toString(): kotlin.String = value
    }

    object Succeeded : aws.sdk.kotlin.services.ec2.model.AnalysisStatus() {
        override val value: kotlin.String = "succeeded"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.AnalysisStatus() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.AnalysisStatus = when(str) {
            "failed" -> Failed
            "running" -> Running
            "succeeded" -> Succeeded
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.AnalysisStatus> = listOf(
            Failed,
            Running,
            Succeeded
        )
    }
}
