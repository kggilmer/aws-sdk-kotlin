// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyVpcPeeringConnectionOptionsResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the VPC peering connection options for the accepter VPC.
     */
    val accepterPeeringConnectionOptions: PeeringConnectionOptions? = builder.accepterPeeringConnectionOptions
    /**
     * Information about the VPC peering connection options for the requester VPC.
     */
    val requesterPeeringConnectionOptions: PeeringConnectionOptions? = builder.requesterPeeringConnectionOptions

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyVpcPeeringConnectionOptionsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyVpcPeeringConnectionOptionsResponse(")
        append("accepterPeeringConnectionOptions=$accepterPeeringConnectionOptions,")
        append("requesterPeeringConnectionOptions=$requesterPeeringConnectionOptions)")
    }

    override fun hashCode(): kotlin.Int {
        var result = accepterPeeringConnectionOptions?.hashCode() ?: 0
        result = 31 * result + (requesterPeeringConnectionOptions?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyVpcPeeringConnectionOptionsResponse

        if (accepterPeeringConnectionOptions != other.accepterPeeringConnectionOptions) return false
        if (requesterPeeringConnectionOptions != other.requesterPeeringConnectionOptions) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyVpcPeeringConnectionOptionsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyVpcPeeringConnectionOptionsResponse
        /**
         * Information about the VPC peering connection options for the accepter VPC.
         */
        fun accepterPeeringConnectionOptions(accepterPeeringConnectionOptions: PeeringConnectionOptions): FluentBuilder
        /**
         * Information about the VPC peering connection options for the requester VPC.
         */
        fun requesterPeeringConnectionOptions(requesterPeeringConnectionOptions: PeeringConnectionOptions): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the VPC peering connection options for the accepter VPC.
         */
        var accepterPeeringConnectionOptions: PeeringConnectionOptions?
        /**
         * Information about the VPC peering connection options for the requester VPC.
         */
        var requesterPeeringConnectionOptions: PeeringConnectionOptions?

        fun build(): ModifyVpcPeeringConnectionOptionsResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PeeringConnectionOptions] inside the given [block]
         */
        fun accepterPeeringConnectionOptions(block: PeeringConnectionOptions.DslBuilder.() -> kotlin.Unit) {
            this.accepterPeeringConnectionOptions = PeeringConnectionOptions.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PeeringConnectionOptions] inside the given [block]
         */
        fun requesterPeeringConnectionOptions(block: PeeringConnectionOptions.DslBuilder.() -> kotlin.Unit) {
            this.requesterPeeringConnectionOptions = PeeringConnectionOptions.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var accepterPeeringConnectionOptions: PeeringConnectionOptions? = null
        override var requesterPeeringConnectionOptions: PeeringConnectionOptions? = null

        constructor(x: ModifyVpcPeeringConnectionOptionsResponse) : this() {
            this.accepterPeeringConnectionOptions = x.accepterPeeringConnectionOptions
            this.requesterPeeringConnectionOptions = x.requesterPeeringConnectionOptions
        }

        override fun build(): ModifyVpcPeeringConnectionOptionsResponse = ModifyVpcPeeringConnectionOptionsResponse(this)
        override fun accepterPeeringConnectionOptions(accepterPeeringConnectionOptions: PeeringConnectionOptions): FluentBuilder = apply { this.accepterPeeringConnectionOptions = accepterPeeringConnectionOptions }
        override fun requesterPeeringConnectionOptions(requesterPeeringConnectionOptions: PeeringConnectionOptions): FluentBuilder = apply { this.requesterPeeringConnectionOptions = requesterPeeringConnectionOptions }
    }
}
