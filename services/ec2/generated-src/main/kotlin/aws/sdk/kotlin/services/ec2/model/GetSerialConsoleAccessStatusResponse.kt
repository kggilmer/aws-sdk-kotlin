// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class GetSerialConsoleAccessStatusResponse private constructor(builder: BuilderImpl) {
    /**
     * If true, access to the EC2 serial console of all instances is enabled for
     * your account. If false, access to the EC2 serial console of all instances
     * is disabled for your account.
     */
    val serialConsoleAccessEnabled: Boolean? = builder.serialConsoleAccessEnabled

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetSerialConsoleAccessStatusResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetSerialConsoleAccessStatusResponse(")
        append("serialConsoleAccessEnabled=$serialConsoleAccessEnabled)")
    }

    override fun hashCode(): kotlin.Int {
        var result = serialConsoleAccessEnabled?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetSerialConsoleAccessStatusResponse

        if (serialConsoleAccessEnabled != other.serialConsoleAccessEnabled) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetSerialConsoleAccessStatusResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetSerialConsoleAccessStatusResponse
        /**
         * If true, access to the EC2 serial console of all instances is enabled for
         * your account. If false, access to the EC2 serial console of all instances
         * is disabled for your account.
         */
        fun serialConsoleAccessEnabled(serialConsoleAccessEnabled: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * If true, access to the EC2 serial console of all instances is enabled for
         * your account. If false, access to the EC2 serial console of all instances
         * is disabled for your account.
         */
        var serialConsoleAccessEnabled: Boolean?

        fun build(): GetSerialConsoleAccessStatusResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var serialConsoleAccessEnabled: Boolean? = null

        constructor(x: GetSerialConsoleAccessStatusResponse) : this() {
            this.serialConsoleAccessEnabled = x.serialConsoleAccessEnabled
        }

        override fun build(): GetSerialConsoleAccessStatusResponse = GetSerialConsoleAccessStatusResponse(this)
        override fun serialConsoleAccessEnabled(serialConsoleAccessEnabled: Boolean): FluentBuilder = apply { this.serialConsoleAccessEnabled = serialConsoleAccessEnabled }
    }
}
