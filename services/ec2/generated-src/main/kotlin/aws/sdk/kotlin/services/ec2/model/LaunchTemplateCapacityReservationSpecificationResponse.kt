// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Information about the Capacity Reservation targeting option.
 */
class LaunchTemplateCapacityReservationSpecificationResponse private constructor(builder: BuilderImpl) {
    /**
     * Indicates the instance's Capacity Reservation preferences. Possible preferences include:
     * open - The instance can run in any open Capacity Reservation that has matching attributes
     * (instance type, platform, Availability Zone).
     * none - The instance avoids running in a Capacity Reservation even if one is available. The instance
     * runs in On-Demand capacity.
     */
    val capacityReservationPreference: CapacityReservationPreference? = builder.capacityReservationPreference
    /**
     * Information about the target Capacity Reservation or Capacity Reservation group.
     */
    val capacityReservationTarget: CapacityReservationTargetResponse? = builder.capacityReservationTarget

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LaunchTemplateCapacityReservationSpecificationResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplateCapacityReservationSpecificationResponse(")
        append("capacityReservationPreference=$capacityReservationPreference,")
        append("capacityReservationTarget=$capacityReservationTarget)")
    }

    override fun hashCode(): kotlin.Int {
        var result = capacityReservationPreference?.hashCode() ?: 0
        result = 31 * result + (capacityReservationTarget?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LaunchTemplateCapacityReservationSpecificationResponse

        if (capacityReservationPreference != other.capacityReservationPreference) return false
        if (capacityReservationTarget != other.capacityReservationTarget) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LaunchTemplateCapacityReservationSpecificationResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LaunchTemplateCapacityReservationSpecificationResponse
        /**
         * Indicates the instance's Capacity Reservation preferences. Possible preferences include:
         * open - The instance can run in any open Capacity Reservation that has matching attributes
         * (instance type, platform, Availability Zone).
         * none - The instance avoids running in a Capacity Reservation even if one is available. The instance
         * runs in On-Demand capacity.
         */
        fun capacityReservationPreference(capacityReservationPreference: CapacityReservationPreference): FluentBuilder
        /**
         * Information about the target Capacity Reservation or Capacity Reservation group.
         */
        fun capacityReservationTarget(capacityReservationTarget: CapacityReservationTargetResponse): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates the instance's Capacity Reservation preferences. Possible preferences include:
         * open - The instance can run in any open Capacity Reservation that has matching attributes
         * (instance type, platform, Availability Zone).
         * none - The instance avoids running in a Capacity Reservation even if one is available. The instance
         * runs in On-Demand capacity.
         */
        var capacityReservationPreference: CapacityReservationPreference?
        /**
         * Information about the target Capacity Reservation or Capacity Reservation group.
         */
        var capacityReservationTarget: CapacityReservationTargetResponse?

        fun build(): LaunchTemplateCapacityReservationSpecificationResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.CapacityReservationTargetResponse] inside the given [block]
         */
        fun capacityReservationTarget(block: CapacityReservationTargetResponse.DslBuilder.() -> kotlin.Unit) {
            this.capacityReservationTarget = CapacityReservationTargetResponse.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var capacityReservationPreference: CapacityReservationPreference? = null
        override var capacityReservationTarget: CapacityReservationTargetResponse? = null

        constructor(x: LaunchTemplateCapacityReservationSpecificationResponse) : this() {
            this.capacityReservationPreference = x.capacityReservationPreference
            this.capacityReservationTarget = x.capacityReservationTarget
        }

        override fun build(): LaunchTemplateCapacityReservationSpecificationResponse = LaunchTemplateCapacityReservationSpecificationResponse(this)
        override fun capacityReservationPreference(capacityReservationPreference: CapacityReservationPreference): FluentBuilder = apply { this.capacityReservationPreference = capacityReservationPreference }
        override fun capacityReservationTarget(capacityReservationTarget: CapacityReservationTargetResponse): FluentBuilder = apply { this.capacityReservationTarget = capacityReservationTarget }
    }
}
