// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateInternetGatewayResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the internet gateway.
     */
    val internetGateway: InternetGateway? = builder.internetGateway

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateInternetGatewayResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateInternetGatewayResponse(")
        append("internetGateway=$internetGateway)")
    }

    override fun hashCode(): kotlin.Int {
        var result = internetGateway?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateInternetGatewayResponse

        if (internetGateway != other.internetGateway) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateInternetGatewayResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateInternetGatewayResponse
        /**
         * Information about the internet gateway.
         */
        fun internetGateway(internetGateway: InternetGateway): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the internet gateway.
         */
        var internetGateway: InternetGateway?

        fun build(): CreateInternetGatewayResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.InternetGateway] inside the given [block]
         */
        fun internetGateway(block: InternetGateway.DslBuilder.() -> kotlin.Unit) {
            this.internetGateway = InternetGateway.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var internetGateway: InternetGateway? = null

        constructor(x: CreateInternetGatewayResponse) : this() {
            this.internetGateway = x.internetGateway
        }

        override fun build(): CreateInternetGatewayResponse = CreateInternetGatewayResponse(this)
        override fun internetGateway(internetGateway: InternetGateway): FluentBuilder = apply { this.internetGateway = internetGateway }
    }
}
