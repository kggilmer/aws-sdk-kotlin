// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ImportClientVpnClientCertificateRevocationListRequest private constructor(builder: BuilderImpl) {
    /**
     * The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List in the
     * Client VPN Administrator Guide.
     */
    val certificateRevocationList: String? = builder.certificateRevocationList
    /**
     * The ID of the Client VPN endpoint to which the client certificate revocation list applies.
     */
    val clientVpnEndpointId: String? = builder.clientVpnEndpointId
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ImportClientVpnClientCertificateRevocationListRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ImportClientVpnClientCertificateRevocationListRequest(")
        append("certificateRevocationList=$certificateRevocationList,")
        append("clientVpnEndpointId=$clientVpnEndpointId,")
        append("dryRun=$dryRun)")
    }

    override fun hashCode(): kotlin.Int {
        var result = certificateRevocationList?.hashCode() ?: 0
        result = 31 * result + (clientVpnEndpointId?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ImportClientVpnClientCertificateRevocationListRequest

        if (certificateRevocationList != other.certificateRevocationList) return false
        if (clientVpnEndpointId != other.clientVpnEndpointId) return false
        if (dryRun != other.dryRun) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ImportClientVpnClientCertificateRevocationListRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ImportClientVpnClientCertificateRevocationListRequest
        /**
         * The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List in the
         * Client VPN Administrator Guide.
         */
        fun certificateRevocationList(certificateRevocationList: String): FluentBuilder
        /**
         * The ID of the Client VPN endpoint to which the client certificate revocation list applies.
         */
        fun clientVpnEndpointId(clientVpnEndpointId: String): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List in the
         * Client VPN Administrator Guide.
         */
        var certificateRevocationList: String?
        /**
         * The ID of the Client VPN endpoint to which the client certificate revocation list applies.
         */
        var clientVpnEndpointId: String?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?

        fun build(): ImportClientVpnClientCertificateRevocationListRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var certificateRevocationList: String? = null
        override var clientVpnEndpointId: String? = null
        override var dryRun: Boolean? = null

        constructor(x: ImportClientVpnClientCertificateRevocationListRequest) : this() {
            this.certificateRevocationList = x.certificateRevocationList
            this.clientVpnEndpointId = x.clientVpnEndpointId
            this.dryRun = x.dryRun
        }

        override fun build(): ImportClientVpnClientCertificateRevocationListRequest = ImportClientVpnClientCertificateRevocationListRequest(this)
        override fun certificateRevocationList(certificateRevocationList: String): FluentBuilder = apply { this.certificateRevocationList = certificateRevocationList }
        override fun clientVpnEndpointId(clientVpnEndpointId: String): FluentBuilder = apply { this.clientVpnEndpointId = clientVpnEndpointId }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
    }
}
