// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class RestoreManagedPrefixListVersionRequest private constructor(builder: BuilderImpl) {
    /**
     * The current version number for the prefix list.
     */
    val currentVersion: Long? = builder.currentVersion
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The ID of the prefix list.
     */
    val prefixListId: String? = builder.prefixListId
    /**
     * The version to restore.
     */
    val previousVersion: Long? = builder.previousVersion

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): RestoreManagedPrefixListVersionRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("RestoreManagedPrefixListVersionRequest(")
        append("currentVersion=$currentVersion,")
        append("dryRun=$dryRun,")
        append("prefixListId=$prefixListId,")
        append("previousVersion=$previousVersion)")
    }

    override fun hashCode(): kotlin.Int {
        var result = currentVersion?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (prefixListId?.hashCode() ?: 0)
        result = 31 * result + (previousVersion?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as RestoreManagedPrefixListVersionRequest

        if (currentVersion != other.currentVersion) return false
        if (dryRun != other.dryRun) return false
        if (prefixListId != other.prefixListId) return false
        if (previousVersion != other.previousVersion) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): RestoreManagedPrefixListVersionRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): RestoreManagedPrefixListVersionRequest
        /**
         * The current version number for the prefix list.
         */
        fun currentVersion(currentVersion: Long): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The ID of the prefix list.
         */
        fun prefixListId(prefixListId: String): FluentBuilder
        /**
         * The version to restore.
         */
        fun previousVersion(previousVersion: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The current version number for the prefix list.
         */
        var currentVersion: Long?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The ID of the prefix list.
         */
        var prefixListId: String?
        /**
         * The version to restore.
         */
        var previousVersion: Long?

        fun build(): RestoreManagedPrefixListVersionRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var currentVersion: Long? = null
        override var dryRun: Boolean? = null
        override var prefixListId: String? = null
        override var previousVersion: Long? = null

        constructor(x: RestoreManagedPrefixListVersionRequest) : this() {
            this.currentVersion = x.currentVersion
            this.dryRun = x.dryRun
            this.prefixListId = x.prefixListId
            this.previousVersion = x.previousVersion
        }

        override fun build(): RestoreManagedPrefixListVersionRequest = RestoreManagedPrefixListVersionRequest(this)
        override fun currentVersion(currentVersion: Long): FluentBuilder = apply { this.currentVersion = currentVersion }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun prefixListId(prefixListId: String): FluentBuilder = apply { this.prefixListId = prefixListId }
        override fun previousVersion(previousVersion: Long): FluentBuilder = apply { this.previousVersion = previousVersion }
    }
}
