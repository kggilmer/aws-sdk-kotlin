// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a local gateway route table.
 */
class LocalGatewayRouteTable private constructor(builder: BuilderImpl) {
    /**
     * The ID of the local gateway.
     */
    val localGatewayId: String? = builder.localGatewayId
    /**
     * The Amazon Resource Name (ARN) of the local gateway route table.
     */
    val localGatewayRouteTableArn: String? = builder.localGatewayRouteTableArn
    /**
     * The ID of the local gateway route table.
     */
    val localGatewayRouteTableId: String? = builder.localGatewayRouteTableId
    /**
     * The Amazon Resource Name (ARN) of the Outpost.
     */
    val outpostArn: String? = builder.outpostArn
    /**
     * The ID of the Amazon Web Services account that owns the local gateway route table.
     */
    val ownerId: String? = builder.ownerId
    /**
     * The state of the local gateway route table.
     */
    val state: String? = builder.state
    /**
     * The tags assigned to the local gateway route table.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LocalGatewayRouteTable = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LocalGatewayRouteTable(")
        append("localGatewayId=$localGatewayId,")
        append("localGatewayRouteTableArn=$localGatewayRouteTableArn,")
        append("localGatewayRouteTableId=$localGatewayRouteTableId,")
        append("outpostArn=$outpostArn,")
        append("ownerId=$ownerId,")
        append("state=$state,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = localGatewayId?.hashCode() ?: 0
        result = 31 * result + (localGatewayRouteTableArn?.hashCode() ?: 0)
        result = 31 * result + (localGatewayRouteTableId?.hashCode() ?: 0)
        result = 31 * result + (outpostArn?.hashCode() ?: 0)
        result = 31 * result + (ownerId?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LocalGatewayRouteTable

        if (localGatewayId != other.localGatewayId) return false
        if (localGatewayRouteTableArn != other.localGatewayRouteTableArn) return false
        if (localGatewayRouteTableId != other.localGatewayRouteTableId) return false
        if (outpostArn != other.outpostArn) return false
        if (ownerId != other.ownerId) return false
        if (state != other.state) return false
        if (tags != other.tags) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LocalGatewayRouteTable = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LocalGatewayRouteTable
        /**
         * The ID of the local gateway.
         */
        fun localGatewayId(localGatewayId: String): FluentBuilder
        /**
         * The Amazon Resource Name (ARN) of the local gateway route table.
         */
        fun localGatewayRouteTableArn(localGatewayRouteTableArn: String): FluentBuilder
        /**
         * The ID of the local gateway route table.
         */
        fun localGatewayRouteTableId(localGatewayRouteTableId: String): FluentBuilder
        /**
         * The Amazon Resource Name (ARN) of the Outpost.
         */
        fun outpostArn(outpostArn: String): FluentBuilder
        /**
         * The ID of the Amazon Web Services account that owns the local gateway route table.
         */
        fun ownerId(ownerId: String): FluentBuilder
        /**
         * The state of the local gateway route table.
         */
        fun state(state: String): FluentBuilder
        /**
         * The tags assigned to the local gateway route table.
         */
        fun tags(tags: List<Tag>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the local gateway.
         */
        var localGatewayId: String?
        /**
         * The Amazon Resource Name (ARN) of the local gateway route table.
         */
        var localGatewayRouteTableArn: String?
        /**
         * The ID of the local gateway route table.
         */
        var localGatewayRouteTableId: String?
        /**
         * The Amazon Resource Name (ARN) of the Outpost.
         */
        var outpostArn: String?
        /**
         * The ID of the Amazon Web Services account that owns the local gateway route table.
         */
        var ownerId: String?
        /**
         * The state of the local gateway route table.
         */
        var state: String?
        /**
         * The tags assigned to the local gateway route table.
         */
        var tags: List<Tag>?

        fun build(): LocalGatewayRouteTable
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var localGatewayId: String? = null
        override var localGatewayRouteTableArn: String? = null
        override var localGatewayRouteTableId: String? = null
        override var outpostArn: String? = null
        override var ownerId: String? = null
        override var state: String? = null
        override var tags: List<Tag>? = null

        constructor(x: LocalGatewayRouteTable) : this() {
            this.localGatewayId = x.localGatewayId
            this.localGatewayRouteTableArn = x.localGatewayRouteTableArn
            this.localGatewayRouteTableId = x.localGatewayRouteTableId
            this.outpostArn = x.outpostArn
            this.ownerId = x.ownerId
            this.state = x.state
            this.tags = x.tags
        }

        override fun build(): LocalGatewayRouteTable = LocalGatewayRouteTable(this)
        override fun localGatewayId(localGatewayId: String): FluentBuilder = apply { this.localGatewayId = localGatewayId }
        override fun localGatewayRouteTableArn(localGatewayRouteTableArn: String): FluentBuilder = apply { this.localGatewayRouteTableArn = localGatewayRouteTableArn }
        override fun localGatewayRouteTableId(localGatewayRouteTableId: String): FluentBuilder = apply { this.localGatewayRouteTableId = localGatewayRouteTableId }
        override fun outpostArn(outpostArn: String): FluentBuilder = apply { this.outpostArn = outpostArn }
        override fun ownerId(ownerId: String): FluentBuilder = apply { this.ownerId = ownerId }
        override fun state(state: String): FluentBuilder = apply { this.state = state }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
    }
}
