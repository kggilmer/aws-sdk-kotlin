// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DisassociateClientVpnTargetNetworkResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the target network association.
     */
    val associationId: String? = builder.associationId
    /**
     * The current state of the target network association.
     */
    val status: AssociationStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DisassociateClientVpnTargetNetworkResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DisassociateClientVpnTargetNetworkResponse(")
        append("associationId=$associationId,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associationId?.hashCode() ?: 0
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DisassociateClientVpnTargetNetworkResponse

        if (associationId != other.associationId) return false
        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DisassociateClientVpnTargetNetworkResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DisassociateClientVpnTargetNetworkResponse
        /**
         * The ID of the target network association.
         */
        fun associationId(associationId: String): FluentBuilder
        /**
         * The current state of the target network association.
         */
        fun status(status: AssociationStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the target network association.
         */
        var associationId: String?
        /**
         * The current state of the target network association.
         */
        var status: AssociationStatus?

        fun build(): DisassociateClientVpnTargetNetworkResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AssociationStatus] inside the given [block]
         */
        fun status(block: AssociationStatus.DslBuilder.() -> kotlin.Unit) {
            this.status = AssociationStatus.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var associationId: String? = null
        override var status: AssociationStatus? = null

        constructor(x: DisassociateClientVpnTargetNetworkResponse) : this() {
            this.associationId = x.associationId
            this.status = x.status
        }

        override fun build(): DisassociateClientVpnTargetNetworkResponse = DisassociateClientVpnTargetNetworkResponse(this)
        override fun associationId(associationId: String): FluentBuilder = apply { this.associationId = associationId }
        override fun status(status: AssociationStatus): FluentBuilder = apply { this.status = status }
    }
}
