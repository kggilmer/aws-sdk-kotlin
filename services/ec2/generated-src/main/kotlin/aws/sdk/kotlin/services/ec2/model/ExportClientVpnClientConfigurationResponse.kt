// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ExportClientVpnClientConfigurationResponse private constructor(builder: BuilderImpl) {
    /**
     * The contents of the Client VPN endpoint configuration file.
     */
    val clientConfiguration: String? = builder.clientConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ExportClientVpnClientConfigurationResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ExportClientVpnClientConfigurationResponse(")
        append("clientConfiguration=$clientConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientConfiguration?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExportClientVpnClientConfigurationResponse

        if (clientConfiguration != other.clientConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ExportClientVpnClientConfigurationResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ExportClientVpnClientConfigurationResponse
        /**
         * The contents of the Client VPN endpoint configuration file.
         */
        fun clientConfiguration(clientConfiguration: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The contents of the Client VPN endpoint configuration file.
         */
        var clientConfiguration: String?

        fun build(): ExportClientVpnClientConfigurationResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var clientConfiguration: String? = null

        constructor(x: ExportClientVpnClientConfigurationResponse) : this() {
            this.clientConfiguration = x.clientConfiguration
        }

        override fun build(): ExportClientVpnClientConfigurationResponse = ExportClientVpnClientConfigurationResponse(this)
        override fun clientConfiguration(clientConfiguration: String): FluentBuilder = apply { this.clientConfiguration = clientConfiguration }
    }
}
