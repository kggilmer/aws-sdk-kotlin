// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a path component.
 */
class AnalysisComponent private constructor(builder: BuilderImpl) {
    /**
     * The Amazon Resource Name (ARN) of the component.
     */
    val arn: String? = builder.arn
    /**
     * The ID of the component.
     */
    val id: String? = builder.id

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AnalysisComponent = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AnalysisComponent(")
        append("arn=$arn,")
        append("id=$id)")
    }

    override fun hashCode(): kotlin.Int {
        var result = arn?.hashCode() ?: 0
        result = 31 * result + (id?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AnalysisComponent

        if (arn != other.arn) return false
        if (id != other.id) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AnalysisComponent = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AnalysisComponent
        /**
         * The Amazon Resource Name (ARN) of the component.
         */
        fun arn(arn: String): FluentBuilder
        /**
         * The ID of the component.
         */
        fun id(id: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Amazon Resource Name (ARN) of the component.
         */
        var arn: String?
        /**
         * The ID of the component.
         */
        var id: String?

        fun build(): AnalysisComponent
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var arn: String? = null
        override var id: String? = null

        constructor(x: AnalysisComponent) : this() {
            this.arn = x.arn
            this.id = x.id
        }

        override fun build(): AnalysisComponent = AnalysisComponent(this)
        override fun arn(arn: String): FluentBuilder = apply { this.arn = arn }
        override fun id(id: String): FluentBuilder = apply { this.id = id }
    }
}
