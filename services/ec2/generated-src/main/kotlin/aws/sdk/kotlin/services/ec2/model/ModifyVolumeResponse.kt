// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyVolumeResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the volume modification.
     */
    val volumeModification: VolumeModification? = builder.volumeModification

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyVolumeResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyVolumeResponse(")
        append("volumeModification=$volumeModification)")
    }

    override fun hashCode(): kotlin.Int {
        var result = volumeModification?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyVolumeResponse

        if (volumeModification != other.volumeModification) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyVolumeResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyVolumeResponse
        /**
         * Information about the volume modification.
         */
        fun volumeModification(volumeModification: VolumeModification): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the volume modification.
         */
        var volumeModification: VolumeModification?

        fun build(): ModifyVolumeResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.VolumeModification] inside the given [block]
         */
        fun volumeModification(block: VolumeModification.DslBuilder.() -> kotlin.Unit) {
            this.volumeModification = VolumeModification.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var volumeModification: VolumeModification? = null

        constructor(x: ModifyVolumeResponse) : this() {
            this.volumeModification = x.volumeModification
        }

        override fun build(): ModifyVolumeResponse = ModifyVolumeResponse(this)
        override fun volumeModification(volumeModification: VolumeModification): FluentBuilder = apply { this.volumeModification = volumeModification }
    }
}
