// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a launch template and overrides.
 */
class LaunchTemplateConfig private constructor(builder: BuilderImpl) {
    /**
     * The launch template.
     */
    val launchTemplateSpecification: FleetLaunchTemplateSpecification? = builder.launchTemplateSpecification
    /**
     * Any parameters that you specify override the same parameters in the launch
     * template.
     */
    val overrides: List<LaunchTemplateOverrides>? = builder.overrides

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LaunchTemplateConfig = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplateConfig(")
        append("launchTemplateSpecification=$launchTemplateSpecification,")
        append("overrides=$overrides)")
    }

    override fun hashCode(): kotlin.Int {
        var result = launchTemplateSpecification?.hashCode() ?: 0
        result = 31 * result + (overrides?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LaunchTemplateConfig

        if (launchTemplateSpecification != other.launchTemplateSpecification) return false
        if (overrides != other.overrides) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LaunchTemplateConfig = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LaunchTemplateConfig
        /**
         * The launch template.
         */
        fun launchTemplateSpecification(launchTemplateSpecification: FleetLaunchTemplateSpecification): FluentBuilder
        /**
         * Any parameters that you specify override the same parameters in the launch
         * template.
         */
        fun overrides(overrides: List<LaunchTemplateOverrides>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The launch template.
         */
        var launchTemplateSpecification: FleetLaunchTemplateSpecification?
        /**
         * Any parameters that you specify override the same parameters in the launch
         * template.
         */
        var overrides: List<LaunchTemplateOverrides>?

        fun build(): LaunchTemplateConfig
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.FleetLaunchTemplateSpecification] inside the given [block]
         */
        fun launchTemplateSpecification(block: FleetLaunchTemplateSpecification.DslBuilder.() -> kotlin.Unit) {
            this.launchTemplateSpecification = FleetLaunchTemplateSpecification.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var launchTemplateSpecification: FleetLaunchTemplateSpecification? = null
        override var overrides: List<LaunchTemplateOverrides>? = null

        constructor(x: LaunchTemplateConfig) : this() {
            this.launchTemplateSpecification = x.launchTemplateSpecification
            this.overrides = x.overrides
        }

        override fun build(): LaunchTemplateConfig = LaunchTemplateConfig(this)
        override fun launchTemplateSpecification(launchTemplateSpecification: FleetLaunchTemplateSpecification): FluentBuilder = apply { this.launchTemplateSpecification = launchTemplateSpecification }
        override fun overrides(overrides: List<LaunchTemplateOverrides>): FluentBuilder = apply { this.overrides = overrides }
    }
}
