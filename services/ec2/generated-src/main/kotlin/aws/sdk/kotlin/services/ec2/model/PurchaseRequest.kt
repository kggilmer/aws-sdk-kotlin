// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a request to purchase Scheduled Instances.
 */
class PurchaseRequest private constructor(builder: BuilderImpl) {
    /**
     * The number of instances.
     */
    val instanceCount: Int? = builder.instanceCount
    /**
     * The purchase token.
     */
    val purchaseToken: String? = builder.purchaseToken

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PurchaseRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PurchaseRequest(")
        append("instanceCount=$instanceCount,")
        append("purchaseToken=$purchaseToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceCount ?: 0
        result = 31 * result + (purchaseToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PurchaseRequest

        if (instanceCount != other.instanceCount) return false
        if (purchaseToken != other.purchaseToken) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PurchaseRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PurchaseRequest
        /**
         * The number of instances.
         */
        fun instanceCount(instanceCount: Int): FluentBuilder
        /**
         * The purchase token.
         */
        fun purchaseToken(purchaseToken: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The number of instances.
         */
        var instanceCount: Int?
        /**
         * The purchase token.
         */
        var purchaseToken: String?

        fun build(): PurchaseRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceCount: Int? = null
        override var purchaseToken: String? = null

        constructor(x: PurchaseRequest) : this() {
            this.instanceCount = x.instanceCount
            this.purchaseToken = x.purchaseToken
        }

        override fun build(): PurchaseRequest = PurchaseRequest(this)
        override fun instanceCount(instanceCount: Int): FluentBuilder = apply { this.instanceCount = instanceCount }
        override fun purchaseToken(purchaseToken: String): FluentBuilder = apply { this.purchaseToken = purchaseToken }
    }
}
