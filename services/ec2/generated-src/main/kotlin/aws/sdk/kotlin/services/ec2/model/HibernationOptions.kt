// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Indicates whether your instance is configured for hibernation. This parameter is valid
 * only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
 * prerequisites. For
 * more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance in the
 * Amazon EC2 User Guide.
 */
class HibernationOptions private constructor(builder: BuilderImpl) {
    /**
     * If this parameter is set to true, your instance is enabled for
     * hibernation; otherwise, it is not enabled for hibernation.
     */
    val configured: Boolean? = builder.configured

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): HibernationOptions = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("HibernationOptions(")
        append("configured=$configured)")
    }

    override fun hashCode(): kotlin.Int {
        var result = configured?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as HibernationOptions

        if (configured != other.configured) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): HibernationOptions = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): HibernationOptions
        /**
         * If this parameter is set to true, your instance is enabled for
         * hibernation; otherwise, it is not enabled for hibernation.
         */
        fun configured(configured: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * If this parameter is set to true, your instance is enabled for
         * hibernation; otherwise, it is not enabled for hibernation.
         */
        var configured: Boolean?

        fun build(): HibernationOptions
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var configured: Boolean? = null

        constructor(x: HibernationOptions) : this() {
            this.configured = x.configured
        }

        override fun build(): HibernationOptions = HibernationOptions(this)
        override fun configured(configured: Boolean): FluentBuilder = apply { this.configured = configured }
    }
}
