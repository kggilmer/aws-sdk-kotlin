// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the output of DescribeSpotFleetInstances.
 */
class DescribeSpotFleetInstancesResponse private constructor(builder: BuilderImpl) {
    /**
     * The running instances. This list is refreshed periodically and might be out of
     * date.
     */
    val activeInstances: List<ActiveInstance>? = builder.activeInstances
    /**
     * The token required to retrieve the next set of results. This value is
     * null when there are no more results to return.
     */
    val nextToken: String? = builder.nextToken
    /**
     * The ID of the Spot Fleet request.
     */
    val spotFleetRequestId: String? = builder.spotFleetRequestId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeSpotFleetInstancesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeSpotFleetInstancesResponse(")
        append("activeInstances=$activeInstances,")
        append("nextToken=$nextToken,")
        append("spotFleetRequestId=$spotFleetRequestId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = activeInstances?.hashCode() ?: 0
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (spotFleetRequestId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeSpotFleetInstancesResponse

        if (activeInstances != other.activeInstances) return false
        if (nextToken != other.nextToken) return false
        if (spotFleetRequestId != other.spotFleetRequestId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeSpotFleetInstancesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeSpotFleetInstancesResponse
        /**
         * The running instances. This list is refreshed periodically and might be out of
         * date.
         */
        fun activeInstances(activeInstances: List<ActiveInstance>): FluentBuilder
        /**
         * The token required to retrieve the next set of results. This value is
         * null when there are no more results to return.
         */
        fun nextToken(nextToken: String): FluentBuilder
        /**
         * The ID of the Spot Fleet request.
         */
        fun spotFleetRequestId(spotFleetRequestId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The running instances. This list is refreshed periodically and might be out of
         * date.
         */
        var activeInstances: List<ActiveInstance>?
        /**
         * The token required to retrieve the next set of results. This value is
         * null when there are no more results to return.
         */
        var nextToken: String?
        /**
         * The ID of the Spot Fleet request.
         */
        var spotFleetRequestId: String?

        fun build(): DescribeSpotFleetInstancesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var activeInstances: List<ActiveInstance>? = null
        override var nextToken: String? = null
        override var spotFleetRequestId: String? = null

        constructor(x: DescribeSpotFleetInstancesResponse) : this() {
            this.activeInstances = x.activeInstances
            this.nextToken = x.nextToken
            this.spotFleetRequestId = x.spotFleetRequestId
        }

        override fun build(): DescribeSpotFleetInstancesResponse = DescribeSpotFleetInstancesResponse(this)
        override fun activeInstances(activeInstances: List<ActiveInstance>): FluentBuilder = apply { this.activeInstances = activeInstances }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
        override fun spotFleetRequestId(spotFleetRequestId: String): FluentBuilder = apply { this.spotFleetRequestId = spotFleetRequestId }
    }
}
