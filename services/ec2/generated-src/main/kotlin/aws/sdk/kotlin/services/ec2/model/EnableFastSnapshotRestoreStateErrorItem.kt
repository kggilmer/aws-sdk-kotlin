// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains information about an error that occurred when enabling fast snapshot restores.
 */
class EnableFastSnapshotRestoreStateErrorItem private constructor(builder: BuilderImpl) {
    /**
     * The Availability Zone.
     */
    val availabilityZone: String? = builder.availabilityZone
    /**
     * The error.
     */
    val error: EnableFastSnapshotRestoreStateError? = builder.error

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): EnableFastSnapshotRestoreStateErrorItem = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("EnableFastSnapshotRestoreStateErrorItem(")
        append("availabilityZone=$availabilityZone,")
        append("error=$error)")
    }

    override fun hashCode(): kotlin.Int {
        var result = availabilityZone?.hashCode() ?: 0
        result = 31 * result + (error?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as EnableFastSnapshotRestoreStateErrorItem

        if (availabilityZone != other.availabilityZone) return false
        if (error != other.error) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): EnableFastSnapshotRestoreStateErrorItem = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): EnableFastSnapshotRestoreStateErrorItem
        /**
         * The Availability Zone.
         */
        fun availabilityZone(availabilityZone: String): FluentBuilder
        /**
         * The error.
         */
        fun error(error: EnableFastSnapshotRestoreStateError): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Availability Zone.
         */
        var availabilityZone: String?
        /**
         * The error.
         */
        var error: EnableFastSnapshotRestoreStateError?

        fun build(): EnableFastSnapshotRestoreStateErrorItem
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.EnableFastSnapshotRestoreStateError] inside the given [block]
         */
        fun error(block: EnableFastSnapshotRestoreStateError.DslBuilder.() -> kotlin.Unit) {
            this.error = EnableFastSnapshotRestoreStateError.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var availabilityZone: String? = null
        override var error: EnableFastSnapshotRestoreStateError? = null

        constructor(x: EnableFastSnapshotRestoreStateErrorItem) : this() {
            this.availabilityZone = x.availabilityZone
            this.error = x.error
        }

        override fun build(): EnableFastSnapshotRestoreStateErrorItem = EnableFastSnapshotRestoreStateErrorItem(this)
        override fun availabilityZone(availabilityZone: String): FluentBuilder = apply { this.availabilityZone = availabilityZone }
        override fun error(error: EnableFastSnapshotRestoreStateError): FluentBuilder = apply { this.error = error }
    }
}
