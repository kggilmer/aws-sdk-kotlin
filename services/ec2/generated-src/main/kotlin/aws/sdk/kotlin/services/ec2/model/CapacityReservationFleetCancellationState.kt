// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a Capacity Reservation Fleet that was successfully cancelled.
 */
class CapacityReservationFleetCancellationState private constructor(builder: BuilderImpl) {
    /**
     * The ID of the Capacity Reservation Fleet that was successfully cancelled.
     */
    val capacityReservationFleetId: String? = builder.capacityReservationFleetId
    /**
     * The current state of the Capacity Reservation Fleet.
     */
    val currentFleetState: CapacityReservationFleetState? = builder.currentFleetState
    /**
     * The previous state of the Capacity Reservation Fleet.
     */
    val previousFleetState: CapacityReservationFleetState? = builder.previousFleetState

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CapacityReservationFleetCancellationState = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CapacityReservationFleetCancellationState(")
        append("capacityReservationFleetId=$capacityReservationFleetId,")
        append("currentFleetState=$currentFleetState,")
        append("previousFleetState=$previousFleetState)")
    }

    override fun hashCode(): kotlin.Int {
        var result = capacityReservationFleetId?.hashCode() ?: 0
        result = 31 * result + (currentFleetState?.hashCode() ?: 0)
        result = 31 * result + (previousFleetState?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CapacityReservationFleetCancellationState

        if (capacityReservationFleetId != other.capacityReservationFleetId) return false
        if (currentFleetState != other.currentFleetState) return false
        if (previousFleetState != other.previousFleetState) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CapacityReservationFleetCancellationState = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CapacityReservationFleetCancellationState
        /**
         * The ID of the Capacity Reservation Fleet that was successfully cancelled.
         */
        fun capacityReservationFleetId(capacityReservationFleetId: String): FluentBuilder
        /**
         * The current state of the Capacity Reservation Fleet.
         */
        fun currentFleetState(currentFleetState: CapacityReservationFleetState): FluentBuilder
        /**
         * The previous state of the Capacity Reservation Fleet.
         */
        fun previousFleetState(previousFleetState: CapacityReservationFleetState): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the Capacity Reservation Fleet that was successfully cancelled.
         */
        var capacityReservationFleetId: String?
        /**
         * The current state of the Capacity Reservation Fleet.
         */
        var currentFleetState: CapacityReservationFleetState?
        /**
         * The previous state of the Capacity Reservation Fleet.
         */
        var previousFleetState: CapacityReservationFleetState?

        fun build(): CapacityReservationFleetCancellationState
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var capacityReservationFleetId: String? = null
        override var currentFleetState: CapacityReservationFleetState? = null
        override var previousFleetState: CapacityReservationFleetState? = null

        constructor(x: CapacityReservationFleetCancellationState) : this() {
            this.capacityReservationFleetId = x.capacityReservationFleetId
            this.currentFleetState = x.currentFleetState
            this.previousFleetState = x.previousFleetState
        }

        override fun build(): CapacityReservationFleetCancellationState = CapacityReservationFleetCancellationState(this)
        override fun capacityReservationFleetId(capacityReservationFleetId: String): FluentBuilder = apply { this.capacityReservationFleetId = capacityReservationFleetId }
        override fun currentFleetState(currentFleetState: CapacityReservationFleetState): FluentBuilder = apply { this.currentFleetState = currentFleetState }
        override fun previousFleetState(previousFleetState: CapacityReservationFleetState): FluentBuilder = apply { this.previousFleetState = previousFleetState }
    }
}
