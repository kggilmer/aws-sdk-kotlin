// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribeBundleTasksResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the bundle tasks.
     */
    val bundleTasks: List<BundleTask>? = builder.bundleTasks

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeBundleTasksResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeBundleTasksResponse(")
        append("bundleTasks=$bundleTasks)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bundleTasks?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeBundleTasksResponse

        if (bundleTasks != other.bundleTasks) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeBundleTasksResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeBundleTasksResponse
        /**
         * Information about the bundle tasks.
         */
        fun bundleTasks(bundleTasks: List<BundleTask>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the bundle tasks.
         */
        var bundleTasks: List<BundleTask>?

        fun build(): DescribeBundleTasksResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bundleTasks: List<BundleTask>? = null

        constructor(x: DescribeBundleTasksResponse) : this() {
            this.bundleTasks = x.bundleTasks
        }

        override fun build(): DescribeBundleTasksResponse = DescribeBundleTasksResponse(this)
        override fun bundleTasks(bundleTasks: List<BundleTask>): FluentBuilder = apply { this.bundleTasks = bundleTasks }
    }
}
