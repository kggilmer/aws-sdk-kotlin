// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class RevokeClientVpnIngressResponse private constructor(builder: BuilderImpl) {
    /**
     * The current state of the authorization rule.
     */
    val status: ClientVpnAuthorizationRuleStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): RevokeClientVpnIngressResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("RevokeClientVpnIngressResponse(")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = status?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as RevokeClientVpnIngressResponse

        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): RevokeClientVpnIngressResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): RevokeClientVpnIngressResponse
        /**
         * The current state of the authorization rule.
         */
        fun status(status: ClientVpnAuthorizationRuleStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The current state of the authorization rule.
         */
        var status: ClientVpnAuthorizationRuleStatus?

        fun build(): RevokeClientVpnIngressResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ClientVpnAuthorizationRuleStatus] inside the given [block]
         */
        fun status(block: ClientVpnAuthorizationRuleStatus.DslBuilder.() -> kotlin.Unit) {
            this.status = ClientVpnAuthorizationRuleStatus.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var status: ClientVpnAuthorizationRuleStatus? = null

        constructor(x: RevokeClientVpnIngressResponse) : this() {
            this.status = x.status
        }

        override fun build(): RevokeClientVpnIngressResponse = RevokeClientVpnIngressResponse(this)
        override fun status(status: ClientVpnAuthorizationRuleStatus): FluentBuilder = apply { this.status = status }
    }
}
