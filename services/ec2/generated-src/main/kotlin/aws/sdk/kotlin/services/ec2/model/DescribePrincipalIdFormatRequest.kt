// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribePrincipalIdFormatRequest private constructor(builder: BuilderImpl) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The maximum number of results to return in a single call. To retrieve the remaining
     * results, make another call with the returned NextToken value.
     */
    val maxResults: Int? = builder.maxResults
    /**
     * The token to request the next page of results.
     */
    val nextToken: String? = builder.nextToken
    /**
     * The type of resource: bundle |
     * conversion-task | customer-gateway | dhcp-options |
     * elastic-ip-allocation | elastic-ip-association |
     * export-task | flow-log | image |
     * import-task | instance | internet-gateway |
     * network-acl | network-acl-association |
     * network-interface | network-interface-attachment |
     * prefix-list | reservation | route-table |
     * route-table-association | security-group |
     * snapshot | subnet |
     * subnet-cidr-block-association | volume | vpc
     * | vpc-cidr-block-association | vpc-endpoint |
     * vpc-peering-connection | vpn-connection | vpn-gateway
     */
    val resources: List<String>? = builder.resources

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribePrincipalIdFormatRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribePrincipalIdFormatRequest(")
        append("dryRun=$dryRun,")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken,")
        append("resources=$resources)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (resources?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribePrincipalIdFormatRequest

        if (dryRun != other.dryRun) return false
        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false
        if (resources != other.resources) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribePrincipalIdFormatRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribePrincipalIdFormatRequest
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The maximum number of results to return in a single call. To retrieve the remaining
         * results, make another call with the returned NextToken value.
         */
        fun maxResults(maxResults: Int): FluentBuilder
        /**
         * The token to request the next page of results.
         */
        fun nextToken(nextToken: String): FluentBuilder
        /**
         * The type of resource: bundle |
         * conversion-task | customer-gateway | dhcp-options |
         * elastic-ip-allocation | elastic-ip-association |
         * export-task | flow-log | image |
         * import-task | instance | internet-gateway |
         * network-acl | network-acl-association |
         * network-interface | network-interface-attachment |
         * prefix-list | reservation | route-table |
         * route-table-association | security-group |
         * snapshot | subnet |
         * subnet-cidr-block-association | volume | vpc
         * | vpc-cidr-block-association | vpc-endpoint |
         * vpc-peering-connection | vpn-connection | vpn-gateway
         */
        fun resources(resources: List<String>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The maximum number of results to return in a single call. To retrieve the remaining
         * results, make another call with the returned NextToken value.
         */
        var maxResults: Int?
        /**
         * The token to request the next page of results.
         */
        var nextToken: String?
        /**
         * The type of resource: bundle |
         * conversion-task | customer-gateway | dhcp-options |
         * elastic-ip-allocation | elastic-ip-association |
         * export-task | flow-log | image |
         * import-task | instance | internet-gateway |
         * network-acl | network-acl-association |
         * network-interface | network-interface-attachment |
         * prefix-list | reservation | route-table |
         * route-table-association | security-group |
         * snapshot | subnet |
         * subnet-cidr-block-association | volume | vpc
         * | vpc-cidr-block-association | vpc-endpoint |
         * vpc-peering-connection | vpn-connection | vpn-gateway
         */
        var resources: List<String>?

        fun build(): DescribePrincipalIdFormatRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var dryRun: Boolean? = null
        override var maxResults: Int? = null
        override var nextToken: String? = null
        override var resources: List<String>? = null

        constructor(x: DescribePrincipalIdFormatRequest) : this() {
            this.dryRun = x.dryRun
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
            this.resources = x.resources
        }

        override fun build(): DescribePrincipalIdFormatRequest = DescribePrincipalIdFormatRequest(this)
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun maxResults(maxResults: Int): FluentBuilder = apply { this.maxResults = maxResults }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
        override fun resources(resources: List<String>): FluentBuilder = apply { this.resources = resources }
    }
}
