// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the status of a moving Elastic IP address.
 */
class MovingAddressStatus private constructor(builder: BuilderImpl) {
    /**
     * The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.
     */
    val moveStatus: MoveStatus? = builder.moveStatus
    /**
     * The Elastic IP address.
     */
    val publicIp: String? = builder.publicIp

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): MovingAddressStatus = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("MovingAddressStatus(")
        append("moveStatus=$moveStatus,")
        append("publicIp=$publicIp)")
    }

    override fun hashCode(): kotlin.Int {
        var result = moveStatus?.hashCode() ?: 0
        result = 31 * result + (publicIp?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as MovingAddressStatus

        if (moveStatus != other.moveStatus) return false
        if (publicIp != other.publicIp) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): MovingAddressStatus = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): MovingAddressStatus
        /**
         * The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.
         */
        fun moveStatus(moveStatus: MoveStatus): FluentBuilder
        /**
         * The Elastic IP address.
         */
        fun publicIp(publicIp: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.
         */
        var moveStatus: MoveStatus?
        /**
         * The Elastic IP address.
         */
        var publicIp: String?

        fun build(): MovingAddressStatus
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var moveStatus: MoveStatus? = null
        override var publicIp: String? = null

        constructor(x: MovingAddressStatus) : this() {
            this.moveStatus = x.moveStatus
            this.publicIp = x.publicIp
        }

        override fun build(): MovingAddressStatus = MovingAddressStatus(this)
        override fun moveStatus(moveStatus: MoveStatus): FluentBuilder = apply { this.moveStatus = moveStatus }
        override fun publicIp(publicIp: String): FluentBuilder = apply { this.publicIp = publicIp }
    }
}
