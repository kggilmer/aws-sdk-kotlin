// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the volume status.
 */
class VolumeStatusItem private constructor(builder: BuilderImpl) {
    /**
     * The details of the operation.
     */
    val actions: List<VolumeStatusAction>? = builder.actions
    /**
     * Information about the instances to which the volume is attached.
     */
    val attachmentStatuses: List<VolumeStatusAttachmentStatus>? = builder.attachmentStatuses
    /**
     * The Availability Zone of the volume.
     */
    val availabilityZone: String? = builder.availabilityZone
    /**
     * A list of events associated with the volume.
     */
    val events: List<VolumeStatusEvent>? = builder.events
    /**
     * The Amazon Resource Name (ARN) of the Outpost.
     */
    val outpostArn: String? = builder.outpostArn
    /**
     * The volume ID.
     */
    val volumeId: String? = builder.volumeId
    /**
     * The volume status.
     */
    val volumeStatus: VolumeStatusInfo? = builder.volumeStatus

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): VolumeStatusItem = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("VolumeStatusItem(")
        append("actions=$actions,")
        append("attachmentStatuses=$attachmentStatuses,")
        append("availabilityZone=$availabilityZone,")
        append("events=$events,")
        append("outpostArn=$outpostArn,")
        append("volumeId=$volumeId,")
        append("volumeStatus=$volumeStatus)")
    }

    override fun hashCode(): kotlin.Int {
        var result = actions?.hashCode() ?: 0
        result = 31 * result + (attachmentStatuses?.hashCode() ?: 0)
        result = 31 * result + (availabilityZone?.hashCode() ?: 0)
        result = 31 * result + (events?.hashCode() ?: 0)
        result = 31 * result + (outpostArn?.hashCode() ?: 0)
        result = 31 * result + (volumeId?.hashCode() ?: 0)
        result = 31 * result + (volumeStatus?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as VolumeStatusItem

        if (actions != other.actions) return false
        if (attachmentStatuses != other.attachmentStatuses) return false
        if (availabilityZone != other.availabilityZone) return false
        if (events != other.events) return false
        if (outpostArn != other.outpostArn) return false
        if (volumeId != other.volumeId) return false
        if (volumeStatus != other.volumeStatus) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): VolumeStatusItem = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): VolumeStatusItem
        /**
         * The details of the operation.
         */
        fun actions(actions: List<VolumeStatusAction>): FluentBuilder
        /**
         * Information about the instances to which the volume is attached.
         */
        fun attachmentStatuses(attachmentStatuses: List<VolumeStatusAttachmentStatus>): FluentBuilder
        /**
         * The Availability Zone of the volume.
         */
        fun availabilityZone(availabilityZone: String): FluentBuilder
        /**
         * A list of events associated with the volume.
         */
        fun events(events: List<VolumeStatusEvent>): FluentBuilder
        /**
         * The Amazon Resource Name (ARN) of the Outpost.
         */
        fun outpostArn(outpostArn: String): FluentBuilder
        /**
         * The volume ID.
         */
        fun volumeId(volumeId: String): FluentBuilder
        /**
         * The volume status.
         */
        fun volumeStatus(volumeStatus: VolumeStatusInfo): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The details of the operation.
         */
        var actions: List<VolumeStatusAction>?
        /**
         * Information about the instances to which the volume is attached.
         */
        var attachmentStatuses: List<VolumeStatusAttachmentStatus>?
        /**
         * The Availability Zone of the volume.
         */
        var availabilityZone: String?
        /**
         * A list of events associated with the volume.
         */
        var events: List<VolumeStatusEvent>?
        /**
         * The Amazon Resource Name (ARN) of the Outpost.
         */
        var outpostArn: String?
        /**
         * The volume ID.
         */
        var volumeId: String?
        /**
         * The volume status.
         */
        var volumeStatus: VolumeStatusInfo?

        fun build(): VolumeStatusItem
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.VolumeStatusInfo] inside the given [block]
         */
        fun volumeStatus(block: VolumeStatusInfo.DslBuilder.() -> kotlin.Unit) {
            this.volumeStatus = VolumeStatusInfo.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var actions: List<VolumeStatusAction>? = null
        override var attachmentStatuses: List<VolumeStatusAttachmentStatus>? = null
        override var availabilityZone: String? = null
        override var events: List<VolumeStatusEvent>? = null
        override var outpostArn: String? = null
        override var volumeId: String? = null
        override var volumeStatus: VolumeStatusInfo? = null

        constructor(x: VolumeStatusItem) : this() {
            this.actions = x.actions
            this.attachmentStatuses = x.attachmentStatuses
            this.availabilityZone = x.availabilityZone
            this.events = x.events
            this.outpostArn = x.outpostArn
            this.volumeId = x.volumeId
            this.volumeStatus = x.volumeStatus
        }

        override fun build(): VolumeStatusItem = VolumeStatusItem(this)
        override fun actions(actions: List<VolumeStatusAction>): FluentBuilder = apply { this.actions = actions }
        override fun attachmentStatuses(attachmentStatuses: List<VolumeStatusAttachmentStatus>): FluentBuilder = apply { this.attachmentStatuses = attachmentStatuses }
        override fun availabilityZone(availabilityZone: String): FluentBuilder = apply { this.availabilityZone = availabilityZone }
        override fun events(events: List<VolumeStatusEvent>): FluentBuilder = apply { this.events = events }
        override fun outpostArn(outpostArn: String): FluentBuilder = apply { this.outpostArn = outpostArn }
        override fun volumeId(volumeId: String): FluentBuilder = apply { this.volumeId = volumeId }
        override fun volumeStatus(volumeStatus: VolumeStatusInfo): FluentBuilder = apply { this.volumeStatus = volumeStatus }
    }
}
