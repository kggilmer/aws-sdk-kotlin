// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the private IP addresses assigned to a network interface.
 */
class AssignedPrivateIpAddress private constructor(builder: BuilderImpl) {
    /**
     * The private IP address assigned to the network interface.
     */
    val privateIpAddress: String? = builder.privateIpAddress

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AssignedPrivateIpAddress = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AssignedPrivateIpAddress(")
        append("privateIpAddress=$privateIpAddress)")
    }

    override fun hashCode(): kotlin.Int {
        var result = privateIpAddress?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AssignedPrivateIpAddress

        if (privateIpAddress != other.privateIpAddress) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AssignedPrivateIpAddress = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AssignedPrivateIpAddress
        /**
         * The private IP address assigned to the network interface.
         */
        fun privateIpAddress(privateIpAddress: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The private IP address assigned to the network interface.
         */
        var privateIpAddress: String?

        fun build(): AssignedPrivateIpAddress
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var privateIpAddress: String? = null

        constructor(x: AssignedPrivateIpAddress) : this() {
            this.privateIpAddress = x.privateIpAddress
        }

        override fun build(): AssignedPrivateIpAddress = AssignedPrivateIpAddress(this)
        override fun privateIpAddress(privateIpAddress: String): FluentBuilder = apply { this.privateIpAddress = privateIpAddress }
    }
}
