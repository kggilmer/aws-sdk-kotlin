// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class RegisterTransitGatewayMulticastGroupSourcesResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the  transit gateway multicast group sources.
     */
    val registeredMulticastGroupSources: TransitGatewayMulticastRegisteredGroupSources? = builder.registeredMulticastGroupSources

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): RegisterTransitGatewayMulticastGroupSourcesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("RegisterTransitGatewayMulticastGroupSourcesResponse(")
        append("registeredMulticastGroupSources=$registeredMulticastGroupSources)")
    }

    override fun hashCode(): kotlin.Int {
        var result = registeredMulticastGroupSources?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as RegisterTransitGatewayMulticastGroupSourcesResponse

        if (registeredMulticastGroupSources != other.registeredMulticastGroupSources) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): RegisterTransitGatewayMulticastGroupSourcesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): RegisterTransitGatewayMulticastGroupSourcesResponse
        /**
         * Information about the  transit gateway multicast group sources.
         */
        fun registeredMulticastGroupSources(registeredMulticastGroupSources: TransitGatewayMulticastRegisteredGroupSources): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the  transit gateway multicast group sources.
         */
        var registeredMulticastGroupSources: TransitGatewayMulticastRegisteredGroupSources?

        fun build(): RegisterTransitGatewayMulticastGroupSourcesResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.TransitGatewayMulticastRegisteredGroupSources] inside the given [block]
         */
        fun registeredMulticastGroupSources(block: TransitGatewayMulticastRegisteredGroupSources.DslBuilder.() -> kotlin.Unit) {
            this.registeredMulticastGroupSources = TransitGatewayMulticastRegisteredGroupSources.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var registeredMulticastGroupSources: TransitGatewayMulticastRegisteredGroupSources? = null

        constructor(x: RegisterTransitGatewayMulticastGroupSourcesResponse) : this() {
            this.registeredMulticastGroupSources = x.registeredMulticastGroupSources
        }

        override fun build(): RegisterTransitGatewayMulticastGroupSourcesResponse = RegisterTransitGatewayMulticastGroupSourcesResponse(this)
        override fun registeredMulticastGroupSources(registeredMulticastGroupSources: TransitGatewayMulticastRegisteredGroupSources): FluentBuilder = apply { this.registeredMulticastGroupSources = registeredMulticastGroupSources }
    }
}
