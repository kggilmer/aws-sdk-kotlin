// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribeAggregateIdFormatResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about each resource's ID format.
     */
    val statuses: List<IdFormat>? = builder.statuses
    /**
     * Indicates whether all resource types in the Region are configured to use longer IDs.
     * This value is only true if all users are configured to use longer IDs for
     * all resources types in the Region.
     */
    val useLongIdsAggregated: Boolean? = builder.useLongIdsAggregated

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeAggregateIdFormatResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeAggregateIdFormatResponse(")
        append("statuses=$statuses,")
        append("useLongIdsAggregated=$useLongIdsAggregated)")
    }

    override fun hashCode(): kotlin.Int {
        var result = statuses?.hashCode() ?: 0
        result = 31 * result + (useLongIdsAggregated?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeAggregateIdFormatResponse

        if (statuses != other.statuses) return false
        if (useLongIdsAggregated != other.useLongIdsAggregated) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeAggregateIdFormatResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeAggregateIdFormatResponse
        /**
         * Information about each resource's ID format.
         */
        fun statuses(statuses: List<IdFormat>): FluentBuilder
        /**
         * Indicates whether all resource types in the Region are configured to use longer IDs.
         * This value is only true if all users are configured to use longer IDs for
         * all resources types in the Region.
         */
        fun useLongIdsAggregated(useLongIdsAggregated: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about each resource's ID format.
         */
        var statuses: List<IdFormat>?
        /**
         * Indicates whether all resource types in the Region are configured to use longer IDs.
         * This value is only true if all users are configured to use longer IDs for
         * all resources types in the Region.
         */
        var useLongIdsAggregated: Boolean?

        fun build(): DescribeAggregateIdFormatResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var statuses: List<IdFormat>? = null
        override var useLongIdsAggregated: Boolean? = null

        constructor(x: DescribeAggregateIdFormatResponse) : this() {
            this.statuses = x.statuses
            this.useLongIdsAggregated = x.useLongIdsAggregated
        }

        override fun build(): DescribeAggregateIdFormatResponse = DescribeAggregateIdFormatResponse(this)
        override fun statuses(statuses: List<IdFormat>): FluentBuilder = apply { this.statuses = statuses }
        override fun useLongIdsAggregated(useLongIdsAggregated: Boolean): FluentBuilder = apply { this.useLongIdsAggregated = useLongIdsAggregated }
    }
}
