// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreatePlacementGroupResponse private constructor(builder: BuilderImpl) {
    /**
     * Describes a placement group.
     */
    val placementGroup: PlacementGroup? = builder.placementGroup

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreatePlacementGroupResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreatePlacementGroupResponse(")
        append("placementGroup=$placementGroup)")
    }

    override fun hashCode(): kotlin.Int {
        var result = placementGroup?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreatePlacementGroupResponse

        if (placementGroup != other.placementGroup) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreatePlacementGroupResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreatePlacementGroupResponse
        /**
         * Describes a placement group.
         */
        fun placementGroup(placementGroup: PlacementGroup): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Describes a placement group.
         */
        var placementGroup: PlacementGroup?

        fun build(): CreatePlacementGroupResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PlacementGroup] inside the given [block]
         */
        fun placementGroup(block: PlacementGroup.DslBuilder.() -> kotlin.Unit) {
            this.placementGroup = PlacementGroup.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var placementGroup: PlacementGroup? = null

        constructor(x: CreatePlacementGroupResponse) : this() {
            this.placementGroup = x.placementGroup
        }

        override fun build(): CreatePlacementGroupResponse = CreatePlacementGroupResponse(this)
        override fun placementGroup(placementGroup: PlacementGroup): FluentBuilder = apply { this.placementGroup = placementGroup }
    }
}
