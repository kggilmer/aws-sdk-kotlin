// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Information about the transit gateway in the peering attachment.
 */
class PeeringTgwInfo private constructor(builder: BuilderImpl) {
    /**
     * The ID of the Amazon Web Services account that owns the transit gateway.
     */
    val ownerId: String? = builder.ownerId
    /**
     * The Region of the transit gateway.
     */
    val region: String? = builder.region
    /**
     * The ID of the transit gateway.
     */
    val transitGatewayId: String? = builder.transitGatewayId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PeeringTgwInfo = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PeeringTgwInfo(")
        append("ownerId=$ownerId,")
        append("region=$region,")
        append("transitGatewayId=$transitGatewayId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = ownerId?.hashCode() ?: 0
        result = 31 * result + (region?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PeeringTgwInfo

        if (ownerId != other.ownerId) return false
        if (region != other.region) return false
        if (transitGatewayId != other.transitGatewayId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PeeringTgwInfo = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PeeringTgwInfo
        /**
         * The ID of the Amazon Web Services account that owns the transit gateway.
         */
        fun ownerId(ownerId: String): FluentBuilder
        /**
         * The Region of the transit gateway.
         */
        fun region(region: String): FluentBuilder
        /**
         * The ID of the transit gateway.
         */
        fun transitGatewayId(transitGatewayId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the Amazon Web Services account that owns the transit gateway.
         */
        var ownerId: String?
        /**
         * The Region of the transit gateway.
         */
        var region: String?
        /**
         * The ID of the transit gateway.
         */
        var transitGatewayId: String?

        fun build(): PeeringTgwInfo
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var ownerId: String? = null
        override var region: String? = null
        override var transitGatewayId: String? = null

        constructor(x: PeeringTgwInfo) : this() {
            this.ownerId = x.ownerId
            this.region = x.region
            this.transitGatewayId = x.transitGatewayId
        }

        override fun build(): PeeringTgwInfo = PeeringTgwInfo(this)
        override fun ownerId(ownerId: String): FluentBuilder = apply { this.ownerId = ownerId }
        override fun region(region: String): FluentBuilder = apply { this.region = region }
        override fun transitGatewayId(transitGatewayId: String): FluentBuilder = apply { this.transitGatewayId = transitGatewayId }
    }
}
