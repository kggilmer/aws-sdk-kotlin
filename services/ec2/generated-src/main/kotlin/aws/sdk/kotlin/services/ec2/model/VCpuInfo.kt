// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the vCPU configurations for the instance type.
 */
class VCpuInfo private constructor(builder: BuilderImpl) {
    /**
     * The default number of cores for the instance type.
     */
    val defaultCores: Int? = builder.defaultCores
    /**
     * The default number of threads per core for the instance type.
     */
    val defaultThreadsPerCore: Int? = builder.defaultThreadsPerCore
    /**
     * The default number of vCPUs for the instance type.
     */
    val defaultVCpus: Int? = builder.defaultVCpus
    /**
     * The valid number of cores that can be configured for the instance type.
     */
    val validCores: List<Int>? = builder.validCores
    /**
     * The valid number of threads per core that can be configured for the instance type.
     */
    val validThreadsPerCore: List<Int>? = builder.validThreadsPerCore

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): VCpuInfo = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("VCpuInfo(")
        append("defaultCores=$defaultCores,")
        append("defaultThreadsPerCore=$defaultThreadsPerCore,")
        append("defaultVCpus=$defaultVCpus,")
        append("validCores=$validCores,")
        append("validThreadsPerCore=$validThreadsPerCore)")
    }

    override fun hashCode(): kotlin.Int {
        var result = defaultCores ?: 0
        result = 31 * result + (defaultThreadsPerCore ?: 0)
        result = 31 * result + (defaultVCpus ?: 0)
        result = 31 * result + (validCores?.hashCode() ?: 0)
        result = 31 * result + (validThreadsPerCore?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as VCpuInfo

        if (defaultCores != other.defaultCores) return false
        if (defaultThreadsPerCore != other.defaultThreadsPerCore) return false
        if (defaultVCpus != other.defaultVCpus) return false
        if (validCores != other.validCores) return false
        if (validThreadsPerCore != other.validThreadsPerCore) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): VCpuInfo = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): VCpuInfo
        /**
         * The default number of cores for the instance type.
         */
        fun defaultCores(defaultCores: Int): FluentBuilder
        /**
         * The default number of threads per core for the instance type.
         */
        fun defaultThreadsPerCore(defaultThreadsPerCore: Int): FluentBuilder
        /**
         * The default number of vCPUs for the instance type.
         */
        fun defaultVCpus(defaultVCpus: Int): FluentBuilder
        /**
         * The valid number of cores that can be configured for the instance type.
         */
        fun validCores(validCores: List<Int>): FluentBuilder
        /**
         * The valid number of threads per core that can be configured for the instance type.
         */
        fun validThreadsPerCore(validThreadsPerCore: List<Int>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The default number of cores for the instance type.
         */
        var defaultCores: Int?
        /**
         * The default number of threads per core for the instance type.
         */
        var defaultThreadsPerCore: Int?
        /**
         * The default number of vCPUs for the instance type.
         */
        var defaultVCpus: Int?
        /**
         * The valid number of cores that can be configured for the instance type.
         */
        var validCores: List<Int>?
        /**
         * The valid number of threads per core that can be configured for the instance type.
         */
        var validThreadsPerCore: List<Int>?

        fun build(): VCpuInfo
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var defaultCores: Int? = null
        override var defaultThreadsPerCore: Int? = null
        override var defaultVCpus: Int? = null
        override var validCores: List<Int>? = null
        override var validThreadsPerCore: List<Int>? = null

        constructor(x: VCpuInfo) : this() {
            this.defaultCores = x.defaultCores
            this.defaultThreadsPerCore = x.defaultThreadsPerCore
            this.defaultVCpus = x.defaultVCpus
            this.validCores = x.validCores
            this.validThreadsPerCore = x.validThreadsPerCore
        }

        override fun build(): VCpuInfo = VCpuInfo(this)
        override fun defaultCores(defaultCores: Int): FluentBuilder = apply { this.defaultCores = defaultCores }
        override fun defaultThreadsPerCore(defaultThreadsPerCore: Int): FluentBuilder = apply { this.defaultThreadsPerCore = defaultThreadsPerCore }
        override fun defaultVCpus(defaultVCpus: Int): FluentBuilder = apply { this.defaultVCpus = defaultVCpus }
        override fun validCores(validCores: List<Int>): FluentBuilder = apply { this.validCores = validCores }
        override fun validThreadsPerCore(validThreadsPerCore: List<Int>): FluentBuilder = apply { this.validThreadsPerCore = validThreadsPerCore }
    }
}
