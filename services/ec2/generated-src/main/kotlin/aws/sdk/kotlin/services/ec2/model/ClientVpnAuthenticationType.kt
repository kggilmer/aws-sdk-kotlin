// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class ClientVpnAuthenticationType {

    abstract val value: kotlin.String

    object CertificateAuthentication : aws.sdk.kotlin.services.ec2.model.ClientVpnAuthenticationType() {
        override val value: kotlin.String = "certificate-authentication"
        override fun toString(): kotlin.String = value
    }

    object DirectoryServiceAuthentication : aws.sdk.kotlin.services.ec2.model.ClientVpnAuthenticationType() {
        override val value: kotlin.String = "directory-service-authentication"
        override fun toString(): kotlin.String = value
    }

    object FederatedAuthentication : aws.sdk.kotlin.services.ec2.model.ClientVpnAuthenticationType() {
        override val value: kotlin.String = "federated-authentication"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.ClientVpnAuthenticationType() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.ClientVpnAuthenticationType = when(str) {
            "certificate-authentication" -> CertificateAuthentication
            "directory-service-authentication" -> DirectoryServiceAuthentication
            "federated-authentication" -> FederatedAuthentication
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.ClientVpnAuthenticationType> = listOf(
            CertificateAuthentication,
            DirectoryServiceAuthentication,
            FederatedAuthentication
        )
    }
}
