// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CancelCapacityReservationFleetsResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the Capacity Reservation Fleets that could not be cancelled.
     */
    val failedFleetCancellations: List<FailedCapacityReservationFleetCancellationResult>? = builder.failedFleetCancellations
    /**
     * Information about the Capacity Reservation Fleets that were successfully cancelled.
     */
    val successfulFleetCancellations: List<CapacityReservationFleetCancellationState>? = builder.successfulFleetCancellations

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CancelCapacityReservationFleetsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CancelCapacityReservationFleetsResponse(")
        append("failedFleetCancellations=$failedFleetCancellations,")
        append("successfulFleetCancellations=$successfulFleetCancellations)")
    }

    override fun hashCode(): kotlin.Int {
        var result = failedFleetCancellations?.hashCode() ?: 0
        result = 31 * result + (successfulFleetCancellations?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CancelCapacityReservationFleetsResponse

        if (failedFleetCancellations != other.failedFleetCancellations) return false
        if (successfulFleetCancellations != other.successfulFleetCancellations) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CancelCapacityReservationFleetsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CancelCapacityReservationFleetsResponse
        /**
         * Information about the Capacity Reservation Fleets that could not be cancelled.
         */
        fun failedFleetCancellations(failedFleetCancellations: List<FailedCapacityReservationFleetCancellationResult>): FluentBuilder
        /**
         * Information about the Capacity Reservation Fleets that were successfully cancelled.
         */
        fun successfulFleetCancellations(successfulFleetCancellations: List<CapacityReservationFleetCancellationState>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the Capacity Reservation Fleets that could not be cancelled.
         */
        var failedFleetCancellations: List<FailedCapacityReservationFleetCancellationResult>?
        /**
         * Information about the Capacity Reservation Fleets that were successfully cancelled.
         */
        var successfulFleetCancellations: List<CapacityReservationFleetCancellationState>?

        fun build(): CancelCapacityReservationFleetsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var failedFleetCancellations: List<FailedCapacityReservationFleetCancellationResult>? = null
        override var successfulFleetCancellations: List<CapacityReservationFleetCancellationState>? = null

        constructor(x: CancelCapacityReservationFleetsResponse) : this() {
            this.failedFleetCancellations = x.failedFleetCancellations
            this.successfulFleetCancellations = x.successfulFleetCancellations
        }

        override fun build(): CancelCapacityReservationFleetsResponse = CancelCapacityReservationFleetsResponse(this)
        override fun failedFleetCancellations(failedFleetCancellations: List<FailedCapacityReservationFleetCancellationResult>): FluentBuilder = apply { this.failedFleetCancellations = failedFleetCancellations }
        override fun successfulFleetCancellations(successfulFleetCancellations: List<CapacityReservationFleetCancellationState>): FluentBuilder = apply { this.successfulFleetCancellations = successfulFleetCancellations }
    }
}
