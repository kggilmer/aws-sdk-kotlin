// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a Reserved Instance listing state.
 */
class InstanceCount private constructor(builder: BuilderImpl) {
    /**
     * The number of listed Reserved Instances in the state specified by the state.
     */
    val instanceCount: Int? = builder.instanceCount
    /**
     * The states of the listed Reserved Instances.
     */
    val state: ListingState? = builder.state

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InstanceCount = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceCount(")
        append("instanceCount=$instanceCount,")
        append("state=$state)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceCount ?: 0
        result = 31 * result + (state?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InstanceCount

        if (instanceCount != other.instanceCount) return false
        if (state != other.state) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InstanceCount = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InstanceCount
        /**
         * The number of listed Reserved Instances in the state specified by the state.
         */
        fun instanceCount(instanceCount: Int): FluentBuilder
        /**
         * The states of the listed Reserved Instances.
         */
        fun state(state: ListingState): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The number of listed Reserved Instances in the state specified by the state.
         */
        var instanceCount: Int?
        /**
         * The states of the listed Reserved Instances.
         */
        var state: ListingState?

        fun build(): InstanceCount
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceCount: Int? = null
        override var state: ListingState? = null

        constructor(x: InstanceCount) : this() {
            this.instanceCount = x.instanceCount
            this.state = x.state
        }

        override fun build(): InstanceCount = InstanceCount(this)
        override fun instanceCount(instanceCount: Int): FluentBuilder = apply { this.instanceCount = instanceCount }
        override fun state(state: ListingState): FluentBuilder = apply { this.state = state }
    }
}
