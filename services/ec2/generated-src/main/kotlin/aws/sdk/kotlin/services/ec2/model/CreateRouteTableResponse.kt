// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateRouteTableResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the route table.
     */
    val routeTable: RouteTable? = builder.routeTable

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateRouteTableResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateRouteTableResponse(")
        append("routeTable=$routeTable)")
    }

    override fun hashCode(): kotlin.Int {
        var result = routeTable?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateRouteTableResponse

        if (routeTable != other.routeTable) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateRouteTableResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateRouteTableResponse
        /**
         * Information about the route table.
         */
        fun routeTable(routeTable: RouteTable): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the route table.
         */
        var routeTable: RouteTable?

        fun build(): CreateRouteTableResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.RouteTable] inside the given [block]
         */
        fun routeTable(block: RouteTable.DslBuilder.() -> kotlin.Unit) {
            this.routeTable = RouteTable.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var routeTable: RouteTable? = null

        constructor(x: CreateRouteTableResponse) : this() {
            this.routeTable = x.routeTable
        }

        override fun build(): CreateRouteTableResponse = CreateRouteTableResponse(this)
        override fun routeTable(routeTable: RouteTable): FluentBuilder = apply { this.routeTable = routeTable }
    }
}
