// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The options for managing connection authorization for new client connections.
 */
class ClientConnectOptions private constructor(builder: BuilderImpl) {
    /**
     * Indicates whether client connect options are enabled. The default is false (not enabled).
     */
    val enabled: Boolean? = builder.enabled
    /**
     * The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
     */
    val lambdaFunctionArn: String? = builder.lambdaFunctionArn

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ClientConnectOptions = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ClientConnectOptions(")
        append("enabled=$enabled,")
        append("lambdaFunctionArn=$lambdaFunctionArn)")
    }

    override fun hashCode(): kotlin.Int {
        var result = enabled?.hashCode() ?: 0
        result = 31 * result + (lambdaFunctionArn?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ClientConnectOptions

        if (enabled != other.enabled) return false
        if (lambdaFunctionArn != other.lambdaFunctionArn) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ClientConnectOptions = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ClientConnectOptions
        /**
         * Indicates whether client connect options are enabled. The default is false (not enabled).
         */
        fun enabled(enabled: Boolean): FluentBuilder
        /**
         * The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
         */
        fun lambdaFunctionArn(lambdaFunctionArn: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates whether client connect options are enabled. The default is false (not enabled).
         */
        var enabled: Boolean?
        /**
         * The Amazon Resource Name (ARN) of the Lambda function used for connection authorization.
         */
        var lambdaFunctionArn: String?

        fun build(): ClientConnectOptions
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var enabled: Boolean? = null
        override var lambdaFunctionArn: String? = null

        constructor(x: ClientConnectOptions) : this() {
            this.enabled = x.enabled
            this.lambdaFunctionArn = x.lambdaFunctionArn
        }

        override fun build(): ClientConnectOptions = ClientConnectOptions(this)
        override fun enabled(enabled: Boolean): FluentBuilder = apply { this.enabled = enabled }
        override fun lambdaFunctionArn(lambdaFunctionArn: String): FluentBuilder = apply { this.lambdaFunctionArn = lambdaFunctionArn }
    }
}
