// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The BGP configuration information.
 */
class TransitGatewayAttachmentBgpConfiguration private constructor(builder: BuilderImpl) {
    /**
     * The BGP status.
     */
    val bgpStatus: BgpStatus? = builder.bgpStatus
    /**
     * The interior BGP peer IP address for the appliance.
     */
    val peerAddress: String? = builder.peerAddress
    /**
     * The peer Autonomous System Number (ASN).
     */
    val peerAsn: Long? = builder.peerAsn
    /**
     * The interior BGP peer IP address for the transit gateway.
     */
    val transitGatewayAddress: String? = builder.transitGatewayAddress
    /**
     * The transit gateway Autonomous System Number (ASN).
     */
    val transitGatewayAsn: Long? = builder.transitGatewayAsn

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TransitGatewayAttachmentBgpConfiguration = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayAttachmentBgpConfiguration(")
        append("bgpStatus=$bgpStatus,")
        append("peerAddress=$peerAddress,")
        append("peerAsn=$peerAsn,")
        append("transitGatewayAddress=$transitGatewayAddress,")
        append("transitGatewayAsn=$transitGatewayAsn)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bgpStatus?.hashCode() ?: 0
        result = 31 * result + (peerAddress?.hashCode() ?: 0)
        result = 31 * result + (peerAsn?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAddress?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAsn?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TransitGatewayAttachmentBgpConfiguration

        if (bgpStatus != other.bgpStatus) return false
        if (peerAddress != other.peerAddress) return false
        if (peerAsn != other.peerAsn) return false
        if (transitGatewayAddress != other.transitGatewayAddress) return false
        if (transitGatewayAsn != other.transitGatewayAsn) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TransitGatewayAttachmentBgpConfiguration = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TransitGatewayAttachmentBgpConfiguration
        /**
         * The BGP status.
         */
        fun bgpStatus(bgpStatus: BgpStatus): FluentBuilder
        /**
         * The interior BGP peer IP address for the appliance.
         */
        fun peerAddress(peerAddress: String): FluentBuilder
        /**
         * The peer Autonomous System Number (ASN).
         */
        fun peerAsn(peerAsn: Long): FluentBuilder
        /**
         * The interior BGP peer IP address for the transit gateway.
         */
        fun transitGatewayAddress(transitGatewayAddress: String): FluentBuilder
        /**
         * The transit gateway Autonomous System Number (ASN).
         */
        fun transitGatewayAsn(transitGatewayAsn: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The BGP status.
         */
        var bgpStatus: BgpStatus?
        /**
         * The interior BGP peer IP address for the appliance.
         */
        var peerAddress: String?
        /**
         * The peer Autonomous System Number (ASN).
         */
        var peerAsn: Long?
        /**
         * The interior BGP peer IP address for the transit gateway.
         */
        var transitGatewayAddress: String?
        /**
         * The transit gateway Autonomous System Number (ASN).
         */
        var transitGatewayAsn: Long?

        fun build(): TransitGatewayAttachmentBgpConfiguration
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bgpStatus: BgpStatus? = null
        override var peerAddress: String? = null
        override var peerAsn: Long? = null
        override var transitGatewayAddress: String? = null
        override var transitGatewayAsn: Long? = null

        constructor(x: TransitGatewayAttachmentBgpConfiguration) : this() {
            this.bgpStatus = x.bgpStatus
            this.peerAddress = x.peerAddress
            this.peerAsn = x.peerAsn
            this.transitGatewayAddress = x.transitGatewayAddress
            this.transitGatewayAsn = x.transitGatewayAsn
        }

        override fun build(): TransitGatewayAttachmentBgpConfiguration = TransitGatewayAttachmentBgpConfiguration(this)
        override fun bgpStatus(bgpStatus: BgpStatus): FluentBuilder = apply { this.bgpStatus = bgpStatus }
        override fun peerAddress(peerAddress: String): FluentBuilder = apply { this.peerAddress = peerAddress }
        override fun peerAsn(peerAsn: Long): FluentBuilder = apply { this.peerAsn = peerAsn }
        override fun transitGatewayAddress(transitGatewayAddress: String): FluentBuilder = apply { this.transitGatewayAddress = transitGatewayAddress }
        override fun transitGatewayAsn(transitGatewayAsn: Long): FluentBuilder = apply { this.transitGatewayAsn = transitGatewayAsn }
    }
}
