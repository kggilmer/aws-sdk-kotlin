// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an import instance task.
 */
class ImportInstanceTaskDetails private constructor(builder: BuilderImpl) {
    /**
     * A description of the task.
     */
    val description: String? = builder.description
    /**
     * The ID of the instance.
     */
    val instanceId: String? = builder.instanceId
    /**
     * The instance operating system.
     */
    val platform: PlatformValues? = builder.platform
    /**
     * The volumes.
     */
    val volumes: List<ImportInstanceVolumeDetailItem>? = builder.volumes

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ImportInstanceTaskDetails = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ImportInstanceTaskDetails(")
        append("description=$description,")
        append("instanceId=$instanceId,")
        append("platform=$platform,")
        append("volumes=$volumes)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (instanceId?.hashCode() ?: 0)
        result = 31 * result + (platform?.hashCode() ?: 0)
        result = 31 * result + (volumes?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ImportInstanceTaskDetails

        if (description != other.description) return false
        if (instanceId != other.instanceId) return false
        if (platform != other.platform) return false
        if (volumes != other.volumes) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ImportInstanceTaskDetails = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ImportInstanceTaskDetails
        /**
         * A description of the task.
         */
        fun description(description: String): FluentBuilder
        /**
         * The ID of the instance.
         */
        fun instanceId(instanceId: String): FluentBuilder
        /**
         * The instance operating system.
         */
        fun platform(platform: PlatformValues): FluentBuilder
        /**
         * The volumes.
         */
        fun volumes(volumes: List<ImportInstanceVolumeDetailItem>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A description of the task.
         */
        var description: String?
        /**
         * The ID of the instance.
         */
        var instanceId: String?
        /**
         * The instance operating system.
         */
        var platform: PlatformValues?
        /**
         * The volumes.
         */
        var volumes: List<ImportInstanceVolumeDetailItem>?

        fun build(): ImportInstanceTaskDetails
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var description: String? = null
        override var instanceId: String? = null
        override var platform: PlatformValues? = null
        override var volumes: List<ImportInstanceVolumeDetailItem>? = null

        constructor(x: ImportInstanceTaskDetails) : this() {
            this.description = x.description
            this.instanceId = x.instanceId
            this.platform = x.platform
            this.volumes = x.volumes
        }

        override fun build(): ImportInstanceTaskDetails = ImportInstanceTaskDetails(this)
        override fun description(description: String): FluentBuilder = apply { this.description = description }
        override fun instanceId(instanceId: String): FluentBuilder = apply { this.instanceId = instanceId }
        override fun platform(platform: PlatformValues): FluentBuilder = apply { this.platform = platform }
        override fun volumes(volumes: List<ImportInstanceVolumeDetailItem>): FluentBuilder = apply { this.volumes = volumes }
    }
}
