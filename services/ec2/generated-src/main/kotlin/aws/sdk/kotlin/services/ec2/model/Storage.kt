// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the storage location for an instance store-backed AMI.
 */
class Storage private constructor(builder: BuilderImpl) {
    /**
     * An Amazon S3 storage location.
     */
    val s3: S3Storage? = builder.s3

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Storage = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Storage(")
        append("s3=$s3)")
    }

    override fun hashCode(): kotlin.Int {
        var result = s3?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Storage

        if (s3 != other.s3) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Storage = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Storage
        /**
         * An Amazon S3 storage location.
         */
        fun s3(s3: S3Storage): FluentBuilder
    }

    interface DslBuilder {
        /**
         * An Amazon S3 storage location.
         */
        var s3: S3Storage?

        fun build(): Storage
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.S3Storage] inside the given [block]
         */
        fun s3(block: S3Storage.DslBuilder.() -> kotlin.Unit) {
            this.s3 = S3Storage.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var s3: S3Storage? = null

        constructor(x: Storage) : this() {
            this.s3 = x.s3
        }

        override fun build(): Storage = Storage(this)
        override fun s3(s3: S3Storage): FluentBuilder = apply { this.s3 = s3 }
    }
}
