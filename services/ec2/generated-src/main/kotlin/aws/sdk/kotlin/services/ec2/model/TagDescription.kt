// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a tag.
 */
class TagDescription private constructor(builder: BuilderImpl) {
    /**
     * The tag key.
     */
    val key: String? = builder.key
    /**
     * The ID of the resource.
     */
    val resourceId: String? = builder.resourceId
    /**
     * The resource type.
     */
    val resourceType: ResourceType? = builder.resourceType
    /**
     * The tag value.
     */
    val value: String? = builder.value

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TagDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TagDescription(")
        append("key=$key,")
        append("resourceId=$resourceId,")
        append("resourceType=$resourceType,")
        append("value=$value)")
    }

    override fun hashCode(): kotlin.Int {
        var result = key?.hashCode() ?: 0
        result = 31 * result + (resourceId?.hashCode() ?: 0)
        result = 31 * result + (resourceType?.hashCode() ?: 0)
        result = 31 * result + (value?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TagDescription

        if (key != other.key) return false
        if (resourceId != other.resourceId) return false
        if (resourceType != other.resourceType) return false
        if (value != other.value) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TagDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TagDescription
        /**
         * The tag key.
         */
        fun key(key: String): FluentBuilder
        /**
         * The ID of the resource.
         */
        fun resourceId(resourceId: String): FluentBuilder
        /**
         * The resource type.
         */
        fun resourceType(resourceType: ResourceType): FluentBuilder
        /**
         * The tag value.
         */
        fun value(value: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The tag key.
         */
        var key: String?
        /**
         * The ID of the resource.
         */
        var resourceId: String?
        /**
         * The resource type.
         */
        var resourceType: ResourceType?
        /**
         * The tag value.
         */
        var value: String?

        fun build(): TagDescription
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var key: String? = null
        override var resourceId: String? = null
        override var resourceType: ResourceType? = null
        override var value: String? = null

        constructor(x: TagDescription) : this() {
            this.key = x.key
            this.resourceId = x.resourceId
            this.resourceType = x.resourceType
            this.value = x.value
        }

        override fun build(): TagDescription = TagDescription(this)
        override fun key(key: String): FluentBuilder = apply { this.key = key }
        override fun resourceId(resourceId: String): FluentBuilder = apply { this.resourceId = resourceId }
        override fun resourceType(resourceType: ResourceType): FluentBuilder = apply { this.resourceType = resourceType }
        override fun value(value: String): FluentBuilder = apply { this.value = value }
    }
}
