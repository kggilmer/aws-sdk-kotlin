// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an IPv4 CIDR block.
 */
class CidrBlock private constructor(builder: BuilderImpl) {
    /**
     * The IPv4 CIDR block.
     */
    val cidrBlock: String? = builder.cidrBlock

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CidrBlock = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CidrBlock(")
        append("cidrBlock=$cidrBlock)")
    }

    override fun hashCode(): kotlin.Int {
        var result = cidrBlock?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CidrBlock

        if (cidrBlock != other.cidrBlock) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CidrBlock = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CidrBlock
        /**
         * The IPv4 CIDR block.
         */
        fun cidrBlock(cidrBlock: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The IPv4 CIDR block.
         */
        var cidrBlock: String?

        fun build(): CidrBlock
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var cidrBlock: String? = null

        constructor(x: CidrBlock) : this() {
            this.cidrBlock = x.cidrBlock
        }

        override fun build(): CidrBlock = CidrBlock(this)
        override fun cidrBlock(cidrBlock: String): FluentBuilder = apply { this.cidrBlock = cidrBlock }
    }
}
