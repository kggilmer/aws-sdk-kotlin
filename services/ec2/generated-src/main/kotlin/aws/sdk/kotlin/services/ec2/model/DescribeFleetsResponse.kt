// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribeFleetsResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the EC2 Fleets.
     */
    val fleets: List<FleetData>? = builder.fleets
    /**
     * The token for the next set of results.
     */
    val nextToken: String? = builder.nextToken

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeFleetsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeFleetsResponse(")
        append("fleets=$fleets,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = fleets?.hashCode() ?: 0
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeFleetsResponse

        if (fleets != other.fleets) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeFleetsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeFleetsResponse
        /**
         * Information about the EC2 Fleets.
         */
        fun fleets(fleets: List<FleetData>): FluentBuilder
        /**
         * The token for the next set of results.
         */
        fun nextToken(nextToken: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the EC2 Fleets.
         */
        var fleets: List<FleetData>?
        /**
         * The token for the next set of results.
         */
        var nextToken: String?

        fun build(): DescribeFleetsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var fleets: List<FleetData>? = null
        override var nextToken: String? = null

        constructor(x: DescribeFleetsResponse) : this() {
            this.fleets = x.fleets
            this.nextToken = x.nextToken
        }

        override fun build(): DescribeFleetsResponse = DescribeFleetsResponse(this)
        override fun fleets(fleets: List<FleetData>): FluentBuilder = apply { this.fleets = fleets }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
    }
}
