// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a disk image.
 */
class DiskImage private constructor(builder: BuilderImpl) {
    /**
     * A description of the disk image.
     */
    val description: String? = builder.description
    /**
     * Information about the disk image.
     */
    val image: DiskImageDetail? = builder.image
    /**
     * Information about the volume.
     */
    val volume: VolumeDetail? = builder.volume

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DiskImage = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DiskImage(")
        append("description=$description,")
        append("image=$image,")
        append("volume=$volume)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (image?.hashCode() ?: 0)
        result = 31 * result + (volume?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DiskImage

        if (description != other.description) return false
        if (image != other.image) return false
        if (volume != other.volume) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DiskImage = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DiskImage
        /**
         * A description of the disk image.
         */
        fun description(description: String): FluentBuilder
        /**
         * Information about the disk image.
         */
        fun image(image: DiskImageDetail): FluentBuilder
        /**
         * Information about the volume.
         */
        fun volume(volume: VolumeDetail): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A description of the disk image.
         */
        var description: String?
        /**
         * Information about the disk image.
         */
        var image: DiskImageDetail?
        /**
         * Information about the volume.
         */
        var volume: VolumeDetail?

        fun build(): DiskImage
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.DiskImageDetail] inside the given [block]
         */
        fun image(block: DiskImageDetail.DslBuilder.() -> kotlin.Unit) {
            this.image = DiskImageDetail.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.VolumeDetail] inside the given [block]
         */
        fun volume(block: VolumeDetail.DslBuilder.() -> kotlin.Unit) {
            this.volume = VolumeDetail.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var description: String? = null
        override var image: DiskImageDetail? = null
        override var volume: VolumeDetail? = null

        constructor(x: DiskImage) : this() {
            this.description = x.description
            this.image = x.image
            this.volume = x.volume
        }

        override fun build(): DiskImage = DiskImage(this)
        override fun description(description: String): FluentBuilder = apply { this.description = description }
        override fun image(image: DiskImageDetail): FluentBuilder = apply { this.image = image }
        override fun volume(volume: VolumeDetail): FluentBuilder = apply { this.volume = volume }
    }
}
