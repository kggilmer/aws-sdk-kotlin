// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribeConversionTasksResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the conversion tasks.
     */
    val conversionTasks: List<ConversionTask>? = builder.conversionTasks

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeConversionTasksResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeConversionTasksResponse(")
        append("conversionTasks=$conversionTasks)")
    }

    override fun hashCode(): kotlin.Int {
        var result = conversionTasks?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeConversionTasksResponse

        if (conversionTasks != other.conversionTasks) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeConversionTasksResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeConversionTasksResponse
        /**
         * Information about the conversion tasks.
         */
        fun conversionTasks(conversionTasks: List<ConversionTask>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the conversion tasks.
         */
        var conversionTasks: List<ConversionTask>?

        fun build(): DescribeConversionTasksResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var conversionTasks: List<ConversionTask>? = null

        constructor(x: DescribeConversionTasksResponse) : this() {
            this.conversionTasks = x.conversionTasks
        }

        override fun build(): DescribeConversionTasksResponse = DescribeConversionTasksResponse(this)
        override fun conversionTasks(conversionTasks: List<ConversionTask>): FluentBuilder = apply { this.conversionTasks = conversionTasks }
    }
}
