// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an export instance task.
 */
class ExportTask private constructor(builder: BuilderImpl) {
    /**
     * A description of the resource being exported.
     */
    val description: String? = builder.description
    /**
     * The ID of the export task.
     */
    val exportTaskId: String? = builder.exportTaskId
    /**
     * Information about the export task.
     */
    val exportToS3Task: ExportToS3Task? = builder.exportToS3Task
    /**
     * Information about the instance to export.
     */
    val instanceExportDetails: InstanceExportDetails? = builder.instanceExportDetails
    /**
     * The state of the export task.
     */
    val state: ExportTaskState? = builder.state
    /**
     * The status message related to the export task.
     */
    val statusMessage: String? = builder.statusMessage
    /**
     * The tags for the export task.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ExportTask = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ExportTask(")
        append("description=$description,")
        append("exportTaskId=$exportTaskId,")
        append("exportToS3Task=$exportToS3Task,")
        append("instanceExportDetails=$instanceExportDetails,")
        append("state=$state,")
        append("statusMessage=$statusMessage,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (exportTaskId?.hashCode() ?: 0)
        result = 31 * result + (exportToS3Task?.hashCode() ?: 0)
        result = 31 * result + (instanceExportDetails?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (statusMessage?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExportTask

        if (description != other.description) return false
        if (exportTaskId != other.exportTaskId) return false
        if (exportToS3Task != other.exportToS3Task) return false
        if (instanceExportDetails != other.instanceExportDetails) return false
        if (state != other.state) return false
        if (statusMessage != other.statusMessage) return false
        if (tags != other.tags) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ExportTask = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ExportTask
        /**
         * A description of the resource being exported.
         */
        fun description(description: String): FluentBuilder
        /**
         * The ID of the export task.
         */
        fun exportTaskId(exportTaskId: String): FluentBuilder
        /**
         * Information about the export task.
         */
        fun exportToS3Task(exportToS3Task: ExportToS3Task): FluentBuilder
        /**
         * Information about the instance to export.
         */
        fun instanceExportDetails(instanceExportDetails: InstanceExportDetails): FluentBuilder
        /**
         * The state of the export task.
         */
        fun state(state: ExportTaskState): FluentBuilder
        /**
         * The status message related to the export task.
         */
        fun statusMessage(statusMessage: String): FluentBuilder
        /**
         * The tags for the export task.
         */
        fun tags(tags: List<Tag>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A description of the resource being exported.
         */
        var description: String?
        /**
         * The ID of the export task.
         */
        var exportTaskId: String?
        /**
         * Information about the export task.
         */
        var exportToS3Task: ExportToS3Task?
        /**
         * Information about the instance to export.
         */
        var instanceExportDetails: InstanceExportDetails?
        /**
         * The state of the export task.
         */
        var state: ExportTaskState?
        /**
         * The status message related to the export task.
         */
        var statusMessage: String?
        /**
         * The tags for the export task.
         */
        var tags: List<Tag>?

        fun build(): ExportTask
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ExportToS3Task] inside the given [block]
         */
        fun exportToS3Task(block: ExportToS3Task.DslBuilder.() -> kotlin.Unit) {
            this.exportToS3Task = ExportToS3Task.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.InstanceExportDetails] inside the given [block]
         */
        fun instanceExportDetails(block: InstanceExportDetails.DslBuilder.() -> kotlin.Unit) {
            this.instanceExportDetails = InstanceExportDetails.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var description: String? = null
        override var exportTaskId: String? = null
        override var exportToS3Task: ExportToS3Task? = null
        override var instanceExportDetails: InstanceExportDetails? = null
        override var state: ExportTaskState? = null
        override var statusMessage: String? = null
        override var tags: List<Tag>? = null

        constructor(x: ExportTask) : this() {
            this.description = x.description
            this.exportTaskId = x.exportTaskId
            this.exportToS3Task = x.exportToS3Task
            this.instanceExportDetails = x.instanceExportDetails
            this.state = x.state
            this.statusMessage = x.statusMessage
            this.tags = x.tags
        }

        override fun build(): ExportTask = ExportTask(this)
        override fun description(description: String): FluentBuilder = apply { this.description = description }
        override fun exportTaskId(exportTaskId: String): FluentBuilder = apply { this.exportTaskId = exportTaskId }
        override fun exportToS3Task(exportToS3Task: ExportToS3Task): FluentBuilder = apply { this.exportToS3Task = exportToS3Task }
        override fun instanceExportDetails(instanceExportDetails: InstanceExportDetails): FluentBuilder = apply { this.instanceExportDetails = instanceExportDetails }
        override fun state(state: ExportTaskState): FluentBuilder = apply { this.state = state }
        override fun statusMessage(statusMessage: String): FluentBuilder = apply { this.statusMessage = statusMessage }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
    }
}
