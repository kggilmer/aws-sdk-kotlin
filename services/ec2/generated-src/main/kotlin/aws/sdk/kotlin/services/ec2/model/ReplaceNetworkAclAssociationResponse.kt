// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ReplaceNetworkAclAssociationResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the new association.
     */
    val newAssociationId: String? = builder.newAssociationId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplaceNetworkAclAssociationResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplaceNetworkAclAssociationResponse(")
        append("newAssociationId=$newAssociationId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = newAssociationId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplaceNetworkAclAssociationResponse

        if (newAssociationId != other.newAssociationId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplaceNetworkAclAssociationResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplaceNetworkAclAssociationResponse
        /**
         * The ID of the new association.
         */
        fun newAssociationId(newAssociationId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the new association.
         */
        var newAssociationId: String?

        fun build(): ReplaceNetworkAclAssociationResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var newAssociationId: String? = null

        constructor(x: ReplaceNetworkAclAssociationResponse) : this() {
            this.newAssociationId = x.newAssociationId
        }

        override fun build(): ReplaceNetworkAclAssociationResponse = ReplaceNetworkAclAssociationResponse(this)
        override fun newAssociationId(newAssociationId: String): FluentBuilder = apply { this.newAssociationId = newAssociationId }
    }
}
