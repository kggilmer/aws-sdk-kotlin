// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class GetAssociatedEnclaveCertificateIamRolesRequest private constructor(builder: BuilderImpl) {
    /**
     * The ARN of the ACM certificate for which to view the associated IAM roles, encryption keys, and Amazon
     * S3 object information.
     */
    val certificateArn: String? = builder.certificateArn
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetAssociatedEnclaveCertificateIamRolesRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetAssociatedEnclaveCertificateIamRolesRequest(")
        append("certificateArn=$certificateArn,")
        append("dryRun=$dryRun)")
    }

    override fun hashCode(): kotlin.Int {
        var result = certificateArn?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetAssociatedEnclaveCertificateIamRolesRequest

        if (certificateArn != other.certificateArn) return false
        if (dryRun != other.dryRun) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetAssociatedEnclaveCertificateIamRolesRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetAssociatedEnclaveCertificateIamRolesRequest
        /**
         * The ARN of the ACM certificate for which to view the associated IAM roles, encryption keys, and Amazon
         * S3 object information.
         */
        fun certificateArn(certificateArn: String): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ARN of the ACM certificate for which to view the associated IAM roles, encryption keys, and Amazon
         * S3 object information.
         */
        var certificateArn: String?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?

        fun build(): GetAssociatedEnclaveCertificateIamRolesRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var certificateArn: String? = null
        override var dryRun: Boolean? = null

        constructor(x: GetAssociatedEnclaveCertificateIamRolesRequest) : this() {
            this.certificateArn = x.certificateArn
            this.dryRun = x.dryRun
        }

        override fun build(): GetAssociatedEnclaveCertificateIamRolesRequest = GetAssociatedEnclaveCertificateIamRolesRequest(this)
        override fun certificateArn(certificateArn: String): FluentBuilder = apply { this.certificateArn = certificateArn }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
    }
}
