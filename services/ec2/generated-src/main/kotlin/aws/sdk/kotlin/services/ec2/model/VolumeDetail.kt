// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an EBS volume.
 */
class VolumeDetail private constructor(builder: BuilderImpl) {
    /**
     * The size of the volume, in GiB.
     */
    val size: Long? = builder.size

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): VolumeDetail = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("VolumeDetail(")
        append("size=$size)")
    }

    override fun hashCode(): kotlin.Int {
        var result = size?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as VolumeDetail

        if (size != other.size) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): VolumeDetail = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): VolumeDetail
        /**
         * The size of the volume, in GiB.
         */
        fun size(size: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The size of the volume, in GiB.
         */
        var size: Long?

        fun build(): VolumeDetail
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var size: Long? = null

        constructor(x: VolumeDetail) : this() {
            this.size = x.size
        }

        override fun build(): VolumeDetail = VolumeDetail(this)
        override fun size(size: Long): FluentBuilder = apply { this.size = size }
    }
}
