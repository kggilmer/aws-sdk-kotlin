// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a Region.
 */
class Region private constructor(builder: BuilderImpl) {
    /**
     * The Region service endpoint.
     */
    val endpoint: String? = builder.endpoint
    /**
     * The Region opt-in status. The possible values are opt-in-not-required, opted-in, and
     * not-opted-in.
     */
    val optInStatus: String? = builder.optInStatus
    /**
     * The name of the Region.
     */
    val regionName: String? = builder.regionName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Region = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Region(")
        append("endpoint=$endpoint,")
        append("optInStatus=$optInStatus,")
        append("regionName=$regionName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = endpoint?.hashCode() ?: 0
        result = 31 * result + (optInStatus?.hashCode() ?: 0)
        result = 31 * result + (regionName?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Region

        if (endpoint != other.endpoint) return false
        if (optInStatus != other.optInStatus) return false
        if (regionName != other.regionName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Region = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Region
        /**
         * The Region service endpoint.
         */
        fun endpoint(endpoint: String): FluentBuilder
        /**
         * The Region opt-in status. The possible values are opt-in-not-required, opted-in, and
         * not-opted-in.
         */
        fun optInStatus(optInStatus: String): FluentBuilder
        /**
         * The name of the Region.
         */
        fun regionName(regionName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Region service endpoint.
         */
        var endpoint: String?
        /**
         * The Region opt-in status. The possible values are opt-in-not-required, opted-in, and
         * not-opted-in.
         */
        var optInStatus: String?
        /**
         * The name of the Region.
         */
        var regionName: String?

        fun build(): Region
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var endpoint: String? = null
        override var optInStatus: String? = null
        override var regionName: String? = null

        constructor(x: Region) : this() {
            this.endpoint = x.endpoint
            this.optInStatus = x.optInStatus
            this.regionName = x.regionName
        }

        override fun build(): Region = Region(this)
        override fun endpoint(endpoint: String): FluentBuilder = apply { this.endpoint = endpoint }
        override fun optInStatus(optInStatus: String): FluentBuilder = apply { this.optInStatus = optInStatus }
        override fun regionName(regionName: String): FluentBuilder = apply { this.regionName = regionName }
    }
}
