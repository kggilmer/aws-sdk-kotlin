// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateFlowLogsResponse private constructor(builder: BuilderImpl) {
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the
     * request.
     */
    val clientToken: String? = builder.clientToken
    /**
     * The IDs of the flow logs.
     */
    val flowLogIds: List<String>? = builder.flowLogIds
    /**
     * Information about the flow logs that could not be created successfully.
     */
    val unsuccessful: List<UnsuccessfulItem>? = builder.unsuccessful

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateFlowLogsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateFlowLogsResponse(")
        append("clientToken=$clientToken,")
        append("flowLogIds=$flowLogIds,")
        append("unsuccessful=$unsuccessful)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientToken?.hashCode() ?: 0
        result = 31 * result + (flowLogIds?.hashCode() ?: 0)
        result = 31 * result + (unsuccessful?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateFlowLogsResponse

        if (clientToken != other.clientToken) return false
        if (flowLogIds != other.flowLogIds) return false
        if (unsuccessful != other.unsuccessful) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateFlowLogsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateFlowLogsResponse
        /**
         * Unique, case-sensitive identifier that you provide to ensure the idempotency of the
         * request.
         */
        fun clientToken(clientToken: String): FluentBuilder
        /**
         * The IDs of the flow logs.
         */
        fun flowLogIds(flowLogIds: List<String>): FluentBuilder
        /**
         * Information about the flow logs that could not be created successfully.
         */
        fun unsuccessful(unsuccessful: List<UnsuccessfulItem>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Unique, case-sensitive identifier that you provide to ensure the idempotency of the
         * request.
         */
        var clientToken: String?
        /**
         * The IDs of the flow logs.
         */
        var flowLogIds: List<String>?
        /**
         * Information about the flow logs that could not be created successfully.
         */
        var unsuccessful: List<UnsuccessfulItem>?

        fun build(): CreateFlowLogsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var clientToken: String? = null
        override var flowLogIds: List<String>? = null
        override var unsuccessful: List<UnsuccessfulItem>? = null

        constructor(x: CreateFlowLogsResponse) : this() {
            this.clientToken = x.clientToken
            this.flowLogIds = x.flowLogIds
            this.unsuccessful = x.unsuccessful
        }

        override fun build(): CreateFlowLogsResponse = CreateFlowLogsResponse(this)
        override fun clientToken(clientToken: String): FluentBuilder = apply { this.clientToken = clientToken }
        override fun flowLogIds(flowLogIds: List<String>): FluentBuilder = apply { this.flowLogIds = flowLogIds }
        override fun unsuccessful(unsuccessful: List<UnsuccessfulItem>): FluentBuilder = apply { this.unsuccessful = unsuccessful }
    }
}
