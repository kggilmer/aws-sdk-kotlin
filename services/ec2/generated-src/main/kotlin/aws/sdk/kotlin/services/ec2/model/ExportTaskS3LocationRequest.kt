// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the destination for an export image task.
 */
class ExportTaskS3LocationRequest private constructor(builder: BuilderImpl) {
    /**
     * The destination Amazon S3 bucket.
     */
    val s3Bucket: String? = builder.s3Bucket
    /**
     * The prefix (logical hierarchy) in the bucket.
     */
    val s3Prefix: String? = builder.s3Prefix

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ExportTaskS3LocationRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ExportTaskS3LocationRequest(")
        append("s3Bucket=$s3Bucket,")
        append("s3Prefix=$s3Prefix)")
    }

    override fun hashCode(): kotlin.Int {
        var result = s3Bucket?.hashCode() ?: 0
        result = 31 * result + (s3Prefix?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExportTaskS3LocationRequest

        if (s3Bucket != other.s3Bucket) return false
        if (s3Prefix != other.s3Prefix) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ExportTaskS3LocationRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ExportTaskS3LocationRequest
        /**
         * The destination Amazon S3 bucket.
         */
        fun s3Bucket(s3Bucket: String): FluentBuilder
        /**
         * The prefix (logical hierarchy) in the bucket.
         */
        fun s3Prefix(s3Prefix: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The destination Amazon S3 bucket.
         */
        var s3Bucket: String?
        /**
         * The prefix (logical hierarchy) in the bucket.
         */
        var s3Prefix: String?

        fun build(): ExportTaskS3LocationRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var s3Bucket: String? = null
        override var s3Prefix: String? = null

        constructor(x: ExportTaskS3LocationRequest) : this() {
            this.s3Bucket = x.s3Bucket
            this.s3Prefix = x.s3Prefix
        }

        override fun build(): ExportTaskS3LocationRequest = ExportTaskS3LocationRequest(this)
        override fun s3Bucket(s3Bucket: String): FluentBuilder = apply { this.s3Bucket = s3Bucket }
        override fun s3Prefix(s3Prefix: String): FluentBuilder = apply { this.s3Prefix = s3Prefix }
    }
}
