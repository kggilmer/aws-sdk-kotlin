// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateSnapshotsResponse private constructor(builder: BuilderImpl) {
    /**
     * List of snapshots.
     */
    val snapshots: List<SnapshotInfo>? = builder.snapshots

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateSnapshotsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateSnapshotsResponse(")
        append("snapshots=$snapshots)")
    }

    override fun hashCode(): kotlin.Int {
        var result = snapshots?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateSnapshotsResponse

        if (snapshots != other.snapshots) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateSnapshotsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateSnapshotsResponse
        /**
         * List of snapshots.
         */
        fun snapshots(snapshots: List<SnapshotInfo>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * List of snapshots.
         */
        var snapshots: List<SnapshotInfo>?

        fun build(): CreateSnapshotsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var snapshots: List<SnapshotInfo>? = null

        constructor(x: CreateSnapshotsResponse) : this() {
            this.snapshots = x.snapshots
        }

        override fun build(): CreateSnapshotsResponse = CreateSnapshotsResponse(this)
        override fun snapshots(snapshots: List<SnapshotInfo>): FluentBuilder = apply { this.snapshots = snapshots }
    }
}
