// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for DeleteVpnConnectionRoute.
 */
class DeleteVpnConnectionRouteRequest private constructor(builder: BuilderImpl) {
    /**
     * The CIDR block associated with the local subnet of the customer network.
     */
    val destinationCidrBlock: String? = builder.destinationCidrBlock
    /**
     * The ID of the VPN connection.
     */
    val vpnConnectionId: String? = builder.vpnConnectionId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteVpnConnectionRouteRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteVpnConnectionRouteRequest(")
        append("destinationCidrBlock=$destinationCidrBlock,")
        append("vpnConnectionId=$vpnConnectionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = destinationCidrBlock?.hashCode() ?: 0
        result = 31 * result + (vpnConnectionId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteVpnConnectionRouteRequest

        if (destinationCidrBlock != other.destinationCidrBlock) return false
        if (vpnConnectionId != other.vpnConnectionId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteVpnConnectionRouteRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteVpnConnectionRouteRequest
        /**
         * The CIDR block associated with the local subnet of the customer network.
         */
        fun destinationCidrBlock(destinationCidrBlock: String): FluentBuilder
        /**
         * The ID of the VPN connection.
         */
        fun vpnConnectionId(vpnConnectionId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The CIDR block associated with the local subnet of the customer network.
         */
        var destinationCidrBlock: String?
        /**
         * The ID of the VPN connection.
         */
        var vpnConnectionId: String?

        fun build(): DeleteVpnConnectionRouteRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var destinationCidrBlock: String? = null
        override var vpnConnectionId: String? = null

        constructor(x: DeleteVpnConnectionRouteRequest) : this() {
            this.destinationCidrBlock = x.destinationCidrBlock
            this.vpnConnectionId = x.vpnConnectionId
        }

        override fun build(): DeleteVpnConnectionRouteRequest = DeleteVpnConnectionRouteRequest(this)
        override fun destinationCidrBlock(destinationCidrBlock: String): FluentBuilder = apply { this.destinationCidrBlock = destinationCidrBlock }
        override fun vpnConnectionId(vpnConnectionId: String): FluentBuilder = apply { this.vpnConnectionId = vpnConnectionId }
    }
}
