// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Information about the Private DNS name for interface endpoints.
 */
class PrivateDnsDetails private constructor(builder: BuilderImpl) {
    /**
     * The private DNS name assigned to the VPC endpoint service.
     */
    val privateDnsName: String? = builder.privateDnsName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PrivateDnsDetails = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PrivateDnsDetails(")
        append("privateDnsName=$privateDnsName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = privateDnsName?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PrivateDnsDetails

        if (privateDnsName != other.privateDnsName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PrivateDnsDetails = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PrivateDnsDetails
        /**
         * The private DNS name assigned to the VPC endpoint service.
         */
        fun privateDnsName(privateDnsName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The private DNS name assigned to the VPC endpoint service.
         */
        var privateDnsName: String?

        fun build(): PrivateDnsDetails
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var privateDnsName: String? = null

        constructor(x: PrivateDnsDetails) : this() {
            this.privateDnsName = x.privateDnsName
        }

        override fun build(): PrivateDnsDetails = PrivateDnsDetails(this)
        override fun privateDnsName(privateDnsName: String): FluentBuilder = apply { this.privateDnsName = privateDnsName }
    }
}
