// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteQueuedReservedInstancesResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the queued purchases that could not be deleted.
     */
    val failedQueuedPurchaseDeletions: List<FailedQueuedPurchaseDeletion>? = builder.failedQueuedPurchaseDeletions
    /**
     * Information about the queued purchases that were successfully deleted.
     */
    val successfulQueuedPurchaseDeletions: List<SuccessfulQueuedPurchaseDeletion>? = builder.successfulQueuedPurchaseDeletions

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteQueuedReservedInstancesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteQueuedReservedInstancesResponse(")
        append("failedQueuedPurchaseDeletions=$failedQueuedPurchaseDeletions,")
        append("successfulQueuedPurchaseDeletions=$successfulQueuedPurchaseDeletions)")
    }

    override fun hashCode(): kotlin.Int {
        var result = failedQueuedPurchaseDeletions?.hashCode() ?: 0
        result = 31 * result + (successfulQueuedPurchaseDeletions?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteQueuedReservedInstancesResponse

        if (failedQueuedPurchaseDeletions != other.failedQueuedPurchaseDeletions) return false
        if (successfulQueuedPurchaseDeletions != other.successfulQueuedPurchaseDeletions) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteQueuedReservedInstancesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteQueuedReservedInstancesResponse
        /**
         * Information about the queued purchases that could not be deleted.
         */
        fun failedQueuedPurchaseDeletions(failedQueuedPurchaseDeletions: List<FailedQueuedPurchaseDeletion>): FluentBuilder
        /**
         * Information about the queued purchases that were successfully deleted.
         */
        fun successfulQueuedPurchaseDeletions(successfulQueuedPurchaseDeletions: List<SuccessfulQueuedPurchaseDeletion>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the queued purchases that could not be deleted.
         */
        var failedQueuedPurchaseDeletions: List<FailedQueuedPurchaseDeletion>?
        /**
         * Information about the queued purchases that were successfully deleted.
         */
        var successfulQueuedPurchaseDeletions: List<SuccessfulQueuedPurchaseDeletion>?

        fun build(): DeleteQueuedReservedInstancesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var failedQueuedPurchaseDeletions: List<FailedQueuedPurchaseDeletion>? = null
        override var successfulQueuedPurchaseDeletions: List<SuccessfulQueuedPurchaseDeletion>? = null

        constructor(x: DeleteQueuedReservedInstancesResponse) : this() {
            this.failedQueuedPurchaseDeletions = x.failedQueuedPurchaseDeletions
            this.successfulQueuedPurchaseDeletions = x.successfulQueuedPurchaseDeletions
        }

        override fun build(): DeleteQueuedReservedInstancesResponse = DeleteQueuedReservedInstancesResponse(this)
        override fun failedQueuedPurchaseDeletions(failedQueuedPurchaseDeletions: List<FailedQueuedPurchaseDeletion>): FluentBuilder = apply { this.failedQueuedPurchaseDeletions = failedQueuedPurchaseDeletions }
        override fun successfulQueuedPurchaseDeletions(successfulQueuedPurchaseDeletions: List<SuccessfulQueuedPurchaseDeletion>): FluentBuilder = apply { this.successfulQueuedPurchaseDeletions = successfulQueuedPurchaseDeletions }
    }
}
