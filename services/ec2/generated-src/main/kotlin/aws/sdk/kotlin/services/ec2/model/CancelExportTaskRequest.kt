// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CancelExportTaskRequest private constructor(builder: BuilderImpl) {
    /**
     * The ID of the export task. This is the ID returned by CreateInstanceExportTask.
     */
    val exportTaskId: String? = builder.exportTaskId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CancelExportTaskRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CancelExportTaskRequest(")
        append("exportTaskId=$exportTaskId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = exportTaskId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CancelExportTaskRequest

        if (exportTaskId != other.exportTaskId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CancelExportTaskRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CancelExportTaskRequest
        /**
         * The ID of the export task. This is the ID returned by CreateInstanceExportTask.
         */
        fun exportTaskId(exportTaskId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the export task. This is the ID returned by CreateInstanceExportTask.
         */
        var exportTaskId: String?

        fun build(): CancelExportTaskRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var exportTaskId: String? = null

        constructor(x: CancelExportTaskRequest) : this() {
            this.exportTaskId = x.exportTaskId
        }

        override fun build(): CancelExportTaskRequest = CancelExportTaskRequest(this)
        override fun exportTaskId(exportTaskId: String): FluentBuilder = apply { this.exportTaskId = exportTaskId }
    }
}
