// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an account attribute.
 */
class AccountAttribute private constructor(builder: BuilderImpl) {
    /**
     * The name of the account attribute.
     */
    val attributeName: String? = builder.attributeName
    /**
     * The values for the account attribute.
     */
    val attributeValues: List<AccountAttributeValue>? = builder.attributeValues

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AccountAttribute = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AccountAttribute(")
        append("attributeName=$attributeName,")
        append("attributeValues=$attributeValues)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attributeName?.hashCode() ?: 0
        result = 31 * result + (attributeValues?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AccountAttribute

        if (attributeName != other.attributeName) return false
        if (attributeValues != other.attributeValues) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AccountAttribute = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AccountAttribute
        /**
         * The name of the account attribute.
         */
        fun attributeName(attributeName: String): FluentBuilder
        /**
         * The values for the account attribute.
         */
        fun attributeValues(attributeValues: List<AccountAttributeValue>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the account attribute.
         */
        var attributeName: String?
        /**
         * The values for the account attribute.
         */
        var attributeValues: List<AccountAttributeValue>?

        fun build(): AccountAttribute
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var attributeName: String? = null
        override var attributeValues: List<AccountAttributeValue>? = null

        constructor(x: AccountAttribute) : this() {
            this.attributeName = x.attributeName
            this.attributeValues = x.attributeValues
        }

        override fun build(): AccountAttribute = AccountAttribute(this)
        override fun attributeName(attributeName: String): FluentBuilder = apply { this.attributeName = attributeName }
        override fun attributeValues(attributeValues: List<AccountAttributeValue>): FluentBuilder = apply { this.attributeValues = attributeValues }
    }
}
