// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteTrafficMirrorFilterRuleResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the deleted Traffic Mirror rule.
     */
    val trafficMirrorFilterRuleId: String? = builder.trafficMirrorFilterRuleId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteTrafficMirrorFilterRuleResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteTrafficMirrorFilterRuleResponse(")
        append("trafficMirrorFilterRuleId=$trafficMirrorFilterRuleId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = trafficMirrorFilterRuleId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteTrafficMirrorFilterRuleResponse

        if (trafficMirrorFilterRuleId != other.trafficMirrorFilterRuleId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteTrafficMirrorFilterRuleResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteTrafficMirrorFilterRuleResponse
        /**
         * The ID of the deleted Traffic Mirror rule.
         */
        fun trafficMirrorFilterRuleId(trafficMirrorFilterRuleId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the deleted Traffic Mirror rule.
         */
        var trafficMirrorFilterRuleId: String?

        fun build(): DeleteTrafficMirrorFilterRuleResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var trafficMirrorFilterRuleId: String? = null

        constructor(x: DeleteTrafficMirrorFilterRuleResponse) : this() {
            this.trafficMirrorFilterRuleId = x.trafficMirrorFilterRuleId
        }

        override fun build(): DeleteTrafficMirrorFilterRuleResponse = DeleteTrafficMirrorFilterRuleResponse(this)
        override fun trafficMirrorFilterRuleId(trafficMirrorFilterRuleId: String): FluentBuilder = apply { this.trafficMirrorFilterRuleId = trafficMirrorFilterRuleId }
    }
}
