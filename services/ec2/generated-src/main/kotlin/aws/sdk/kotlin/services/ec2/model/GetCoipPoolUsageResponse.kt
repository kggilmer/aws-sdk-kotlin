// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class GetCoipPoolUsageResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the address usage.
     */
    val coipAddressUsages: List<CoipAddressUsage>? = builder.coipAddressUsages
    /**
     * The ID of the customer-owned address pool.
     */
    val coipPoolId: String? = builder.coipPoolId
    /**
     * The ID of the local gateway route table.
     */
    val localGatewayRouteTableId: String? = builder.localGatewayRouteTableId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetCoipPoolUsageResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetCoipPoolUsageResponse(")
        append("coipAddressUsages=$coipAddressUsages,")
        append("coipPoolId=$coipPoolId,")
        append("localGatewayRouteTableId=$localGatewayRouteTableId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = coipAddressUsages?.hashCode() ?: 0
        result = 31 * result + (coipPoolId?.hashCode() ?: 0)
        result = 31 * result + (localGatewayRouteTableId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetCoipPoolUsageResponse

        if (coipAddressUsages != other.coipAddressUsages) return false
        if (coipPoolId != other.coipPoolId) return false
        if (localGatewayRouteTableId != other.localGatewayRouteTableId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetCoipPoolUsageResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetCoipPoolUsageResponse
        /**
         * Information about the address usage.
         */
        fun coipAddressUsages(coipAddressUsages: List<CoipAddressUsage>): FluentBuilder
        /**
         * The ID of the customer-owned address pool.
         */
        fun coipPoolId(coipPoolId: String): FluentBuilder
        /**
         * The ID of the local gateway route table.
         */
        fun localGatewayRouteTableId(localGatewayRouteTableId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the address usage.
         */
        var coipAddressUsages: List<CoipAddressUsage>?
        /**
         * The ID of the customer-owned address pool.
         */
        var coipPoolId: String?
        /**
         * The ID of the local gateway route table.
         */
        var localGatewayRouteTableId: String?

        fun build(): GetCoipPoolUsageResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var coipAddressUsages: List<CoipAddressUsage>? = null
        override var coipPoolId: String? = null
        override var localGatewayRouteTableId: String? = null

        constructor(x: GetCoipPoolUsageResponse) : this() {
            this.coipAddressUsages = x.coipAddressUsages
            this.coipPoolId = x.coipPoolId
            this.localGatewayRouteTableId = x.localGatewayRouteTableId
        }

        override fun build(): GetCoipPoolUsageResponse = GetCoipPoolUsageResponse(this)
        override fun coipAddressUsages(coipAddressUsages: List<CoipAddressUsage>): FluentBuilder = apply { this.coipAddressUsages = coipAddressUsages }
        override fun coipPoolId(coipPoolId: String): FluentBuilder = apply { this.coipPoolId = coipPoolId }
        override fun localGatewayRouteTableId(localGatewayRouteTableId: String): FluentBuilder = apply { this.localGatewayRouteTableId = localGatewayRouteTableId }
    }
}
