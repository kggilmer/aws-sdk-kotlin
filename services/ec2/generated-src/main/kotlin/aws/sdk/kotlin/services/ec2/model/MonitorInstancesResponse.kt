// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class MonitorInstancesResponse private constructor(builder: BuilderImpl) {
    /**
     * The monitoring information.
     */
    val instanceMonitorings: List<InstanceMonitoring>? = builder.instanceMonitorings

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): MonitorInstancesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("MonitorInstancesResponse(")
        append("instanceMonitorings=$instanceMonitorings)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceMonitorings?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as MonitorInstancesResponse

        if (instanceMonitorings != other.instanceMonitorings) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): MonitorInstancesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): MonitorInstancesResponse
        /**
         * The monitoring information.
         */
        fun instanceMonitorings(instanceMonitorings: List<InstanceMonitoring>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The monitoring information.
         */
        var instanceMonitorings: List<InstanceMonitoring>?

        fun build(): MonitorInstancesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceMonitorings: List<InstanceMonitoring>? = null

        constructor(x: MonitorInstancesResponse) : this() {
            this.instanceMonitorings = x.instanceMonitorings
        }

        override fun build(): MonitorInstancesResponse = MonitorInstancesResponse(this)
        override fun instanceMonitorings(instanceMonitorings: List<InstanceMonitoring>): FluentBuilder = apply { this.instanceMonitorings = instanceMonitorings }
    }
}
