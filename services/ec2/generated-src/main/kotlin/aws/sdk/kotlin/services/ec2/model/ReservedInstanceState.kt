// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class ReservedInstanceState {

    abstract val value: kotlin.String

    object Active : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override val value: kotlin.String = "active"
        override fun toString(): kotlin.String = value
    }

    object PaymentFailed : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override val value: kotlin.String = "payment-failed"
        override fun toString(): kotlin.String = value
    }

    object PaymentPending : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override val value: kotlin.String = "payment-pending"
        override fun toString(): kotlin.String = value
    }

    object Queued : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override val value: kotlin.String = "queued"
        override fun toString(): kotlin.String = value
    }

    object QueuedDeleted : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override val value: kotlin.String = "queued-deleted"
        override fun toString(): kotlin.String = value
    }

    object Retired : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override val value: kotlin.String = "retired"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.ReservedInstanceState() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.ReservedInstanceState = when(str) {
            "active" -> Active
            "payment-failed" -> PaymentFailed
            "payment-pending" -> PaymentPending
            "queued" -> Queued
            "queued-deleted" -> QueuedDeleted
            "retired" -> Retired
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.ReservedInstanceState> = listOf(
            Active,
            PaymentFailed,
            PaymentPending,
            Queued,
            QueuedDeleted,
            Retired
        )
    }
}
