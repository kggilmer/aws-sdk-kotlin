// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class NetworkInterfaceStatus {

    abstract val value: kotlin.String

    object Associated : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus() {
        override val value: kotlin.String = "associated"
        override fun toString(): kotlin.String = value
    }

    object Attaching : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus() {
        override val value: kotlin.String = "attaching"
        override fun toString(): kotlin.String = value
    }

    object Available : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus() {
        override val value: kotlin.String = "available"
        override fun toString(): kotlin.String = value
    }

    object Detaching : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus() {
        override val value: kotlin.String = "detaching"
        override fun toString(): kotlin.String = value
    }

    object InUse : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus() {
        override val value: kotlin.String = "in-use"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus = when(str) {
            "associated" -> Associated
            "attaching" -> Attaching
            "available" -> Available
            "detaching" -> Detaching
            "in-use" -> InUse
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.NetworkInterfaceStatus> = listOf(
            Associated,
            Attaching,
            Available,
            Detaching,
            InUse
        )
    }
}
