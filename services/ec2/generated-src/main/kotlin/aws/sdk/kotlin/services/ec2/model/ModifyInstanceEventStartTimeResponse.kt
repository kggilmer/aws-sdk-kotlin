// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyInstanceEventStartTimeResponse private constructor(builder: BuilderImpl) {
    /**
     * Describes a scheduled event for an instance.
     */
    val event: InstanceStatusEvent? = builder.event

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyInstanceEventStartTimeResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyInstanceEventStartTimeResponse(")
        append("event=$event)")
    }

    override fun hashCode(): kotlin.Int {
        var result = event?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyInstanceEventStartTimeResponse

        if (event != other.event) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyInstanceEventStartTimeResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyInstanceEventStartTimeResponse
        /**
         * Describes a scheduled event for an instance.
         */
        fun event(event: InstanceStatusEvent): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Describes a scheduled event for an instance.
         */
        var event: InstanceStatusEvent?

        fun build(): ModifyInstanceEventStartTimeResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.InstanceStatusEvent] inside the given [block]
         */
        fun event(block: InstanceStatusEvent.DslBuilder.() -> kotlin.Unit) {
            this.event = InstanceStatusEvent.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var event: InstanceStatusEvent? = null

        constructor(x: ModifyInstanceEventStartTimeResponse) : this() {
            this.event = x.event
        }

        override fun build(): ModifyInstanceEventStartTimeResponse = ModifyInstanceEventStartTimeResponse(this)
        override fun event(event: InstanceStatusEvent): FluentBuilder = apply { this.event = event }
    }
}
