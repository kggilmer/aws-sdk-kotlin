// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an IPv6 CIDR block.
 */
class Ipv6CidrBlock private constructor(builder: BuilderImpl) {
    /**
     * The IPv6 CIDR block.
     */
    val ipv6CidrBlock: String? = builder.ipv6CidrBlock

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Ipv6CidrBlock = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Ipv6CidrBlock(")
        append("ipv6CidrBlock=$ipv6CidrBlock)")
    }

    override fun hashCode(): kotlin.Int {
        var result = ipv6CidrBlock?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Ipv6CidrBlock

        if (ipv6CidrBlock != other.ipv6CidrBlock) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Ipv6CidrBlock = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Ipv6CidrBlock
        /**
         * The IPv6 CIDR block.
         */
        fun ipv6CidrBlock(ipv6CidrBlock: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The IPv6 CIDR block.
         */
        var ipv6CidrBlock: String?

        fun build(): Ipv6CidrBlock
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var ipv6CidrBlock: String? = null

        constructor(x: Ipv6CidrBlock) : this() {
            this.ipv6CidrBlock = x.ipv6CidrBlock
        }

        override fun build(): Ipv6CidrBlock = Ipv6CidrBlock(this)
        override fun ipv6CidrBlock(ipv6CidrBlock: String): FluentBuilder = apply { this.ipv6CidrBlock = ipv6CidrBlock }
    }
}
