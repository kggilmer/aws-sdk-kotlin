// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for ModifyReservedInstances.
 */
class ModifyReservedInstancesRequest private constructor(builder: BuilderImpl) {
    /**
     * A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see
     * <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency.
     */
    val clientToken: String? = builder.clientToken
    /**
     * The IDs of the Reserved Instances to modify.
     */
    val reservedInstancesIds: List<String>? = builder.reservedInstancesIds
    /**
     * The configuration settings for the Reserved Instances to modify.
     */
    val targetConfigurations: List<ReservedInstancesConfiguration>? = builder.targetConfigurations

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyReservedInstancesRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyReservedInstancesRequest(")
        append("clientToken=$clientToken,")
        append("reservedInstancesIds=$reservedInstancesIds,")
        append("targetConfigurations=$targetConfigurations)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientToken?.hashCode() ?: 0
        result = 31 * result + (reservedInstancesIds?.hashCode() ?: 0)
        result = 31 * result + (targetConfigurations?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyReservedInstancesRequest

        if (clientToken != other.clientToken) return false
        if (reservedInstancesIds != other.reservedInstancesIds) return false
        if (targetConfigurations != other.targetConfigurations) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyReservedInstancesRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyReservedInstancesRequest
        /**
         * A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see
         * <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency.
         */
        fun clientToken(clientToken: String): FluentBuilder
        /**
         * The IDs of the Reserved Instances to modify.
         */
        fun reservedInstancesIds(reservedInstancesIds: List<String>): FluentBuilder
        /**
         * The configuration settings for the Reserved Instances to modify.
         */
        fun targetConfigurations(targetConfigurations: List<ReservedInstancesConfiguration>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see
         * <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency.
         */
        var clientToken: String?
        /**
         * The IDs of the Reserved Instances to modify.
         */
        var reservedInstancesIds: List<String>?
        /**
         * The configuration settings for the Reserved Instances to modify.
         */
        var targetConfigurations: List<ReservedInstancesConfiguration>?

        fun build(): ModifyReservedInstancesRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var clientToken: String? = null
        override var reservedInstancesIds: List<String>? = null
        override var targetConfigurations: List<ReservedInstancesConfiguration>? = null

        constructor(x: ModifyReservedInstancesRequest) : this() {
            this.clientToken = x.clientToken
            this.reservedInstancesIds = x.reservedInstancesIds
            this.targetConfigurations = x.targetConfigurations
        }

        override fun build(): ModifyReservedInstancesRequest = ModifyReservedInstancesRequest(this)
        override fun clientToken(clientToken: String): FluentBuilder = apply { this.clientToken = clientToken }
        override fun reservedInstancesIds(reservedInstancesIds: List<String>): FluentBuilder = apply { this.reservedInstancesIds = reservedInstancesIds }
        override fun targetConfigurations(targetConfigurations: List<ReservedInstancesConfiguration>): FluentBuilder = apply { this.targetConfigurations = targetConfigurations }
    }
}
