// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class ArchitectureType {

    abstract val value: kotlin.String

    object Arm64 : aws.sdk.kotlin.services.ec2.model.ArchitectureType() {
        override val value: kotlin.String = "arm64"
        override fun toString(): kotlin.String = value
    }

    object I386 : aws.sdk.kotlin.services.ec2.model.ArchitectureType() {
        override val value: kotlin.String = "i386"
        override fun toString(): kotlin.String = value
    }

    object X86_64 : aws.sdk.kotlin.services.ec2.model.ArchitectureType() {
        override val value: kotlin.String = "x86_64"
        override fun toString(): kotlin.String = value
    }

    object X86_64_Mac : aws.sdk.kotlin.services.ec2.model.ArchitectureType() {
        override val value: kotlin.String = "x86_64_mac"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.ArchitectureType() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.ArchitectureType = when(str) {
            "arm64" -> Arm64
            "i386" -> I386
            "x86_64" -> X86_64
            "x86_64_mac" -> X86_64_Mac
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.ArchitectureType> = listOf(
            Arm64,
            I386,
            X86_64,
            X86_64_Mac
        )
    }
}
