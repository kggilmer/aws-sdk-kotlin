// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyFpgaImageAttributeResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the attribute.
     */
    val fpgaImageAttribute: FpgaImageAttribute? = builder.fpgaImageAttribute

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyFpgaImageAttributeResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyFpgaImageAttributeResponse(")
        append("fpgaImageAttribute=$fpgaImageAttribute)")
    }

    override fun hashCode(): kotlin.Int {
        var result = fpgaImageAttribute?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyFpgaImageAttributeResponse

        if (fpgaImageAttribute != other.fpgaImageAttribute) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyFpgaImageAttributeResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyFpgaImageAttributeResponse
        /**
         * Information about the attribute.
         */
        fun fpgaImageAttribute(fpgaImageAttribute: FpgaImageAttribute): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the attribute.
         */
        var fpgaImageAttribute: FpgaImageAttribute?

        fun build(): ModifyFpgaImageAttributeResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.FpgaImageAttribute] inside the given [block]
         */
        fun fpgaImageAttribute(block: FpgaImageAttribute.DslBuilder.() -> kotlin.Unit) {
            this.fpgaImageAttribute = FpgaImageAttribute.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var fpgaImageAttribute: FpgaImageAttribute? = null

        constructor(x: ModifyFpgaImageAttributeResponse) : this() {
            this.fpgaImageAttribute = x.fpgaImageAttribute
        }

        override fun build(): ModifyFpgaImageAttributeResponse = ModifyFpgaImageAttributeResponse(this)
        override fun fpgaImageAttribute(fpgaImageAttribute: FpgaImageAttribute): FluentBuilder = apply { this.fpgaImageAttribute = fpgaImageAttribute }
    }
}
