// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyAddressAttributeResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the Elastic IP address.
     */
    val address: AddressAttribute? = builder.address

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyAddressAttributeResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyAddressAttributeResponse(")
        append("address=$address)")
    }

    override fun hashCode(): kotlin.Int {
        var result = address?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyAddressAttributeResponse

        if (address != other.address) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyAddressAttributeResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyAddressAttributeResponse
        /**
         * Information about the Elastic IP address.
         */
        fun address(address: AddressAttribute): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the Elastic IP address.
         */
        var address: AddressAttribute?

        fun build(): ModifyAddressAttributeResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AddressAttribute] inside the given [block]
         */
        fun address(block: AddressAttribute.DslBuilder.() -> kotlin.Unit) {
            this.address = AddressAttribute.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var address: AddressAttribute? = null

        constructor(x: ModifyAddressAttributeResponse) : this() {
            this.address = x.address
        }

        override fun build(): ModifyAddressAttributeResponse = ModifyAddressAttributeResponse(this)
        override fun address(address: AddressAttribute): FluentBuilder = apply { this.address = address }
    }
}
