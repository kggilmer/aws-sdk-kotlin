// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class ResourceType {

    abstract val value: kotlin.String

    object CapacityReservation : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "capacity-reservation"
        override fun toString(): kotlin.String = value
    }

    object CarrierGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "carrier-gateway"
        override fun toString(): kotlin.String = value
    }

    object ClientVpnEndpoint : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "client-vpn-endpoint"
        override fun toString(): kotlin.String = value
    }

    object CustomerGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "customer-gateway"
        override fun toString(): kotlin.String = value
    }

    object DedicatedHost : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "dedicated-host"
        override fun toString(): kotlin.String = value
    }

    object DhcpOptions : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "dhcp-options"
        override fun toString(): kotlin.String = value
    }

    object EgressOnlyInternetGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "egress-only-internet-gateway"
        override fun toString(): kotlin.String = value
    }

    object ElasticGpu : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "elastic-gpu"
        override fun toString(): kotlin.String = value
    }

    object ElasticIp : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "elastic-ip"
        override fun toString(): kotlin.String = value
    }

    object ExportImageTask : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "export-image-task"
        override fun toString(): kotlin.String = value
    }

    object ExportInstanceTask : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "export-instance-task"
        override fun toString(): kotlin.String = value
    }

    object Fleet : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "fleet"
        override fun toString(): kotlin.String = value
    }

    object FpgaImage : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "fpga-image"
        override fun toString(): kotlin.String = value
    }

    object HostReservation : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "host-reservation"
        override fun toString(): kotlin.String = value
    }

    object Image : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "image"
        override fun toString(): kotlin.String = value
    }

    object ImportImageTask : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "import-image-task"
        override fun toString(): kotlin.String = value
    }

    object ImportSnapshotTask : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "import-snapshot-task"
        override fun toString(): kotlin.String = value
    }

    object Instance : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "instance"
        override fun toString(): kotlin.String = value
    }

    object InstanceEventWindow : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "instance-event-window"
        override fun toString(): kotlin.String = value
    }

    object InternetGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "internet-gateway"
        override fun toString(): kotlin.String = value
    }

    object Ipv4PoolEc2 : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "ipv4pool-ec2"
        override fun toString(): kotlin.String = value
    }

    object Ipv6PoolEc2 : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "ipv6pool-ec2"
        override fun toString(): kotlin.String = value
    }

    object KeyPair : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "key-pair"
        override fun toString(): kotlin.String = value
    }

    object LaunchTemplate : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "launch-template"
        override fun toString(): kotlin.String = value
    }

    object LocalGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "local-gateway"
        override fun toString(): kotlin.String = value
    }

    object LocalGatewayRouteTable : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "local-gateway-route-table"
        override fun toString(): kotlin.String = value
    }

    object LocalGatewayRouteTableVirtualInterfaceGroupAssociation : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "local-gateway-route-table-virtual-interface-group-association"
        override fun toString(): kotlin.String = value
    }

    object LocalGatewayRouteTableVpcAssociation : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "local-gateway-route-table-vpc-association"
        override fun toString(): kotlin.String = value
    }

    object LocalGatewayVirtualInterface : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "local-gateway-virtual-interface"
        override fun toString(): kotlin.String = value
    }

    object LocalGatewayVirtualInterfaceGroup : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "local-gateway-virtual-interface-group"
        override fun toString(): kotlin.String = value
    }

    object Natgateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "natgateway"
        override fun toString(): kotlin.String = value
    }

    object NetworkAcl : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "network-acl"
        override fun toString(): kotlin.String = value
    }

    object NetworkInsightsAnalysis : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "network-insights-analysis"
        override fun toString(): kotlin.String = value
    }

    object NetworkInsightsPath : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "network-insights-path"
        override fun toString(): kotlin.String = value
    }

    object NetworkInterface : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "network-interface"
        override fun toString(): kotlin.String = value
    }

    object PlacementGroup : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "placement-group"
        override fun toString(): kotlin.String = value
    }

    object PrefixList : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "prefix-list"
        override fun toString(): kotlin.String = value
    }

    object ReplaceRootVolumeTask : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "replace-root-volume-task"
        override fun toString(): kotlin.String = value
    }

    object ReservedInstances : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "reserved-instances"
        override fun toString(): kotlin.String = value
    }

    object RouteTable : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "route-table"
        override fun toString(): kotlin.String = value
    }

    object SecurityGroup : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "security-group"
        override fun toString(): kotlin.String = value
    }

    object SecurityGroupRule : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "security-group-rule"
        override fun toString(): kotlin.String = value
    }

    object Snapshot : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "snapshot"
        override fun toString(): kotlin.String = value
    }

    object SpotFleetRequest : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "spot-fleet-request"
        override fun toString(): kotlin.String = value
    }

    object SpotInstancesRequest : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "spot-instances-request"
        override fun toString(): kotlin.String = value
    }

    object Subnet : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "subnet"
        override fun toString(): kotlin.String = value
    }

    object TrafficMirrorFilter : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "traffic-mirror-filter"
        override fun toString(): kotlin.String = value
    }

    object TrafficMirrorSession : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "traffic-mirror-session"
        override fun toString(): kotlin.String = value
    }

    object TrafficMirrorTarget : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "traffic-mirror-target"
        override fun toString(): kotlin.String = value
    }

    object TransitGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "transit-gateway"
        override fun toString(): kotlin.String = value
    }

    object TransitGatewayAttachment : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "transit-gateway-attachment"
        override fun toString(): kotlin.String = value
    }

    object TransitGatewayConnectPeer : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "transit-gateway-connect-peer"
        override fun toString(): kotlin.String = value
    }

    object TransitGatewayMulticastDomain : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "transit-gateway-multicast-domain"
        override fun toString(): kotlin.String = value
    }

    object TransitGatewayRouteTable : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "transit-gateway-route-table"
        override fun toString(): kotlin.String = value
    }

    object Volume : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "volume"
        override fun toString(): kotlin.String = value
    }

    object Vpc : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpc"
        override fun toString(): kotlin.String = value
    }

    object VpcEndpoint : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpc-endpoint"
        override fun toString(): kotlin.String = value
    }

    object VpcEndpointService : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpc-endpoint-service"
        override fun toString(): kotlin.String = value
    }

    object VpcFlowLog : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpc-flow-log"
        override fun toString(): kotlin.String = value
    }

    object VpcPeeringConnection : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpc-peering-connection"
        override fun toString(): kotlin.String = value
    }

    object VpnConnection : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpn-connection"
        override fun toString(): kotlin.String = value
    }

    object VpnGateway : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override val value: kotlin.String = "vpn-gateway"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.ResourceType() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.ResourceType = when(str) {
            "capacity-reservation" -> CapacityReservation
            "carrier-gateway" -> CarrierGateway
            "client-vpn-endpoint" -> ClientVpnEndpoint
            "customer-gateway" -> CustomerGateway
            "dedicated-host" -> DedicatedHost
            "dhcp-options" -> DhcpOptions
            "egress-only-internet-gateway" -> EgressOnlyInternetGateway
            "elastic-gpu" -> ElasticGpu
            "elastic-ip" -> ElasticIp
            "export-image-task" -> ExportImageTask
            "export-instance-task" -> ExportInstanceTask
            "fleet" -> Fleet
            "fpga-image" -> FpgaImage
            "host-reservation" -> HostReservation
            "image" -> Image
            "import-image-task" -> ImportImageTask
            "import-snapshot-task" -> ImportSnapshotTask
            "instance" -> Instance
            "instance-event-window" -> InstanceEventWindow
            "internet-gateway" -> InternetGateway
            "ipv4pool-ec2" -> Ipv4PoolEc2
            "ipv6pool-ec2" -> Ipv6PoolEc2
            "key-pair" -> KeyPair
            "launch-template" -> LaunchTemplate
            "local-gateway" -> LocalGateway
            "local-gateway-route-table" -> LocalGatewayRouteTable
            "local-gateway-route-table-virtual-interface-group-association" -> LocalGatewayRouteTableVirtualInterfaceGroupAssociation
            "local-gateway-route-table-vpc-association" -> LocalGatewayRouteTableVpcAssociation
            "local-gateway-virtual-interface" -> LocalGatewayVirtualInterface
            "local-gateway-virtual-interface-group" -> LocalGatewayVirtualInterfaceGroup
            "natgateway" -> Natgateway
            "network-acl" -> NetworkAcl
            "network-insights-analysis" -> NetworkInsightsAnalysis
            "network-insights-path" -> NetworkInsightsPath
            "network-interface" -> NetworkInterface
            "placement-group" -> PlacementGroup
            "prefix-list" -> PrefixList
            "replace-root-volume-task" -> ReplaceRootVolumeTask
            "reserved-instances" -> ReservedInstances
            "route-table" -> RouteTable
            "security-group" -> SecurityGroup
            "security-group-rule" -> SecurityGroupRule
            "snapshot" -> Snapshot
            "spot-fleet-request" -> SpotFleetRequest
            "spot-instances-request" -> SpotInstancesRequest
            "subnet" -> Subnet
            "traffic-mirror-filter" -> TrafficMirrorFilter
            "traffic-mirror-session" -> TrafficMirrorSession
            "traffic-mirror-target" -> TrafficMirrorTarget
            "transit-gateway" -> TransitGateway
            "transit-gateway-attachment" -> TransitGatewayAttachment
            "transit-gateway-connect-peer" -> TransitGatewayConnectPeer
            "transit-gateway-multicast-domain" -> TransitGatewayMulticastDomain
            "transit-gateway-route-table" -> TransitGatewayRouteTable
            "volume" -> Volume
            "vpc" -> Vpc
            "vpc-endpoint" -> VpcEndpoint
            "vpc-endpoint-service" -> VpcEndpointService
            "vpc-flow-log" -> VpcFlowLog
            "vpc-peering-connection" -> VpcPeeringConnection
            "vpn-connection" -> VpnConnection
            "vpn-gateway" -> VpnGateway
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.ResourceType> = listOf(
            CapacityReservation,
            CarrierGateway,
            ClientVpnEndpoint,
            CustomerGateway,
            DedicatedHost,
            DhcpOptions,
            EgressOnlyInternetGateway,
            ElasticGpu,
            ElasticIp,
            ExportImageTask,
            ExportInstanceTask,
            Fleet,
            FpgaImage,
            HostReservation,
            Image,
            ImportImageTask,
            ImportSnapshotTask,
            Instance,
            InstanceEventWindow,
            InternetGateway,
            Ipv4PoolEc2,
            Ipv6PoolEc2,
            KeyPair,
            LaunchTemplate,
            LocalGateway,
            LocalGatewayRouteTable,
            LocalGatewayRouteTableVirtualInterfaceGroupAssociation,
            LocalGatewayRouteTableVpcAssociation,
            LocalGatewayVirtualInterface,
            LocalGatewayVirtualInterfaceGroup,
            Natgateway,
            NetworkAcl,
            NetworkInsightsAnalysis,
            NetworkInsightsPath,
            NetworkInterface,
            PlacementGroup,
            PrefixList,
            ReplaceRootVolumeTask,
            ReservedInstances,
            RouteTable,
            SecurityGroup,
            SecurityGroupRule,
            Snapshot,
            SpotFleetRequest,
            SpotInstancesRequest,
            Subnet,
            TrafficMirrorFilter,
            TrafficMirrorSession,
            TrafficMirrorTarget,
            TransitGateway,
            TransitGatewayAttachment,
            TransitGatewayConnectPeer,
            TransitGatewayMulticastDomain,
            TransitGatewayRouteTable,
            Volume,
            Vpc,
            VpcEndpoint,
            VpcEndpointService,
            VpcFlowLog,
            VpcPeeringConnection,
            VpnConnection,
            VpnGateway
        )
    }
}
