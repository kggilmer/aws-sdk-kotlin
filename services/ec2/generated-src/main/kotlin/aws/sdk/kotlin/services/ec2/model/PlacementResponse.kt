// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the placement of an instance.
 */
class PlacementResponse private constructor(builder: BuilderImpl) {
    /**
     * The name of the placement group that the instance is in.
     */
    val groupName: String? = builder.groupName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PlacementResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PlacementResponse(")
        append("groupName=$groupName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = groupName?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PlacementResponse

        if (groupName != other.groupName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PlacementResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PlacementResponse
        /**
         * The name of the placement group that the instance is in.
         */
        fun groupName(groupName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the placement group that the instance is in.
         */
        var groupName: String?

        fun build(): PlacementResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var groupName: String? = null

        constructor(x: PlacementResponse) : this() {
            this.groupName = x.groupName
        }

        override fun build(): PlacementResponse = PlacementResponse(this)
        override fun groupName(groupName: String): FluentBuilder = apply { this.groupName = groupName }
    }
}
