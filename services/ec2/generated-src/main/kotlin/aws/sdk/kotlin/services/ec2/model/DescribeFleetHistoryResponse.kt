// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

class DescribeFleetHistoryResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the EC Fleet.
     */
    val fleetId: String? = builder.fleetId
    /**
     * Information about the events in the history of the EC2 Fleet.
     */
    val historyRecords: List<HistoryRecordEntry>? = builder.historyRecords
    /**
     * The last date and time for the events, in UTC format (for example,
     * YYYY-MM-DDTHH:MM:SSZ).
     * All records up to this time were retrieved.
     * If nextToken indicates that there are more results, this value is not
     * present.
     */
    val lastEvaluatedTime: Instant? = builder.lastEvaluatedTime
    /**
     * The token for the next set of results.
     */
    val nextToken: String? = builder.nextToken
    /**
     * The start date and time for the events, in UTC format (for example,
     * YYYY-MM-DDTHH:MM:SSZ).
     */
    val startTime: Instant? = builder.startTime

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeFleetHistoryResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeFleetHistoryResponse(")
        append("fleetId=$fleetId,")
        append("historyRecords=$historyRecords,")
        append("lastEvaluatedTime=$lastEvaluatedTime,")
        append("nextToken=$nextToken,")
        append("startTime=$startTime)")
    }

    override fun hashCode(): kotlin.Int {
        var result = fleetId?.hashCode() ?: 0
        result = 31 * result + (historyRecords?.hashCode() ?: 0)
        result = 31 * result + (lastEvaluatedTime?.hashCode() ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (startTime?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeFleetHistoryResponse

        if (fleetId != other.fleetId) return false
        if (historyRecords != other.historyRecords) return false
        if (lastEvaluatedTime != other.lastEvaluatedTime) return false
        if (nextToken != other.nextToken) return false
        if (startTime != other.startTime) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeFleetHistoryResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeFleetHistoryResponse
        /**
         * The ID of the EC Fleet.
         */
        fun fleetId(fleetId: String): FluentBuilder
        /**
         * Information about the events in the history of the EC2 Fleet.
         */
        fun historyRecords(historyRecords: List<HistoryRecordEntry>): FluentBuilder
        /**
         * The last date and time for the events, in UTC format (for example,
         * YYYY-MM-DDTHH:MM:SSZ).
         * All records up to this time were retrieved.
         * If nextToken indicates that there are more results, this value is not
         * present.
         */
        fun lastEvaluatedTime(lastEvaluatedTime: Instant): FluentBuilder
        /**
         * The token for the next set of results.
         */
        fun nextToken(nextToken: String): FluentBuilder
        /**
         * The start date and time for the events, in UTC format (for example,
         * YYYY-MM-DDTHH:MM:SSZ).
         */
        fun startTime(startTime: Instant): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the EC Fleet.
         */
        var fleetId: String?
        /**
         * Information about the events in the history of the EC2 Fleet.
         */
        var historyRecords: List<HistoryRecordEntry>?
        /**
         * The last date and time for the events, in UTC format (for example,
         * YYYY-MM-DDTHH:MM:SSZ).
         * All records up to this time were retrieved.
         * If nextToken indicates that there are more results, this value is not
         * present.
         */
        var lastEvaluatedTime: Instant?
        /**
         * The token for the next set of results.
         */
        var nextToken: String?
        /**
         * The start date and time for the events, in UTC format (for example,
         * YYYY-MM-DDTHH:MM:SSZ).
         */
        var startTime: Instant?

        fun build(): DescribeFleetHistoryResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var fleetId: String? = null
        override var historyRecords: List<HistoryRecordEntry>? = null
        override var lastEvaluatedTime: Instant? = null
        override var nextToken: String? = null
        override var startTime: Instant? = null

        constructor(x: DescribeFleetHistoryResponse) : this() {
            this.fleetId = x.fleetId
            this.historyRecords = x.historyRecords
            this.lastEvaluatedTime = x.lastEvaluatedTime
            this.nextToken = x.nextToken
            this.startTime = x.startTime
        }

        override fun build(): DescribeFleetHistoryResponse = DescribeFleetHistoryResponse(this)
        override fun fleetId(fleetId: String): FluentBuilder = apply { this.fleetId = fleetId }
        override fun historyRecords(historyRecords: List<HistoryRecordEntry>): FluentBuilder = apply { this.historyRecords = historyRecords }
        override fun lastEvaluatedTime(lastEvaluatedTime: Instant): FluentBuilder = apply { this.lastEvaluatedTime = lastEvaluatedTime }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
        override fun startTime(startTime: Instant): FluentBuilder = apply { this.startTime = startTime }
    }
}
