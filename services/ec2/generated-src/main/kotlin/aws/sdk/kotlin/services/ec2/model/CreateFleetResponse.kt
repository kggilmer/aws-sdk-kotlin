// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateFleetResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the instances that could not be launched by the fleet. Supported only for
     * fleets of type instant.
     */
    val errors: List<CreateFleetError>? = builder.errors
    /**
     * The ID of the EC2 Fleet.
     */
    val fleetId: String? = builder.fleetId
    /**
     * Information about the instances that were launched by the fleet. Supported only for
     * fleets of type instant.
     */
    val instances: List<CreateFleetInstance>? = builder.instances

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateFleetResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateFleetResponse(")
        append("errors=$errors,")
        append("fleetId=$fleetId,")
        append("instances=$instances)")
    }

    override fun hashCode(): kotlin.Int {
        var result = errors?.hashCode() ?: 0
        result = 31 * result + (fleetId?.hashCode() ?: 0)
        result = 31 * result + (instances?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateFleetResponse

        if (errors != other.errors) return false
        if (fleetId != other.fleetId) return false
        if (instances != other.instances) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateFleetResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateFleetResponse
        /**
         * Information about the instances that could not be launched by the fleet. Supported only for
         * fleets of type instant.
         */
        fun errors(errors: List<CreateFleetError>): FluentBuilder
        /**
         * The ID of the EC2 Fleet.
         */
        fun fleetId(fleetId: String): FluentBuilder
        /**
         * Information about the instances that were launched by the fleet. Supported only for
         * fleets of type instant.
         */
        fun instances(instances: List<CreateFleetInstance>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the instances that could not be launched by the fleet. Supported only for
         * fleets of type instant.
         */
        var errors: List<CreateFleetError>?
        /**
         * The ID of the EC2 Fleet.
         */
        var fleetId: String?
        /**
         * Information about the instances that were launched by the fleet. Supported only for
         * fleets of type instant.
         */
        var instances: List<CreateFleetInstance>?

        fun build(): CreateFleetResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var errors: List<CreateFleetError>? = null
        override var fleetId: String? = null
        override var instances: List<CreateFleetInstance>? = null

        constructor(x: CreateFleetResponse) : this() {
            this.errors = x.errors
            this.fleetId = x.fleetId
            this.instances = x.instances
        }

        override fun build(): CreateFleetResponse = CreateFleetResponse(this)
        override fun errors(errors: List<CreateFleetError>): FluentBuilder = apply { this.errors = errors }
        override fun fleetId(fleetId: String): FluentBuilder = apply { this.fleetId = fleetId }
        override fun instances(instances: List<CreateFleetInstance>): FluentBuilder = apply { this.instances = instances }
    }
}
