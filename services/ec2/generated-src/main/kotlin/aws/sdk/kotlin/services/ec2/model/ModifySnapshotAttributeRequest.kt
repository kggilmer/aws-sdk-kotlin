// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifySnapshotAttributeRequest private constructor(builder: BuilderImpl) {
    /**
     * The snapshot attribute to modify. Only volume creation permissions can be modified.
     */
    val attribute: SnapshotAttributeName? = builder.attribute
    /**
     * A JSON representation of the snapshot attribute modification.
     */
    val createVolumePermission: CreateVolumePermissionModifications? = builder.createVolumePermission
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The group to modify for the snapshot.
     */
    val groupNames: List<String>? = builder.groupNames
    /**
     * The type of operation to perform to the attribute.
     */
    val operationType: OperationType? = builder.operationType
    /**
     * The ID of the snapshot.
     */
    val snapshotId: String? = builder.snapshotId
    /**
     * The account ID to modify for the snapshot.
     */
    val userIds: List<String>? = builder.userIds

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifySnapshotAttributeRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifySnapshotAttributeRequest(")
        append("attribute=$attribute,")
        append("createVolumePermission=$createVolumePermission,")
        append("dryRun=$dryRun,")
        append("groupNames=$groupNames,")
        append("operationType=$operationType,")
        append("snapshotId=$snapshotId,")
        append("userIds=$userIds)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attribute?.hashCode() ?: 0
        result = 31 * result + (createVolumePermission?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (groupNames?.hashCode() ?: 0)
        result = 31 * result + (operationType?.hashCode() ?: 0)
        result = 31 * result + (snapshotId?.hashCode() ?: 0)
        result = 31 * result + (userIds?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifySnapshotAttributeRequest

        if (attribute != other.attribute) return false
        if (createVolumePermission != other.createVolumePermission) return false
        if (dryRun != other.dryRun) return false
        if (groupNames != other.groupNames) return false
        if (operationType != other.operationType) return false
        if (snapshotId != other.snapshotId) return false
        if (userIds != other.userIds) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifySnapshotAttributeRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifySnapshotAttributeRequest
        /**
         * The snapshot attribute to modify. Only volume creation permissions can be modified.
         */
        fun attribute(attribute: SnapshotAttributeName): FluentBuilder
        /**
         * A JSON representation of the snapshot attribute modification.
         */
        fun createVolumePermission(createVolumePermission: CreateVolumePermissionModifications): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The group to modify for the snapshot.
         */
        fun groupNames(groupNames: List<String>): FluentBuilder
        /**
         * The type of operation to perform to the attribute.
         */
        fun operationType(operationType: OperationType): FluentBuilder
        /**
         * The ID of the snapshot.
         */
        fun snapshotId(snapshotId: String): FluentBuilder
        /**
         * The account ID to modify for the snapshot.
         */
        fun userIds(userIds: List<String>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The snapshot attribute to modify. Only volume creation permissions can be modified.
         */
        var attribute: SnapshotAttributeName?
        /**
         * A JSON representation of the snapshot attribute modification.
         */
        var createVolumePermission: CreateVolumePermissionModifications?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The group to modify for the snapshot.
         */
        var groupNames: List<String>?
        /**
         * The type of operation to perform to the attribute.
         */
        var operationType: OperationType?
        /**
         * The ID of the snapshot.
         */
        var snapshotId: String?
        /**
         * The account ID to modify for the snapshot.
         */
        var userIds: List<String>?

        fun build(): ModifySnapshotAttributeRequest
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.CreateVolumePermissionModifications] inside the given [block]
         */
        fun createVolumePermission(block: CreateVolumePermissionModifications.DslBuilder.() -> kotlin.Unit) {
            this.createVolumePermission = CreateVolumePermissionModifications.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var attribute: SnapshotAttributeName? = null
        override var createVolumePermission: CreateVolumePermissionModifications? = null
        override var dryRun: Boolean? = null
        override var groupNames: List<String>? = null
        override var operationType: OperationType? = null
        override var snapshotId: String? = null
        override var userIds: List<String>? = null

        constructor(x: ModifySnapshotAttributeRequest) : this() {
            this.attribute = x.attribute
            this.createVolumePermission = x.createVolumePermission
            this.dryRun = x.dryRun
            this.groupNames = x.groupNames
            this.operationType = x.operationType
            this.snapshotId = x.snapshotId
            this.userIds = x.userIds
        }

        override fun build(): ModifySnapshotAttributeRequest = ModifySnapshotAttributeRequest(this)
        override fun attribute(attribute: SnapshotAttributeName): FluentBuilder = apply { this.attribute = attribute }
        override fun createVolumePermission(createVolumePermission: CreateVolumePermissionModifications): FluentBuilder = apply { this.createVolumePermission = createVolumePermission }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun groupNames(groupNames: List<String>): FluentBuilder = apply { this.groupNames = groupNames }
        override fun operationType(operationType: OperationType): FluentBuilder = apply { this.operationType = operationType }
        override fun snapshotId(snapshotId: String): FluentBuilder = apply { this.snapshotId = snapshotId }
        override fun userIds(userIds: List<String>): FluentBuilder = apply { this.userIds = userIds }
    }
}
