// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes a launch template.
 */
class LaunchTemplate private constructor(builder: BuilderImpl) {
    /**
     * The time launch template was created.
     */
    val createTime: Instant? = builder.createTime
    /**
     * The principal that created the launch template.
     */
    val createdBy: String? = builder.createdBy
    /**
     * The version number of the default version of the launch template.
     */
    val defaultVersionNumber: Long? = builder.defaultVersionNumber
    /**
     * The version number of the latest version of the launch template.
     */
    val latestVersionNumber: Long? = builder.latestVersionNumber
    /**
     * The ID of the launch template.
     */
    val launchTemplateId: String? = builder.launchTemplateId
    /**
     * The name of the launch template.
     */
    val launchTemplateName: String? = builder.launchTemplateName
    /**
     * The tags for the launch template.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LaunchTemplate = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplate(")
        append("createTime=$createTime,")
        append("createdBy=$createdBy,")
        append("defaultVersionNumber=$defaultVersionNumber,")
        append("latestVersionNumber=$latestVersionNumber,")
        append("launchTemplateId=$launchTemplateId,")
        append("launchTemplateName=$launchTemplateName,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = createTime?.hashCode() ?: 0
        result = 31 * result + (createdBy?.hashCode() ?: 0)
        result = 31 * result + (defaultVersionNumber?.hashCode() ?: 0)
        result = 31 * result + (latestVersionNumber?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateId?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateName?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LaunchTemplate

        if (createTime != other.createTime) return false
        if (createdBy != other.createdBy) return false
        if (defaultVersionNumber != other.defaultVersionNumber) return false
        if (latestVersionNumber != other.latestVersionNumber) return false
        if (launchTemplateId != other.launchTemplateId) return false
        if (launchTemplateName != other.launchTemplateName) return false
        if (tags != other.tags) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LaunchTemplate = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LaunchTemplate
        /**
         * The time launch template was created.
         */
        fun createTime(createTime: Instant): FluentBuilder
        /**
         * The principal that created the launch template.
         */
        fun createdBy(createdBy: String): FluentBuilder
        /**
         * The version number of the default version of the launch template.
         */
        fun defaultVersionNumber(defaultVersionNumber: Long): FluentBuilder
        /**
         * The version number of the latest version of the launch template.
         */
        fun latestVersionNumber(latestVersionNumber: Long): FluentBuilder
        /**
         * The ID of the launch template.
         */
        fun launchTemplateId(launchTemplateId: String): FluentBuilder
        /**
         * The name of the launch template.
         */
        fun launchTemplateName(launchTemplateName: String): FluentBuilder
        /**
         * The tags for the launch template.
         */
        fun tags(tags: List<Tag>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The time launch template was created.
         */
        var createTime: Instant?
        /**
         * The principal that created the launch template.
         */
        var createdBy: String?
        /**
         * The version number of the default version of the launch template.
         */
        var defaultVersionNumber: Long?
        /**
         * The version number of the latest version of the launch template.
         */
        var latestVersionNumber: Long?
        /**
         * The ID of the launch template.
         */
        var launchTemplateId: String?
        /**
         * The name of the launch template.
         */
        var launchTemplateName: String?
        /**
         * The tags for the launch template.
         */
        var tags: List<Tag>?

        fun build(): LaunchTemplate
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var createTime: Instant? = null
        override var createdBy: String? = null
        override var defaultVersionNumber: Long? = null
        override var latestVersionNumber: Long? = null
        override var launchTemplateId: String? = null
        override var launchTemplateName: String? = null
        override var tags: List<Tag>? = null

        constructor(x: LaunchTemplate) : this() {
            this.createTime = x.createTime
            this.createdBy = x.createdBy
            this.defaultVersionNumber = x.defaultVersionNumber
            this.latestVersionNumber = x.latestVersionNumber
            this.launchTemplateId = x.launchTemplateId
            this.launchTemplateName = x.launchTemplateName
            this.tags = x.tags
        }

        override fun build(): LaunchTemplate = LaunchTemplate(this)
        override fun createTime(createTime: Instant): FluentBuilder = apply { this.createTime = createTime }
        override fun createdBy(createdBy: String): FluentBuilder = apply { this.createdBy = createdBy }
        override fun defaultVersionNumber(defaultVersionNumber: Long): FluentBuilder = apply { this.defaultVersionNumber = defaultVersionNumber }
        override fun latestVersionNumber(latestVersionNumber: Long): FluentBuilder = apply { this.latestVersionNumber = latestVersionNumber }
        override fun launchTemplateId(launchTemplateId: String): FluentBuilder = apply { this.launchTemplateId = launchTemplateId }
        override fun launchTemplateName(launchTemplateName: String): FluentBuilder = apply { this.launchTemplateName = launchTemplateName }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
    }
}
