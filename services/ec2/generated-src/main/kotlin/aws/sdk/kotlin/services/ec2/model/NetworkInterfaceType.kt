// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class NetworkInterfaceType {

    abstract val value: kotlin.String

    object Efa : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "efa"
        override fun toString(): kotlin.String = value
    }

    object Interface : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "interface"
        override fun toString(): kotlin.String = value
    }

    object NatGateway : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "natGateway"
        override fun toString(): kotlin.String = value
    }

    object Trunk : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "trunk"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType = when(str) {
            "efa" -> Efa
            "interface" -> Interface
            "natGateway" -> NatGateway
            "trunk" -> Trunk
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType> = listOf(
            Efa,
            Interface,
            NatGateway,
            Trunk
        )
    }
}
