// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the Inference accelerators for the instance type.
 */
class InferenceAcceleratorInfo private constructor(builder: BuilderImpl) {
    /**
     * Describes the Inference accelerators for the instance type.
     */
    val accelerators: List<InferenceDeviceInfo>? = builder.accelerators

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InferenceAcceleratorInfo = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InferenceAcceleratorInfo(")
        append("accelerators=$accelerators)")
    }

    override fun hashCode(): kotlin.Int {
        var result = accelerators?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InferenceAcceleratorInfo

        if (accelerators != other.accelerators) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InferenceAcceleratorInfo = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InferenceAcceleratorInfo
        /**
         * Describes the Inference accelerators for the instance type.
         */
        fun accelerators(accelerators: List<InferenceDeviceInfo>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Describes the Inference accelerators for the instance type.
         */
        var accelerators: List<InferenceDeviceInfo>?

        fun build(): InferenceAcceleratorInfo
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var accelerators: List<InferenceDeviceInfo>? = null

        constructor(x: InferenceAcceleratorInfo) : this() {
            this.accelerators = x.accelerators
        }

        override fun build(): InferenceAcceleratorInfo = InferenceAcceleratorInfo(this)
        override fun accelerators(accelerators: List<InferenceDeviceInfo>): FluentBuilder = apply { this.accelerators = accelerators }
    }
}
