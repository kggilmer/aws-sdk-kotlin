// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the output of AttachNetworkInterface.
 */
class AttachNetworkInterfaceResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the network interface attachment.
     */
    val attachmentId: String? = builder.attachmentId
    /**
     * The index of the network card.
     */
    val networkCardIndex: Int? = builder.networkCardIndex

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AttachNetworkInterfaceResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AttachNetworkInterfaceResponse(")
        append("attachmentId=$attachmentId,")
        append("networkCardIndex=$networkCardIndex)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attachmentId?.hashCode() ?: 0
        result = 31 * result + (networkCardIndex ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AttachNetworkInterfaceResponse

        if (attachmentId != other.attachmentId) return false
        if (networkCardIndex != other.networkCardIndex) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AttachNetworkInterfaceResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AttachNetworkInterfaceResponse
        /**
         * The ID of the network interface attachment.
         */
        fun attachmentId(attachmentId: String): FluentBuilder
        /**
         * The index of the network card.
         */
        fun networkCardIndex(networkCardIndex: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the network interface attachment.
         */
        var attachmentId: String?
        /**
         * The index of the network card.
         */
        var networkCardIndex: Int?

        fun build(): AttachNetworkInterfaceResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var attachmentId: String? = null
        override var networkCardIndex: Int? = null

        constructor(x: AttachNetworkInterfaceResponse) : this() {
            this.attachmentId = x.attachmentId
            this.networkCardIndex = x.networkCardIndex
        }

        override fun build(): AttachNetworkInterfaceResponse = AttachNetworkInterfaceResponse(this)
        override fun attachmentId(attachmentId: String): FluentBuilder = apply { this.attachmentId = attachmentId }
        override fun networkCardIndex(networkCardIndex: Int): FluentBuilder = apply { this.networkCardIndex = networkCardIndex }
    }
}
