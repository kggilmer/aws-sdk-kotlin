// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a route table propagation.
 */
class TransitGatewayRouteTablePropagation private constructor(builder: BuilderImpl) {
    /**
     * The ID of the resource.
     */
    val resourceId: String? = builder.resourceId
    /**
     * The type of resource. Note that the tgw-peering resource type has been deprecated.
     */
    val resourceType: TransitGatewayAttachmentResourceType? = builder.resourceType
    /**
     * The state of the resource.
     */
    val state: TransitGatewayPropagationState? = builder.state
    /**
     * The ID of the attachment.
     */
    val transitGatewayAttachmentId: String? = builder.transitGatewayAttachmentId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TransitGatewayRouteTablePropagation = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayRouteTablePropagation(")
        append("resourceId=$resourceId,")
        append("resourceType=$resourceType,")
        append("state=$state,")
        append("transitGatewayAttachmentId=$transitGatewayAttachmentId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = resourceId?.hashCode() ?: 0
        result = 31 * result + (resourceType?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAttachmentId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TransitGatewayRouteTablePropagation

        if (resourceId != other.resourceId) return false
        if (resourceType != other.resourceType) return false
        if (state != other.state) return false
        if (transitGatewayAttachmentId != other.transitGatewayAttachmentId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TransitGatewayRouteTablePropagation = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TransitGatewayRouteTablePropagation
        /**
         * The ID of the resource.
         */
        fun resourceId(resourceId: String): FluentBuilder
        /**
         * The type of resource. Note that the tgw-peering resource type has been deprecated.
         */
        fun resourceType(resourceType: TransitGatewayAttachmentResourceType): FluentBuilder
        /**
         * The state of the resource.
         */
        fun state(state: TransitGatewayPropagationState): FluentBuilder
        /**
         * The ID of the attachment.
         */
        fun transitGatewayAttachmentId(transitGatewayAttachmentId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the resource.
         */
        var resourceId: String?
        /**
         * The type of resource. Note that the tgw-peering resource type has been deprecated.
         */
        var resourceType: TransitGatewayAttachmentResourceType?
        /**
         * The state of the resource.
         */
        var state: TransitGatewayPropagationState?
        /**
         * The ID of the attachment.
         */
        var transitGatewayAttachmentId: String?

        fun build(): TransitGatewayRouteTablePropagation
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var resourceId: String? = null
        override var resourceType: TransitGatewayAttachmentResourceType? = null
        override var state: TransitGatewayPropagationState? = null
        override var transitGatewayAttachmentId: String? = null

        constructor(x: TransitGatewayRouteTablePropagation) : this() {
            this.resourceId = x.resourceId
            this.resourceType = x.resourceType
            this.state = x.state
            this.transitGatewayAttachmentId = x.transitGatewayAttachmentId
        }

        override fun build(): TransitGatewayRouteTablePropagation = TransitGatewayRouteTablePropagation(this)
        override fun resourceId(resourceId: String): FluentBuilder = apply { this.resourceId = resourceId }
        override fun resourceType(resourceType: TransitGatewayAttachmentResourceType): FluentBuilder = apply { this.resourceType = resourceType }
        override fun state(state: TransitGatewayPropagationState): FluentBuilder = apply { this.state = state }
        override fun transitGatewayAttachmentId(transitGatewayAttachmentId: String): FluentBuilder = apply { this.transitGatewayAttachmentId = transitGatewayAttachmentId }
    }
}
