// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CopySnapshotRequest private constructor(builder: BuilderImpl) {
    /**
     * A description for the EBS snapshot.
     */
    val description: String? = builder.description
    /**
     * The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only
     * specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost.
     * The snapshot must be in the Region for the destination Outpost. You cannot copy a
     * snapshot from an Outpost to a Region, from one Outpost to another, or within the same
     * Outpost.
     * For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-snapshots">
     * Copy snapshots from an Amazon Web Services Region to an Outpost in the
     * Amazon Elastic Compute Cloud User Guide.
     */
    val destinationOutpostArn: String? = builder.destinationOutpostArn
    /**
     * The destination Region to use in the PresignedUrl parameter of a snapshot
     * copy operation. This parameter is only valid for specifying the destination Region in a
     * PresignedUrl parameter, where it is required.
     * The snapshot copy is sent to the regional endpoint that you sent the HTTP
     * request to (for example, ec2.us-east-1.amazonaws.com). With the CLI, this is
     * specified using the --region parameter or the default Region in your Amazon Web Services
     * configuration file.
     */
    val destinationRegion: String? = builder.destinationRegion
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled,
     * enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots
     * are encrypted, even if you omit this parameter and encryption by default is not enabled. You
     * cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption in the
     * Amazon Elastic Compute Cloud User Guide.
     */
    val encrypted: Boolean? = builder.encrypted
    /**
     * The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption.
     * If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is
     * specified, the encrypted state must be true.
     * You can specify the KMS key using any of the following:
     * Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.
     * Key alias. For example, alias/ExampleAlias.
     * Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
     * Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
     * Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid,
     * the action can appear to complete, but eventually fails.
     */
    val kmsKeyId: String? = builder.kmsKeyId
    /**
     * When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a
     * pre-signed URL. This parameter is optional for unencrypted snapshots. For more information,
     * see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html">Query
     * requests.
     * The PresignedUrl should use the snapshot source endpoint, the
     * CopySnapshot action, and include the SourceRegion,
     * SourceSnapshotId, and DestinationRegion parameters. The
     * PresignedUrl must be signed using Amazon Web Services Signature Version 4. Because EBS
     * snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic
     * that is described in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query
     * Parameters (Amazon Web Services Signature Version 4) in the Amazon Simple Storage Service API Reference. An
     * invalid or improperly signed PresignedUrl will cause the copy operation to fail
     * asynchronously, and the snapshot will move to an error state.
     */
    val presignedUrl: String? = builder.presignedUrl
    /**
     * The ID of the Region that contains the snapshot to be copied.
     */
    val sourceRegion: String? = builder.sourceRegion
    /**
     * The ID of the EBS snapshot to copy.
     */
    val sourceSnapshotId: String? = builder.sourceSnapshotId
    /**
     * The tags to apply to the new snapshot.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CopySnapshotRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CopySnapshotRequest(")
        append("description=$description,")
        append("destinationOutpostArn=$destinationOutpostArn,")
        append("destinationRegion=$destinationRegion,")
        append("dryRun=$dryRun,")
        append("encrypted=$encrypted,")
        append("kmsKeyId=$kmsKeyId,")
        append("presignedUrl=$presignedUrl,")
        append("sourceRegion=$sourceRegion,")
        append("sourceSnapshotId=$sourceSnapshotId,")
        append("tagSpecifications=$tagSpecifications)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (destinationOutpostArn?.hashCode() ?: 0)
        result = 31 * result + (destinationRegion?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (encrypted?.hashCode() ?: 0)
        result = 31 * result + (kmsKeyId?.hashCode() ?: 0)
        result = 31 * result + (presignedUrl?.hashCode() ?: 0)
        result = 31 * result + (sourceRegion?.hashCode() ?: 0)
        result = 31 * result + (sourceSnapshotId?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CopySnapshotRequest

        if (description != other.description) return false
        if (destinationOutpostArn != other.destinationOutpostArn) return false
        if (destinationRegion != other.destinationRegion) return false
        if (dryRun != other.dryRun) return false
        if (encrypted != other.encrypted) return false
        if (kmsKeyId != other.kmsKeyId) return false
        if (presignedUrl != other.presignedUrl) return false
        if (sourceRegion != other.sourceRegion) return false
        if (sourceSnapshotId != other.sourceSnapshotId) return false
        if (tagSpecifications != other.tagSpecifications) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CopySnapshotRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CopySnapshotRequest
        /**
         * A description for the EBS snapshot.
         */
        fun description(description: String): FluentBuilder
        /**
         * The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only
         * specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost.
         * The snapshot must be in the Region for the destination Outpost. You cannot copy a
         * snapshot from an Outpost to a Region, from one Outpost to another, or within the same
         * Outpost.
         * For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-snapshots">
         * Copy snapshots from an Amazon Web Services Region to an Outpost in the
         * Amazon Elastic Compute Cloud User Guide.
         */
        fun destinationOutpostArn(destinationOutpostArn: String): FluentBuilder
        /**
         * The destination Region to use in the PresignedUrl parameter of a snapshot
         * copy operation. This parameter is only valid for specifying the destination Region in a
         * PresignedUrl parameter, where it is required.
         * The snapshot copy is sent to the regional endpoint that you sent the HTTP
         * request to (for example, ec2.us-east-1.amazonaws.com). With the CLI, this is
         * specified using the --region parameter or the default Region in your Amazon Web Services
         * configuration file.
         */
        fun destinationRegion(destinationRegion: String): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled,
         * enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots
         * are encrypted, even if you omit this parameter and encryption by default is not enabled. You
         * cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption in the
         * Amazon Elastic Compute Cloud User Guide.
         */
        fun encrypted(encrypted: Boolean): FluentBuilder
        /**
         * The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption.
         * If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is
         * specified, the encrypted state must be true.
         * You can specify the KMS key using any of the following:
         * Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.
         * Key alias. For example, alias/ExampleAlias.
         * Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
         * Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
         * Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid,
         * the action can appear to complete, but eventually fails.
         */
        fun kmsKeyId(kmsKeyId: String): FluentBuilder
        /**
         * When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a
         * pre-signed URL. This parameter is optional for unencrypted snapshots. For more information,
         * see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html">Query
         * requests.
         * The PresignedUrl should use the snapshot source endpoint, the
         * CopySnapshot action, and include the SourceRegion,
         * SourceSnapshotId, and DestinationRegion parameters. The
         * PresignedUrl must be signed using Amazon Web Services Signature Version 4. Because EBS
         * snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic
         * that is described in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query
         * Parameters (Amazon Web Services Signature Version 4) in the Amazon Simple Storage Service API Reference. An
         * invalid or improperly signed PresignedUrl will cause the copy operation to fail
         * asynchronously, and the snapshot will move to an error state.
         */
        fun presignedUrl(presignedUrl: String): FluentBuilder
        /**
         * The ID of the Region that contains the snapshot to be copied.
         */
        fun sourceRegion(sourceRegion: String): FluentBuilder
        /**
         * The ID of the EBS snapshot to copy.
         */
        fun sourceSnapshotId(sourceSnapshotId: String): FluentBuilder
        /**
         * The tags to apply to the new snapshot.
         */
        fun tagSpecifications(tagSpecifications: List<TagSpecification>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A description for the EBS snapshot.
         */
        var description: String?
        /**
         * The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only
         * specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost.
         * The snapshot must be in the Region for the destination Outpost. You cannot copy a
         * snapshot from an Outpost to a Region, from one Outpost to another, or within the same
         * Outpost.
         * For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-snapshots">
         * Copy snapshots from an Amazon Web Services Region to an Outpost in the
         * Amazon Elastic Compute Cloud User Guide.
         */
        var destinationOutpostArn: String?
        /**
         * The destination Region to use in the PresignedUrl parameter of a snapshot
         * copy operation. This parameter is only valid for specifying the destination Region in a
         * PresignedUrl parameter, where it is required.
         * The snapshot copy is sent to the regional endpoint that you sent the HTTP
         * request to (for example, ec2.us-east-1.amazonaws.com). With the CLI, this is
         * specified using the --region parameter or the default Region in your Amazon Web Services
         * configuration file.
         */
        var destinationRegion: String?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled,
         * enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots
         * are encrypted, even if you omit this parameter and encryption by default is not enabled. You
         * cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption in the
         * Amazon Elastic Compute Cloud User Guide.
         */
        var encrypted: Boolean?
        /**
         * The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption.
         * If this parameter is not specified, your KMS key for Amazon EBS is used. If KmsKeyId is
         * specified, the encrypted state must be true.
         * You can specify the KMS key using any of the following:
         * Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.
         * Key alias. For example, alias/ExampleAlias.
         * Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.
         * Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
         * Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid,
         * the action can appear to complete, but eventually fails.
         */
        var kmsKeyId: String?
        /**
         * When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a
         * pre-signed URL. This parameter is optional for unencrypted snapshots. For more information,
         * see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html">Query
         * requests.
         * The PresignedUrl should use the snapshot source endpoint, the
         * CopySnapshot action, and include the SourceRegion,
         * SourceSnapshotId, and DestinationRegion parameters. The
         * PresignedUrl must be signed using Amazon Web Services Signature Version 4. Because EBS
         * snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic
         * that is described in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query
         * Parameters (Amazon Web Services Signature Version 4) in the Amazon Simple Storage Service API Reference. An
         * invalid or improperly signed PresignedUrl will cause the copy operation to fail
         * asynchronously, and the snapshot will move to an error state.
         */
        var presignedUrl: String?
        /**
         * The ID of the Region that contains the snapshot to be copied.
         */
        var sourceRegion: String?
        /**
         * The ID of the EBS snapshot to copy.
         */
        var sourceSnapshotId: String?
        /**
         * The tags to apply to the new snapshot.
         */
        var tagSpecifications: List<TagSpecification>?

        fun build(): CopySnapshotRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var description: String? = null
        override var destinationOutpostArn: String? = null
        override var destinationRegion: String? = null
        override var dryRun: Boolean? = null
        override var encrypted: Boolean? = null
        override var kmsKeyId: String? = null
        override var presignedUrl: String? = null
        override var sourceRegion: String? = null
        override var sourceSnapshotId: String? = null
        override var tagSpecifications: List<TagSpecification>? = null

        constructor(x: CopySnapshotRequest) : this() {
            this.description = x.description
            this.destinationOutpostArn = x.destinationOutpostArn
            this.destinationRegion = x.destinationRegion
            this.dryRun = x.dryRun
            this.encrypted = x.encrypted
            this.kmsKeyId = x.kmsKeyId
            this.presignedUrl = x.presignedUrl
            this.sourceRegion = x.sourceRegion
            this.sourceSnapshotId = x.sourceSnapshotId
            this.tagSpecifications = x.tagSpecifications
        }

        override fun build(): CopySnapshotRequest = CopySnapshotRequest(this)
        override fun description(description: String): FluentBuilder = apply { this.description = description }
        override fun destinationOutpostArn(destinationOutpostArn: String): FluentBuilder = apply { this.destinationOutpostArn = destinationOutpostArn }
        override fun destinationRegion(destinationRegion: String): FluentBuilder = apply { this.destinationRegion = destinationRegion }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun encrypted(encrypted: Boolean): FluentBuilder = apply { this.encrypted = encrypted }
        override fun kmsKeyId(kmsKeyId: String): FluentBuilder = apply { this.kmsKeyId = kmsKeyId }
        override fun presignedUrl(presignedUrl: String): FluentBuilder = apply { this.presignedUrl = presignedUrl }
        override fun sourceRegion(sourceRegion: String): FluentBuilder = apply { this.sourceRegion = sourceRegion }
        override fun sourceSnapshotId(sourceSnapshotId: String): FluentBuilder = apply { this.sourceSnapshotId = sourceSnapshotId }
        override fun tagSpecifications(tagSpecifications: List<TagSpecification>): FluentBuilder = apply { this.tagSpecifications = tagSpecifications }
    }
}
