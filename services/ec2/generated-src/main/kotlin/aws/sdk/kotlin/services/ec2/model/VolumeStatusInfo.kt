// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the status of a volume.
 */
class VolumeStatusInfo private constructor(builder: BuilderImpl) {
    /**
     * The details of the volume status.
     */
    val details: List<VolumeStatusDetails>? = builder.details
    /**
     * The status of the volume.
     */
    val status: VolumeStatusInfoStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): VolumeStatusInfo = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("VolumeStatusInfo(")
        append("details=$details,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = details?.hashCode() ?: 0
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as VolumeStatusInfo

        if (details != other.details) return false
        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): VolumeStatusInfo = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): VolumeStatusInfo
        /**
         * The details of the volume status.
         */
        fun details(details: List<VolumeStatusDetails>): FluentBuilder
        /**
         * The status of the volume.
         */
        fun status(status: VolumeStatusInfoStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The details of the volume status.
         */
        var details: List<VolumeStatusDetails>?
        /**
         * The status of the volume.
         */
        var status: VolumeStatusInfoStatus?

        fun build(): VolumeStatusInfo
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var details: List<VolumeStatusDetails>? = null
        override var status: VolumeStatusInfoStatus? = null

        constructor(x: VolumeStatusInfo) : this() {
            this.details = x.details
            this.status = x.status
        }

        override fun build(): VolumeStatusInfo = VolumeStatusInfo(this)
        override fun details(details: List<VolumeStatusDetails>): FluentBuilder = apply { this.details = details }
        override fun status(status: VolumeStatusInfoStatus): FluentBuilder = apply { this.status = status }
    }
}
