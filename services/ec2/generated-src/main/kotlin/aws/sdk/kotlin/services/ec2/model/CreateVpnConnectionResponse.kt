// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the output of CreateVpnConnection.
 */
class CreateVpnConnectionResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the VPN connection.
     */
    val vpnConnection: VpnConnection? = builder.vpnConnection

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateVpnConnectionResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateVpnConnectionResponse(")
        append("vpnConnection=$vpnConnection)")
    }

    override fun hashCode(): kotlin.Int {
        var result = vpnConnection?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateVpnConnectionResponse

        if (vpnConnection != other.vpnConnection) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateVpnConnectionResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateVpnConnectionResponse
        /**
         * Information about the VPN connection.
         */
        fun vpnConnection(vpnConnection: VpnConnection): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the VPN connection.
         */
        var vpnConnection: VpnConnection?

        fun build(): CreateVpnConnectionResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.VpnConnection] inside the given [block]
         */
        fun vpnConnection(block: VpnConnection.DslBuilder.() -> kotlin.Unit) {
            this.vpnConnection = VpnConnection.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var vpnConnection: VpnConnection? = null

        constructor(x: CreateVpnConnectionResponse) : this() {
            this.vpnConnection = x.vpnConnection
        }

        override fun build(): CreateVpnConnectionResponse = CreateVpnConnectionResponse(this)
        override fun vpnConnection(vpnConnection: VpnConnection): FluentBuilder = apply { this.vpnConnection = vpnConnection }
    }
}
