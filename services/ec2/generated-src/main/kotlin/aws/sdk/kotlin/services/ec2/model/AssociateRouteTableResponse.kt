// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class AssociateRouteTableResponse private constructor(builder: BuilderImpl) {
    /**
     * The route table association ID. This ID is required for disassociating the route
     * table.
     */
    val associationId: String? = builder.associationId
    /**
     * The state of the association.
     */
    val associationState: RouteTableAssociationState? = builder.associationState

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AssociateRouteTableResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AssociateRouteTableResponse(")
        append("associationId=$associationId,")
        append("associationState=$associationState)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associationId?.hashCode() ?: 0
        result = 31 * result + (associationState?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AssociateRouteTableResponse

        if (associationId != other.associationId) return false
        if (associationState != other.associationState) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AssociateRouteTableResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AssociateRouteTableResponse
        /**
         * The route table association ID. This ID is required for disassociating the route
         * table.
         */
        fun associationId(associationId: String): FluentBuilder
        /**
         * The state of the association.
         */
        fun associationState(associationState: RouteTableAssociationState): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The route table association ID. This ID is required for disassociating the route
         * table.
         */
        var associationId: String?
        /**
         * The state of the association.
         */
        var associationState: RouteTableAssociationState?

        fun build(): AssociateRouteTableResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.RouteTableAssociationState] inside the given [block]
         */
        fun associationState(block: RouteTableAssociationState.DslBuilder.() -> kotlin.Unit) {
            this.associationState = RouteTableAssociationState.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var associationId: String? = null
        override var associationState: RouteTableAssociationState? = null

        constructor(x: AssociateRouteTableResponse) : this() {
            this.associationId = x.associationId
            this.associationState = x.associationState
        }

        override fun build(): AssociateRouteTableResponse = AssociateRouteTableResponse(this)
        override fun associationId(associationId: String): FluentBuilder = apply { this.associationId = associationId }
        override fun associationState(associationState: RouteTableAssociationState): FluentBuilder = apply { this.associationState = associationState }
    }
}
