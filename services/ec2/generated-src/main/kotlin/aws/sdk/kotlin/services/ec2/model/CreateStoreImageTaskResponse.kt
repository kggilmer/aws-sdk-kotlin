// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateStoreImageTaskResponse private constructor(builder: BuilderImpl) {
    /**
     * The name of the stored AMI object in the S3 bucket.
     */
    val objectKey: String? = builder.objectKey

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateStoreImageTaskResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateStoreImageTaskResponse(")
        append("objectKey=$objectKey)")
    }

    override fun hashCode(): kotlin.Int {
        var result = objectKey?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateStoreImageTaskResponse

        if (objectKey != other.objectKey) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateStoreImageTaskResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateStoreImageTaskResponse
        /**
         * The name of the stored AMI object in the S3 bucket.
         */
        fun objectKey(objectKey: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the stored AMI object in the S3 bucket.
         */
        var objectKey: String?

        fun build(): CreateStoreImageTaskResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var objectKey: String? = null

        constructor(x: CreateStoreImageTaskResponse) : this() {
            this.objectKey = x.objectKey
        }

        override fun build(): CreateStoreImageTaskResponse = CreateStoreImageTaskResponse(this)
        override fun objectKey(objectKey: String): FluentBuilder = apply { this.objectKey = objectKey }
    }
}
