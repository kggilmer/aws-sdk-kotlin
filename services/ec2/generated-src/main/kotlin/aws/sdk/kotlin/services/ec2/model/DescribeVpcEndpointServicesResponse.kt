// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the output of DescribeVpcEndpointServices.
 */
class DescribeVpcEndpointServicesResponse private constructor(builder: BuilderImpl) {
    /**
     * The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
     */
    val nextToken: String? = builder.nextToken
    /**
     * Information about the service.
     */
    val serviceDetails: List<ServiceDetail>? = builder.serviceDetails
    /**
     * A list of supported services.
     */
    val serviceNames: List<String>? = builder.serviceNames

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeVpcEndpointServicesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeVpcEndpointServicesResponse(")
        append("nextToken=$nextToken,")
        append("serviceDetails=$serviceDetails,")
        append("serviceNames=$serviceNames)")
    }

    override fun hashCode(): kotlin.Int {
        var result = nextToken?.hashCode() ?: 0
        result = 31 * result + (serviceDetails?.hashCode() ?: 0)
        result = 31 * result + (serviceNames?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeVpcEndpointServicesResponse

        if (nextToken != other.nextToken) return false
        if (serviceDetails != other.serviceDetails) return false
        if (serviceNames != other.serviceNames) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeVpcEndpointServicesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeVpcEndpointServicesResponse
        /**
         * The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
         */
        fun nextToken(nextToken: String): FluentBuilder
        /**
         * Information about the service.
         */
        fun serviceDetails(serviceDetails: List<ServiceDetail>): FluentBuilder
        /**
         * A list of supported services.
         */
        fun serviceNames(serviceNames: List<String>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
         */
        var nextToken: String?
        /**
         * Information about the service.
         */
        var serviceDetails: List<ServiceDetail>?
        /**
         * A list of supported services.
         */
        var serviceNames: List<String>?

        fun build(): DescribeVpcEndpointServicesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var nextToken: String? = null
        override var serviceDetails: List<ServiceDetail>? = null
        override var serviceNames: List<String>? = null

        constructor(x: DescribeVpcEndpointServicesResponse) : this() {
            this.nextToken = x.nextToken
            this.serviceDetails = x.serviceDetails
            this.serviceNames = x.serviceNames
        }

        override fun build(): DescribeVpcEndpointServicesResponse = DescribeVpcEndpointServicesResponse(this)
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
        override fun serviceDetails(serviceDetails: List<ServiceDetail>): FluentBuilder = apply { this.serviceDetails = serviceDetails }
        override fun serviceNames(serviceNames: List<String>): FluentBuilder = apply { this.serviceNames = serviceNames }
    }
}
