// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a CIDR block for an address pool.
 */
class PoolCidrBlock private constructor(builder: BuilderImpl) {
    /**
     * The CIDR block.
     */
    val cidr: String? = builder.cidr

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PoolCidrBlock = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PoolCidrBlock(")
        append("cidr=$cidr)")
    }

    override fun hashCode(): kotlin.Int {
        var result = cidr?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PoolCidrBlock

        if (cidr != other.cidr) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PoolCidrBlock = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PoolCidrBlock
        /**
         * The CIDR block.
         */
        fun cidr(cidr: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The CIDR block.
         */
        var cidr: String?

        fun build(): PoolCidrBlock
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var cidr: String? = null

        constructor(x: PoolCidrBlock) : this() {
            this.cidr = x.cidr
        }

        override fun build(): PoolCidrBlock = PoolCidrBlock(this)
        override fun cidr(cidr: String): FluentBuilder = apply { this.cidr = cidr }
    }
}
