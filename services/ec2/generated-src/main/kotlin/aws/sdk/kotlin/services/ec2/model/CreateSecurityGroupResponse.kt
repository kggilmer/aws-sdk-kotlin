// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateSecurityGroupResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the security group.
     */
    val groupId: String? = builder.groupId
    /**
     * The tags assigned to the security group.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateSecurityGroupResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateSecurityGroupResponse(")
        append("groupId=$groupId,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = groupId?.hashCode() ?: 0
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateSecurityGroupResponse

        if (groupId != other.groupId) return false
        if (tags != other.tags) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateSecurityGroupResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateSecurityGroupResponse
        /**
         * The ID of the security group.
         */
        fun groupId(groupId: String): FluentBuilder
        /**
         * The tags assigned to the security group.
         */
        fun tags(tags: List<Tag>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the security group.
         */
        var groupId: String?
        /**
         * The tags assigned to the security group.
         */
        var tags: List<Tag>?

        fun build(): CreateSecurityGroupResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var groupId: String? = null
        override var tags: List<Tag>? = null

        constructor(x: CreateSecurityGroupResponse) : this() {
            this.groupId = x.groupId
            this.tags = x.tags
        }

        override fun build(): CreateSecurityGroupResponse = CreateSecurityGroupResponse(this)
        override fun groupId(groupId: String): FluentBuilder = apply { this.groupId = groupId }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
    }
}
