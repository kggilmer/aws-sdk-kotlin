// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyVpcEndpointServiceConfigurationRequest private constructor(builder: BuilderImpl) {
    /**
     * Indicates whether requests to create an endpoint to your service must be accepted.
     */
    val acceptanceRequired: Boolean? = builder.acceptanceRequired
    /**
     * The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service
     * configuration.
     */
    val addGatewayLoadBalancerArns: List<String>? = builder.addGatewayLoadBalancerArns
    /**
     * The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service
     * configuration.
     */
    val addNetworkLoadBalancerArns: List<String>? = builder.addNetworkLoadBalancerArns
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * (Interface endpoint configuration) The private DNS name to assign to the endpoint service.
     */
    val privateDnsName: String? = builder.privateDnsName
    /**
     * The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service
     * configuration.
     */
    val removeGatewayLoadBalancerArns: List<String>? = builder.removeGatewayLoadBalancerArns
    /**
     * The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service
     * configuration.
     */
    val removeNetworkLoadBalancerArns: List<String>? = builder.removeNetworkLoadBalancerArns
    /**
     * (Interface endpoint configuration) Removes the private DNS name of the endpoint service.
     */
    val removePrivateDnsName: Boolean? = builder.removePrivateDnsName
    /**
     * The ID of the service.
     */
    val serviceId: String? = builder.serviceId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyVpcEndpointServiceConfigurationRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyVpcEndpointServiceConfigurationRequest(")
        append("acceptanceRequired=$acceptanceRequired,")
        append("addGatewayLoadBalancerArns=$addGatewayLoadBalancerArns,")
        append("addNetworkLoadBalancerArns=$addNetworkLoadBalancerArns,")
        append("dryRun=$dryRun,")
        append("privateDnsName=$privateDnsName,")
        append("removeGatewayLoadBalancerArns=$removeGatewayLoadBalancerArns,")
        append("removeNetworkLoadBalancerArns=$removeNetworkLoadBalancerArns,")
        append("removePrivateDnsName=$removePrivateDnsName,")
        append("serviceId=$serviceId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = acceptanceRequired?.hashCode() ?: 0
        result = 31 * result + (addGatewayLoadBalancerArns?.hashCode() ?: 0)
        result = 31 * result + (addNetworkLoadBalancerArns?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (privateDnsName?.hashCode() ?: 0)
        result = 31 * result + (removeGatewayLoadBalancerArns?.hashCode() ?: 0)
        result = 31 * result + (removeNetworkLoadBalancerArns?.hashCode() ?: 0)
        result = 31 * result + (removePrivateDnsName?.hashCode() ?: 0)
        result = 31 * result + (serviceId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyVpcEndpointServiceConfigurationRequest

        if (acceptanceRequired != other.acceptanceRequired) return false
        if (addGatewayLoadBalancerArns != other.addGatewayLoadBalancerArns) return false
        if (addNetworkLoadBalancerArns != other.addNetworkLoadBalancerArns) return false
        if (dryRun != other.dryRun) return false
        if (privateDnsName != other.privateDnsName) return false
        if (removeGatewayLoadBalancerArns != other.removeGatewayLoadBalancerArns) return false
        if (removeNetworkLoadBalancerArns != other.removeNetworkLoadBalancerArns) return false
        if (removePrivateDnsName != other.removePrivateDnsName) return false
        if (serviceId != other.serviceId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyVpcEndpointServiceConfigurationRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyVpcEndpointServiceConfigurationRequest
        /**
         * Indicates whether requests to create an endpoint to your service must be accepted.
         */
        fun acceptanceRequired(acceptanceRequired: Boolean): FluentBuilder
        /**
         * The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service
         * configuration.
         */
        fun addGatewayLoadBalancerArns(addGatewayLoadBalancerArns: List<String>): FluentBuilder
        /**
         * The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service
         * configuration.
         */
        fun addNetworkLoadBalancerArns(addNetworkLoadBalancerArns: List<String>): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * (Interface endpoint configuration) The private DNS name to assign to the endpoint service.
         */
        fun privateDnsName(privateDnsName: String): FluentBuilder
        /**
         * The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service
         * configuration.
         */
        fun removeGatewayLoadBalancerArns(removeGatewayLoadBalancerArns: List<String>): FluentBuilder
        /**
         * The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service
         * configuration.
         */
        fun removeNetworkLoadBalancerArns(removeNetworkLoadBalancerArns: List<String>): FluentBuilder
        /**
         * (Interface endpoint configuration) Removes the private DNS name of the endpoint service.
         */
        fun removePrivateDnsName(removePrivateDnsName: Boolean): FluentBuilder
        /**
         * The ID of the service.
         */
        fun serviceId(serviceId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates whether requests to create an endpoint to your service must be accepted.
         */
        var acceptanceRequired: Boolean?
        /**
         * The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service
         * configuration.
         */
        var addGatewayLoadBalancerArns: List<String>?
        /**
         * The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service
         * configuration.
         */
        var addNetworkLoadBalancerArns: List<String>?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * (Interface endpoint configuration) The private DNS name to assign to the endpoint service.
         */
        var privateDnsName: String?
        /**
         * The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service
         * configuration.
         */
        var removeGatewayLoadBalancerArns: List<String>?
        /**
         * The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service
         * configuration.
         */
        var removeNetworkLoadBalancerArns: List<String>?
        /**
         * (Interface endpoint configuration) Removes the private DNS name of the endpoint service.
         */
        var removePrivateDnsName: Boolean?
        /**
         * The ID of the service.
         */
        var serviceId: String?

        fun build(): ModifyVpcEndpointServiceConfigurationRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var acceptanceRequired: Boolean? = null
        override var addGatewayLoadBalancerArns: List<String>? = null
        override var addNetworkLoadBalancerArns: List<String>? = null
        override var dryRun: Boolean? = null
        override var privateDnsName: String? = null
        override var removeGatewayLoadBalancerArns: List<String>? = null
        override var removeNetworkLoadBalancerArns: List<String>? = null
        override var removePrivateDnsName: Boolean? = null
        override var serviceId: String? = null

        constructor(x: ModifyVpcEndpointServiceConfigurationRequest) : this() {
            this.acceptanceRequired = x.acceptanceRequired
            this.addGatewayLoadBalancerArns = x.addGatewayLoadBalancerArns
            this.addNetworkLoadBalancerArns = x.addNetworkLoadBalancerArns
            this.dryRun = x.dryRun
            this.privateDnsName = x.privateDnsName
            this.removeGatewayLoadBalancerArns = x.removeGatewayLoadBalancerArns
            this.removeNetworkLoadBalancerArns = x.removeNetworkLoadBalancerArns
            this.removePrivateDnsName = x.removePrivateDnsName
            this.serviceId = x.serviceId
        }

        override fun build(): ModifyVpcEndpointServiceConfigurationRequest = ModifyVpcEndpointServiceConfigurationRequest(this)
        override fun acceptanceRequired(acceptanceRequired: Boolean): FluentBuilder = apply { this.acceptanceRequired = acceptanceRequired }
        override fun addGatewayLoadBalancerArns(addGatewayLoadBalancerArns: List<String>): FluentBuilder = apply { this.addGatewayLoadBalancerArns = addGatewayLoadBalancerArns }
        override fun addNetworkLoadBalancerArns(addNetworkLoadBalancerArns: List<String>): FluentBuilder = apply { this.addNetworkLoadBalancerArns = addNetworkLoadBalancerArns }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun privateDnsName(privateDnsName: String): FluentBuilder = apply { this.privateDnsName = privateDnsName }
        override fun removeGatewayLoadBalancerArns(removeGatewayLoadBalancerArns: List<String>): FluentBuilder = apply { this.removeGatewayLoadBalancerArns = removeGatewayLoadBalancerArns }
        override fun removeNetworkLoadBalancerArns(removeNetworkLoadBalancerArns: List<String>): FluentBuilder = apply { this.removeNetworkLoadBalancerArns = removeNetworkLoadBalancerArns }
        override fun removePrivateDnsName(removePrivateDnsName: Boolean): FluentBuilder = apply { this.removePrivateDnsName = removePrivateDnsName }
        override fun serviceId(serviceId: String): FluentBuilder = apply { this.serviceId = serviceId }
    }
}
