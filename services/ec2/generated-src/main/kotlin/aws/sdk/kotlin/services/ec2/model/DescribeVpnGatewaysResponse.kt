// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the output of DescribeVpnGateways.
 */
class DescribeVpnGatewaysResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about one or more virtual private gateways.
     */
    val vpnGateways: List<VpnGateway>? = builder.vpnGateways

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeVpnGatewaysResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeVpnGatewaysResponse(")
        append("vpnGateways=$vpnGateways)")
    }

    override fun hashCode(): kotlin.Int {
        var result = vpnGateways?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeVpnGatewaysResponse

        if (vpnGateways != other.vpnGateways) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeVpnGatewaysResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeVpnGatewaysResponse
        /**
         * Information about one or more virtual private gateways.
         */
        fun vpnGateways(vpnGateways: List<VpnGateway>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about one or more virtual private gateways.
         */
        var vpnGateways: List<VpnGateway>?

        fun build(): DescribeVpnGatewaysResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var vpnGateways: List<VpnGateway>? = null

        constructor(x: DescribeVpnGatewaysResponse) : this() {
            this.vpnGateways = x.vpnGateways
        }

        override fun build(): DescribeVpnGatewaysResponse = DescribeVpnGatewaysResponse(this)
        override fun vpnGateways(vpnGateways: List<VpnGateway>): FluentBuilder = apply { this.vpnGateways = vpnGateways }
    }
}
