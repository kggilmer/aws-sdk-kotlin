// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteNetworkInsightsAnalysisResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the network insights analysis.
     */
    val networkInsightsAnalysisId: String? = builder.networkInsightsAnalysisId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteNetworkInsightsAnalysisResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteNetworkInsightsAnalysisResponse(")
        append("networkInsightsAnalysisId=$networkInsightsAnalysisId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = networkInsightsAnalysisId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteNetworkInsightsAnalysisResponse

        if (networkInsightsAnalysisId != other.networkInsightsAnalysisId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteNetworkInsightsAnalysisResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteNetworkInsightsAnalysisResponse
        /**
         * The ID of the network insights analysis.
         */
        fun networkInsightsAnalysisId(networkInsightsAnalysisId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the network insights analysis.
         */
        var networkInsightsAnalysisId: String?

        fun build(): DeleteNetworkInsightsAnalysisResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var networkInsightsAnalysisId: String? = null

        constructor(x: DeleteNetworkInsightsAnalysisResponse) : this() {
            this.networkInsightsAnalysisId = x.networkInsightsAnalysisId
        }

        override fun build(): DeleteNetworkInsightsAnalysisResponse = DeleteNetworkInsightsAnalysisResponse(this)
        override fun networkInsightsAnalysisId(networkInsightsAnalysisId: String): FluentBuilder = apply { this.networkInsightsAnalysisId = networkInsightsAnalysisId }
    }
}
