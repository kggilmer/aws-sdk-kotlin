// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
class AttributeBooleanValue private constructor(builder: BuilderImpl) {
    /**
     * The attribute value. The valid values are true or false.
     */
    val value: Boolean? = builder.value

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AttributeBooleanValue = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AttributeBooleanValue(")
        append("value=$value)")
    }

    override fun hashCode(): kotlin.Int {
        var result = value?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AttributeBooleanValue

        if (value != other.value) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AttributeBooleanValue = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AttributeBooleanValue
        /**
         * The attribute value. The valid values are true or false.
         */
        fun value(value: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The attribute value. The valid values are true or false.
         */
        var value: Boolean?

        fun build(): AttributeBooleanValue
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var value: Boolean? = null

        constructor(x: AttributeBooleanValue) : this() {
            this.value = x.value
        }

        override fun build(): AttributeBooleanValue = AttributeBooleanValue(this)
        override fun value(value: Boolean): FluentBuilder = apply { this.value = value }
    }
}
