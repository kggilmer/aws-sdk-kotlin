// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a security group.
 */
class SecurityGroupIdentifier private constructor(builder: BuilderImpl) {
    /**
     * The ID of the security group.
     */
    val groupId: String? = builder.groupId
    /**
     * The name of the security group.
     */
    val groupName: String? = builder.groupName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): SecurityGroupIdentifier = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("SecurityGroupIdentifier(")
        append("groupId=$groupId,")
        append("groupName=$groupName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = groupId?.hashCode() ?: 0
        result = 31 * result + (groupName?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as SecurityGroupIdentifier

        if (groupId != other.groupId) return false
        if (groupName != other.groupName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): SecurityGroupIdentifier = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): SecurityGroupIdentifier
        /**
         * The ID of the security group.
         */
        fun groupId(groupId: String): FluentBuilder
        /**
         * The name of the security group.
         */
        fun groupName(groupName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the security group.
         */
        var groupId: String?
        /**
         * The name of the security group.
         */
        var groupName: String?

        fun build(): SecurityGroupIdentifier
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var groupId: String? = null
        override var groupName: String? = null

        constructor(x: SecurityGroupIdentifier) : this() {
            this.groupId = x.groupId
            this.groupName = x.groupName
        }

        override fun build(): SecurityGroupIdentifier = SecurityGroupIdentifier(this)
        override fun groupId(groupId: String): FluentBuilder = apply { this.groupId = groupId }
        override fun groupName(groupName: String): FluentBuilder = apply { this.groupName = groupName }
    }
}
