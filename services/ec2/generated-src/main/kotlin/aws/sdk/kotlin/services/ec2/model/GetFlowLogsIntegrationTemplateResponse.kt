// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class GetFlowLogsIntegrationTemplateResponse private constructor(builder: BuilderImpl) {
    /**
     * The generated CloudFormation template.
     */
    val result: String? = builder.result

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetFlowLogsIntegrationTemplateResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetFlowLogsIntegrationTemplateResponse(")
        append("result=$result)")
    }

    override fun hashCode(): kotlin.Int {
        var result = result?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetFlowLogsIntegrationTemplateResponse

        if (result != other.result) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetFlowLogsIntegrationTemplateResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetFlowLogsIntegrationTemplateResponse
        /**
         * The generated CloudFormation template.
         */
        fun result(result: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The generated CloudFormation template.
         */
        var result: String?

        fun build(): GetFlowLogsIntegrationTemplateResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var result: String? = null

        constructor(x: GetFlowLogsIntegrationTemplateResponse) : this() {
            this.result = x.result
        }

        override fun build(): GetFlowLogsIntegrationTemplateResponse = GetFlowLogsIntegrationTemplateResponse(this)
        override fun result(result: String): FluentBuilder = apply { this.result = result }
    }
}
