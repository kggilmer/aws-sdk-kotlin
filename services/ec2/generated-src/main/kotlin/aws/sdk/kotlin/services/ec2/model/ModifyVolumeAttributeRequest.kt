// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ModifyVolumeAttributeRequest private constructor(builder: BuilderImpl) {
    /**
     * Indicates whether the volume should be auto-enabled for I/O operations.
     */
    val autoEnableIo: AttributeBooleanValue? = builder.autoEnableIo
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The ID of the volume.
     */
    val volumeId: String? = builder.volumeId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifyVolumeAttributeRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifyVolumeAttributeRequest(")
        append("autoEnableIo=$autoEnableIo,")
        append("dryRun=$dryRun,")
        append("volumeId=$volumeId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = autoEnableIo?.hashCode() ?: 0
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (volumeId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifyVolumeAttributeRequest

        if (autoEnableIo != other.autoEnableIo) return false
        if (dryRun != other.dryRun) return false
        if (volumeId != other.volumeId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifyVolumeAttributeRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifyVolumeAttributeRequest
        /**
         * Indicates whether the volume should be auto-enabled for I/O operations.
         */
        fun autoEnableIo(autoEnableIo: AttributeBooleanValue): FluentBuilder
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The ID of the volume.
         */
        fun volumeId(volumeId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates whether the volume should be auto-enabled for I/O operations.
         */
        var autoEnableIo: AttributeBooleanValue?
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The ID of the volume.
         */
        var volumeId: String?

        fun build(): ModifyVolumeAttributeRequest
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.AttributeBooleanValue] inside the given [block]
         */
        fun autoEnableIo(block: AttributeBooleanValue.DslBuilder.() -> kotlin.Unit) {
            this.autoEnableIo = AttributeBooleanValue.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var autoEnableIo: AttributeBooleanValue? = null
        override var dryRun: Boolean? = null
        override var volumeId: String? = null

        constructor(x: ModifyVolumeAttributeRequest) : this() {
            this.autoEnableIo = x.autoEnableIo
            this.dryRun = x.dryRun
            this.volumeId = x.volumeId
        }

        override fun build(): ModifyVolumeAttributeRequest = ModifyVolumeAttributeRequest(this)
        override fun autoEnableIo(autoEnableIo: AttributeBooleanValue): FluentBuilder = apply { this.autoEnableIo = autoEnableIo }
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun volumeId(volumeId: String): FluentBuilder = apply { this.volumeId = volumeId }
    }
}
