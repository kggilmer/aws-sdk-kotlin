// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the market (purchasing) option for the instances.
 */
class InstanceMarketOptionsRequest private constructor(builder: BuilderImpl) {
    /**
     * The market type.
     */
    val marketType: MarketType? = builder.marketType
    /**
     * The options for Spot Instances.
     */
    val spotOptions: SpotMarketOptions? = builder.spotOptions

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InstanceMarketOptionsRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceMarketOptionsRequest(")
        append("marketType=$marketType,")
        append("spotOptions=$spotOptions)")
    }

    override fun hashCode(): kotlin.Int {
        var result = marketType?.hashCode() ?: 0
        result = 31 * result + (spotOptions?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InstanceMarketOptionsRequest

        if (marketType != other.marketType) return false
        if (spotOptions != other.spotOptions) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InstanceMarketOptionsRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InstanceMarketOptionsRequest
        /**
         * The market type.
         */
        fun marketType(marketType: MarketType): FluentBuilder
        /**
         * The options for Spot Instances.
         */
        fun spotOptions(spotOptions: SpotMarketOptions): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The market type.
         */
        var marketType: MarketType?
        /**
         * The options for Spot Instances.
         */
        var spotOptions: SpotMarketOptions?

        fun build(): InstanceMarketOptionsRequest
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.SpotMarketOptions] inside the given [block]
         */
        fun spotOptions(block: SpotMarketOptions.DslBuilder.() -> kotlin.Unit) {
            this.spotOptions = SpotMarketOptions.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var marketType: MarketType? = null
        override var spotOptions: SpotMarketOptions? = null

        constructor(x: InstanceMarketOptionsRequest) : this() {
            this.marketType = x.marketType
            this.spotOptions = x.spotOptions
        }

        override fun build(): InstanceMarketOptionsRequest = InstanceMarketOptionsRequest(this)
        override fun marketType(marketType: MarketType): FluentBuilder = apply { this.marketType = marketType }
        override fun spotOptions(spotOptions: SpotMarketOptions): FluentBuilder = apply { this.spotOptions = spotOptions }
    }
}
