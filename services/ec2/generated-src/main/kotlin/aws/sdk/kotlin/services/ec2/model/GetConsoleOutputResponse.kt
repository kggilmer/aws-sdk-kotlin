// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

class GetConsoleOutputResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the instance.
     */
    val instanceId: String? = builder.instanceId
    /**
     * The console output, base64-encoded. If you are using a command line tool, the tool
     * decodes the output for you.
     */
    val output: String? = builder.output
    /**
     * The time at which the output was last updated.
     */
    val timestamp: Instant? = builder.timestamp

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetConsoleOutputResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetConsoleOutputResponse(")
        append("instanceId=$instanceId,")
        append("output=$output,")
        append("timestamp=$timestamp)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceId?.hashCode() ?: 0
        result = 31 * result + (output?.hashCode() ?: 0)
        result = 31 * result + (timestamp?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetConsoleOutputResponse

        if (instanceId != other.instanceId) return false
        if (output != other.output) return false
        if (timestamp != other.timestamp) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetConsoleOutputResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetConsoleOutputResponse
        /**
         * The ID of the instance.
         */
        fun instanceId(instanceId: String): FluentBuilder
        /**
         * The console output, base64-encoded. If you are using a command line tool, the tool
         * decodes the output for you.
         */
        fun output(output: String): FluentBuilder
        /**
         * The time at which the output was last updated.
         */
        fun timestamp(timestamp: Instant): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the instance.
         */
        var instanceId: String?
        /**
         * The console output, base64-encoded. If you are using a command line tool, the tool
         * decodes the output for you.
         */
        var output: String?
        /**
         * The time at which the output was last updated.
         */
        var timestamp: Instant?

        fun build(): GetConsoleOutputResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceId: String? = null
        override var output: String? = null
        override var timestamp: Instant? = null

        constructor(x: GetConsoleOutputResponse) : this() {
            this.instanceId = x.instanceId
            this.output = x.output
            this.timestamp = x.timestamp
        }

        override fun build(): GetConsoleOutputResponse = GetConsoleOutputResponse(this)
        override fun instanceId(instanceId: String): FluentBuilder = apply { this.instanceId = instanceId }
        override fun output(output: String): FluentBuilder = apply { this.output = output }
        override fun timestamp(timestamp: Instant): FluentBuilder = apply { this.timestamp = timestamp }
    }
}
