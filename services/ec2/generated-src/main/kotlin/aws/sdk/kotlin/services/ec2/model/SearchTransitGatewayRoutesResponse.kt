// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class SearchTransitGatewayRoutesResponse private constructor(builder: BuilderImpl) {
    /**
     * Indicates whether there are additional routes available.
     */
    val additionalRoutesAvailable: Boolean? = builder.additionalRoutesAvailable
    /**
     * Information about the routes.
     */
    val routes: List<TransitGatewayRoute>? = builder.routes

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): SearchTransitGatewayRoutesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("SearchTransitGatewayRoutesResponse(")
        append("additionalRoutesAvailable=$additionalRoutesAvailable,")
        append("routes=$routes)")
    }

    override fun hashCode(): kotlin.Int {
        var result = additionalRoutesAvailable?.hashCode() ?: 0
        result = 31 * result + (routes?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as SearchTransitGatewayRoutesResponse

        if (additionalRoutesAvailable != other.additionalRoutesAvailable) return false
        if (routes != other.routes) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): SearchTransitGatewayRoutesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): SearchTransitGatewayRoutesResponse
        /**
         * Indicates whether there are additional routes available.
         */
        fun additionalRoutesAvailable(additionalRoutesAvailable: Boolean): FluentBuilder
        /**
         * Information about the routes.
         */
        fun routes(routes: List<TransitGatewayRoute>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates whether there are additional routes available.
         */
        var additionalRoutesAvailable: Boolean?
        /**
         * Information about the routes.
         */
        var routes: List<TransitGatewayRoute>?

        fun build(): SearchTransitGatewayRoutesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var additionalRoutesAvailable: Boolean? = null
        override var routes: List<TransitGatewayRoute>? = null

        constructor(x: SearchTransitGatewayRoutesResponse) : this() {
            this.additionalRoutesAvailable = x.additionalRoutesAvailable
            this.routes = x.routes
        }

        override fun build(): SearchTransitGatewayRoutesResponse = SearchTransitGatewayRoutesResponse(this)
        override fun additionalRoutesAvailable(additionalRoutesAvailable: Boolean): FluentBuilder = apply { this.additionalRoutesAvailable = additionalRoutesAvailable }
        override fun routes(routes: List<TransitGatewayRoute>): FluentBuilder = apply { this.routes = routes }
    }
}
