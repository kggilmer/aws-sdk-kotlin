// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateInstanceExportTaskRequest private constructor(builder: BuilderImpl) {
    /**
     * A description for the conversion task or the resource being exported. The maximum length is 255 characters.
     */
    val description: String? = builder.description
    /**
     * The format and location for an export instance task.
     */
    val exportToS3Task: ExportToS3TaskSpecification? = builder.exportToS3Task
    /**
     * The ID of the instance.
     */
    val instanceId: String? = builder.instanceId
    /**
     * The tags to apply to the export instance task during creation.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications
    /**
     * The target virtualization environment.
     */
    val targetEnvironment: ExportEnvironment? = builder.targetEnvironment

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateInstanceExportTaskRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateInstanceExportTaskRequest(")
        append("description=$description,")
        append("exportToS3Task=$exportToS3Task,")
        append("instanceId=$instanceId,")
        append("tagSpecifications=$tagSpecifications,")
        append("targetEnvironment=$targetEnvironment)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (exportToS3Task?.hashCode() ?: 0)
        result = 31 * result + (instanceId?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        result = 31 * result + (targetEnvironment?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateInstanceExportTaskRequest

        if (description != other.description) return false
        if (exportToS3Task != other.exportToS3Task) return false
        if (instanceId != other.instanceId) return false
        if (tagSpecifications != other.tagSpecifications) return false
        if (targetEnvironment != other.targetEnvironment) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateInstanceExportTaskRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateInstanceExportTaskRequest
        /**
         * A description for the conversion task or the resource being exported. The maximum length is 255 characters.
         */
        fun description(description: String): FluentBuilder
        /**
         * The format and location for an export instance task.
         */
        fun exportToS3Task(exportToS3Task: ExportToS3TaskSpecification): FluentBuilder
        /**
         * The ID of the instance.
         */
        fun instanceId(instanceId: String): FluentBuilder
        /**
         * The tags to apply to the export instance task during creation.
         */
        fun tagSpecifications(tagSpecifications: List<TagSpecification>): FluentBuilder
        /**
         * The target virtualization environment.
         */
        fun targetEnvironment(targetEnvironment: ExportEnvironment): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A description for the conversion task or the resource being exported. The maximum length is 255 characters.
         */
        var description: String?
        /**
         * The format and location for an export instance task.
         */
        var exportToS3Task: ExportToS3TaskSpecification?
        /**
         * The ID of the instance.
         */
        var instanceId: String?
        /**
         * The tags to apply to the export instance task during creation.
         */
        var tagSpecifications: List<TagSpecification>?
        /**
         * The target virtualization environment.
         */
        var targetEnvironment: ExportEnvironment?

        fun build(): CreateInstanceExportTaskRequest
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ExportToS3TaskSpecification] inside the given [block]
         */
        fun exportToS3Task(block: ExportToS3TaskSpecification.DslBuilder.() -> kotlin.Unit) {
            this.exportToS3Task = ExportToS3TaskSpecification.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var description: String? = null
        override var exportToS3Task: ExportToS3TaskSpecification? = null
        override var instanceId: String? = null
        override var tagSpecifications: List<TagSpecification>? = null
        override var targetEnvironment: ExportEnvironment? = null

        constructor(x: CreateInstanceExportTaskRequest) : this() {
            this.description = x.description
            this.exportToS3Task = x.exportToS3Task
            this.instanceId = x.instanceId
            this.tagSpecifications = x.tagSpecifications
            this.targetEnvironment = x.targetEnvironment
        }

        override fun build(): CreateInstanceExportTaskRequest = CreateInstanceExportTaskRequest(this)
        override fun description(description: String): FluentBuilder = apply { this.description = description }
        override fun exportToS3Task(exportToS3Task: ExportToS3TaskSpecification): FluentBuilder = apply { this.exportToS3Task = exportToS3Task }
        override fun instanceId(instanceId: String): FluentBuilder = apply { this.instanceId = instanceId }
        override fun tagSpecifications(tagSpecifications: List<TagSpecification>): FluentBuilder = apply { this.tagSpecifications = tagSpecifications }
        override fun targetEnvironment(targetEnvironment: ExportEnvironment): FluentBuilder = apply { this.targetEnvironment = targetEnvironment }
    }
}
