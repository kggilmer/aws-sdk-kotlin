// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes the instance status.
 */
class InstanceStatusDetails private constructor(builder: BuilderImpl) {
    /**
     * The time when a status check failed. For an instance that was launched and impaired,
     * this is the time when the instance was launched.
     */
    val impairedSince: Instant? = builder.impairedSince
    /**
     * The type of instance status.
     */
    val name: StatusName? = builder.name
    /**
     * The status.
     */
    val status: StatusType? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InstanceStatusDetails = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceStatusDetails(")
        append("impairedSince=$impairedSince,")
        append("name=$name,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = impairedSince?.hashCode() ?: 0
        result = 31 * result + (name?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InstanceStatusDetails

        if (impairedSince != other.impairedSince) return false
        if (name != other.name) return false
        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InstanceStatusDetails = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InstanceStatusDetails
        /**
         * The time when a status check failed. For an instance that was launched and impaired,
         * this is the time when the instance was launched.
         */
        fun impairedSince(impairedSince: Instant): FluentBuilder
        /**
         * The type of instance status.
         */
        fun name(name: StatusName): FluentBuilder
        /**
         * The status.
         */
        fun status(status: StatusType): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The time when a status check failed. For an instance that was launched and impaired,
         * this is the time when the instance was launched.
         */
        var impairedSince: Instant?
        /**
         * The type of instance status.
         */
        var name: StatusName?
        /**
         * The status.
         */
        var status: StatusType?

        fun build(): InstanceStatusDetails
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var impairedSince: Instant? = null
        override var name: StatusName? = null
        override var status: StatusType? = null

        constructor(x: InstanceStatusDetails) : this() {
            this.impairedSince = x.impairedSince
            this.name = x.name
            this.status = x.status
        }

        override fun build(): InstanceStatusDetails = InstanceStatusDetails(this)
        override fun impairedSince(impairedSince: Instant): FluentBuilder = apply { this.impairedSince = impairedSince }
        override fun name(name: StatusName): FluentBuilder = apply { this.name = name }
        override fun status(status: StatusType): FluentBuilder = apply { this.status = status }
    }
}
