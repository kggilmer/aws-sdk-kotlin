// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

class CreateCapacityReservationFleetResponse private constructor(builder: BuilderImpl) {
    /**
     * The allocation strategy used by the Capacity Reservation Fleet.
     */
    val allocationStrategy: String? = builder.allocationStrategy
    /**
     * The ID of the Capacity Reservation Fleet.
     */
    val capacityReservationFleetId: String? = builder.capacityReservationFleetId
    /**
     * The date and time at which the Capacity Reservation Fleet was created.
     */
    val createTime: Instant? = builder.createTime
    /**
     * The date and time at which the Capacity Reservation Fleet expires.
     */
    val endDate: Instant? = builder.endDate
    /**
     * Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
     */
    val fleetCapacityReservations: List<FleetCapacityReservation>? = builder.fleetCapacityReservations
    /**
     * The instance matching criteria for the Capacity Reservation Fleet.
     */
    val instanceMatchCriteria: FleetInstanceMatchCriteria? = builder.instanceMatchCriteria
    /**
     * The status of the Capacity Reservation Fleet.
     */
    val state: CapacityReservationFleetState? = builder.state
    /**
     * The tags assigned to the Capacity Reservation Fleet.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * Indicates the tenancy of Capacity Reservation Fleet.
     */
    val tenancy: FleetCapacityReservationTenancy? = builder.tenancy
    /**
     * The requested capacity units that have been successfully reserved.
     */
    val totalFulfilledCapacity: Double? = builder.totalFulfilledCapacity
    /**
     * The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
     */
    val totalTargetCapacity: Int? = builder.totalTargetCapacity

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateCapacityReservationFleetResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateCapacityReservationFleetResponse(")
        append("allocationStrategy=$allocationStrategy,")
        append("capacityReservationFleetId=$capacityReservationFleetId,")
        append("createTime=$createTime,")
        append("endDate=$endDate,")
        append("fleetCapacityReservations=$fleetCapacityReservations,")
        append("instanceMatchCriteria=$instanceMatchCriteria,")
        append("state=$state,")
        append("tags=$tags,")
        append("tenancy=$tenancy,")
        append("totalFulfilledCapacity=$totalFulfilledCapacity,")
        append("totalTargetCapacity=$totalTargetCapacity)")
    }

    override fun hashCode(): kotlin.Int {
        var result = allocationStrategy?.hashCode() ?: 0
        result = 31 * result + (capacityReservationFleetId?.hashCode() ?: 0)
        result = 31 * result + (createTime?.hashCode() ?: 0)
        result = 31 * result + (endDate?.hashCode() ?: 0)
        result = 31 * result + (fleetCapacityReservations?.hashCode() ?: 0)
        result = 31 * result + (instanceMatchCriteria?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (tenancy?.hashCode() ?: 0)
        result = 31 * result + (totalFulfilledCapacity?.hashCode() ?: 0)
        result = 31 * result + (totalTargetCapacity ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateCapacityReservationFleetResponse

        if (allocationStrategy != other.allocationStrategy) return false
        if (capacityReservationFleetId != other.capacityReservationFleetId) return false
        if (createTime != other.createTime) return false
        if (endDate != other.endDate) return false
        if (fleetCapacityReservations != other.fleetCapacityReservations) return false
        if (instanceMatchCriteria != other.instanceMatchCriteria) return false
        if (state != other.state) return false
        if (tags != other.tags) return false
        if (tenancy != other.tenancy) return false
        if (totalFulfilledCapacity != other.totalFulfilledCapacity) return false
        if (totalTargetCapacity != other.totalTargetCapacity) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateCapacityReservationFleetResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateCapacityReservationFleetResponse
        /**
         * The allocation strategy used by the Capacity Reservation Fleet.
         */
        fun allocationStrategy(allocationStrategy: String): FluentBuilder
        /**
         * The ID of the Capacity Reservation Fleet.
         */
        fun capacityReservationFleetId(capacityReservationFleetId: String): FluentBuilder
        /**
         * The date and time at which the Capacity Reservation Fleet was created.
         */
        fun createTime(createTime: Instant): FluentBuilder
        /**
         * The date and time at which the Capacity Reservation Fleet expires.
         */
        fun endDate(endDate: Instant): FluentBuilder
        /**
         * Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
         */
        fun fleetCapacityReservations(fleetCapacityReservations: List<FleetCapacityReservation>): FluentBuilder
        /**
         * The instance matching criteria for the Capacity Reservation Fleet.
         */
        fun instanceMatchCriteria(instanceMatchCriteria: FleetInstanceMatchCriteria): FluentBuilder
        /**
         * The status of the Capacity Reservation Fleet.
         */
        fun state(state: CapacityReservationFleetState): FluentBuilder
        /**
         * The tags assigned to the Capacity Reservation Fleet.
         */
        fun tags(tags: List<Tag>): FluentBuilder
        /**
         * Indicates the tenancy of Capacity Reservation Fleet.
         */
        fun tenancy(tenancy: FleetCapacityReservationTenancy): FluentBuilder
        /**
         * The requested capacity units that have been successfully reserved.
         */
        fun totalFulfilledCapacity(totalFulfilledCapacity: Double): FluentBuilder
        /**
         * The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
         */
        fun totalTargetCapacity(totalTargetCapacity: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The allocation strategy used by the Capacity Reservation Fleet.
         */
        var allocationStrategy: String?
        /**
         * The ID of the Capacity Reservation Fleet.
         */
        var capacityReservationFleetId: String?
        /**
         * The date and time at which the Capacity Reservation Fleet was created.
         */
        var createTime: Instant?
        /**
         * The date and time at which the Capacity Reservation Fleet expires.
         */
        var endDate: Instant?
        /**
         * Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
         */
        var fleetCapacityReservations: List<FleetCapacityReservation>?
        /**
         * The instance matching criteria for the Capacity Reservation Fleet.
         */
        var instanceMatchCriteria: FleetInstanceMatchCriteria?
        /**
         * The status of the Capacity Reservation Fleet.
         */
        var state: CapacityReservationFleetState?
        /**
         * The tags assigned to the Capacity Reservation Fleet.
         */
        var tags: List<Tag>?
        /**
         * Indicates the tenancy of Capacity Reservation Fleet.
         */
        var tenancy: FleetCapacityReservationTenancy?
        /**
         * The requested capacity units that have been successfully reserved.
         */
        var totalFulfilledCapacity: Double?
        /**
         * The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
         */
        var totalTargetCapacity: Int?

        fun build(): CreateCapacityReservationFleetResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var allocationStrategy: String? = null
        override var capacityReservationFleetId: String? = null
        override var createTime: Instant? = null
        override var endDate: Instant? = null
        override var fleetCapacityReservations: List<FleetCapacityReservation>? = null
        override var instanceMatchCriteria: FleetInstanceMatchCriteria? = null
        override var state: CapacityReservationFleetState? = null
        override var tags: List<Tag>? = null
        override var tenancy: FleetCapacityReservationTenancy? = null
        override var totalFulfilledCapacity: Double? = null
        override var totalTargetCapacity: Int? = null

        constructor(x: CreateCapacityReservationFleetResponse) : this() {
            this.allocationStrategy = x.allocationStrategy
            this.capacityReservationFleetId = x.capacityReservationFleetId
            this.createTime = x.createTime
            this.endDate = x.endDate
            this.fleetCapacityReservations = x.fleetCapacityReservations
            this.instanceMatchCriteria = x.instanceMatchCriteria
            this.state = x.state
            this.tags = x.tags
            this.tenancy = x.tenancy
            this.totalFulfilledCapacity = x.totalFulfilledCapacity
            this.totalTargetCapacity = x.totalTargetCapacity
        }

        override fun build(): CreateCapacityReservationFleetResponse = CreateCapacityReservationFleetResponse(this)
        override fun allocationStrategy(allocationStrategy: String): FluentBuilder = apply { this.allocationStrategy = allocationStrategy }
        override fun capacityReservationFleetId(capacityReservationFleetId: String): FluentBuilder = apply { this.capacityReservationFleetId = capacityReservationFleetId }
        override fun createTime(createTime: Instant): FluentBuilder = apply { this.createTime = createTime }
        override fun endDate(endDate: Instant): FluentBuilder = apply { this.endDate = endDate }
        override fun fleetCapacityReservations(fleetCapacityReservations: List<FleetCapacityReservation>): FluentBuilder = apply { this.fleetCapacityReservations = fleetCapacityReservations }
        override fun instanceMatchCriteria(instanceMatchCriteria: FleetInstanceMatchCriteria): FluentBuilder = apply { this.instanceMatchCriteria = instanceMatchCriteria }
        override fun state(state: CapacityReservationFleetState): FluentBuilder = apply { this.state = state }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
        override fun tenancy(tenancy: FleetCapacityReservationTenancy): FluentBuilder = apply { this.tenancy = tenancy }
        override fun totalFulfilledCapacity(totalFulfilledCapacity: Double): FluentBuilder = apply { this.totalFulfilledCapacity = totalFulfilledCapacity }
        override fun totalTargetCapacity(totalTargetCapacity: Int): FluentBuilder = apply { this.totalTargetCapacity = totalTargetCapacity }
    }
}
