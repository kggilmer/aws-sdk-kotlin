// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes a transit gateway Connect peer.
 */
class TransitGatewayConnectPeer private constructor(builder: BuilderImpl) {
    /**
     * The Connect peer details.
     */
    val connectPeerConfiguration: TransitGatewayConnectPeerConfiguration? = builder.connectPeerConfiguration
    /**
     * The creation time.
     */
    val creationTime: Instant? = builder.creationTime
    /**
     * The state of the Connect peer.
     */
    val state: TransitGatewayConnectPeerState? = builder.state
    /**
     * The tags for the Connect peer.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * The ID of the Connect attachment.
     */
    val transitGatewayAttachmentId: String? = builder.transitGatewayAttachmentId
    /**
     * The ID of the Connect peer.
     */
    val transitGatewayConnectPeerId: String? = builder.transitGatewayConnectPeerId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TransitGatewayConnectPeer = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayConnectPeer(")
        append("connectPeerConfiguration=$connectPeerConfiguration,")
        append("creationTime=$creationTime,")
        append("state=$state,")
        append("tags=$tags,")
        append("transitGatewayAttachmentId=$transitGatewayAttachmentId,")
        append("transitGatewayConnectPeerId=$transitGatewayConnectPeerId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = connectPeerConfiguration?.hashCode() ?: 0
        result = 31 * result + (creationTime?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAttachmentId?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayConnectPeerId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TransitGatewayConnectPeer

        if (connectPeerConfiguration != other.connectPeerConfiguration) return false
        if (creationTime != other.creationTime) return false
        if (state != other.state) return false
        if (tags != other.tags) return false
        if (transitGatewayAttachmentId != other.transitGatewayAttachmentId) return false
        if (transitGatewayConnectPeerId != other.transitGatewayConnectPeerId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TransitGatewayConnectPeer = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TransitGatewayConnectPeer
        /**
         * The Connect peer details.
         */
        fun connectPeerConfiguration(connectPeerConfiguration: TransitGatewayConnectPeerConfiguration): FluentBuilder
        /**
         * The creation time.
         */
        fun creationTime(creationTime: Instant): FluentBuilder
        /**
         * The state of the Connect peer.
         */
        fun state(state: TransitGatewayConnectPeerState): FluentBuilder
        /**
         * The tags for the Connect peer.
         */
        fun tags(tags: List<Tag>): FluentBuilder
        /**
         * The ID of the Connect attachment.
         */
        fun transitGatewayAttachmentId(transitGatewayAttachmentId: String): FluentBuilder
        /**
         * The ID of the Connect peer.
         */
        fun transitGatewayConnectPeerId(transitGatewayConnectPeerId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Connect peer details.
         */
        var connectPeerConfiguration: TransitGatewayConnectPeerConfiguration?
        /**
         * The creation time.
         */
        var creationTime: Instant?
        /**
         * The state of the Connect peer.
         */
        var state: TransitGatewayConnectPeerState?
        /**
         * The tags for the Connect peer.
         */
        var tags: List<Tag>?
        /**
         * The ID of the Connect attachment.
         */
        var transitGatewayAttachmentId: String?
        /**
         * The ID of the Connect peer.
         */
        var transitGatewayConnectPeerId: String?

        fun build(): TransitGatewayConnectPeer
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.TransitGatewayConnectPeerConfiguration] inside the given [block]
         */
        fun connectPeerConfiguration(block: TransitGatewayConnectPeerConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.connectPeerConfiguration = TransitGatewayConnectPeerConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var connectPeerConfiguration: TransitGatewayConnectPeerConfiguration? = null
        override var creationTime: Instant? = null
        override var state: TransitGatewayConnectPeerState? = null
        override var tags: List<Tag>? = null
        override var transitGatewayAttachmentId: String? = null
        override var transitGatewayConnectPeerId: String? = null

        constructor(x: TransitGatewayConnectPeer) : this() {
            this.connectPeerConfiguration = x.connectPeerConfiguration
            this.creationTime = x.creationTime
            this.state = x.state
            this.tags = x.tags
            this.transitGatewayAttachmentId = x.transitGatewayAttachmentId
            this.transitGatewayConnectPeerId = x.transitGatewayConnectPeerId
        }

        override fun build(): TransitGatewayConnectPeer = TransitGatewayConnectPeer(this)
        override fun connectPeerConfiguration(connectPeerConfiguration: TransitGatewayConnectPeerConfiguration): FluentBuilder = apply { this.connectPeerConfiguration = connectPeerConfiguration }
        override fun creationTime(creationTime: Instant): FluentBuilder = apply { this.creationTime = creationTime }
        override fun state(state: TransitGatewayConnectPeerState): FluentBuilder = apply { this.state = state }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
        override fun transitGatewayAttachmentId(transitGatewayAttachmentId: String): FluentBuilder = apply { this.transitGatewayAttachmentId = transitGatewayAttachmentId }
        override fun transitGatewayConnectPeerId(transitGatewayConnectPeerId: String): FluentBuilder = apply { this.transitGatewayConnectPeerId = transitGatewayConnectPeerId }
    }
}
