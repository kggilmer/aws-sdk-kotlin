// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateTransitGatewayConnectRequest private constructor(builder: BuilderImpl) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The Connect attachment options.
     */
    val options: CreateTransitGatewayConnectRequestOptions? = builder.options
    /**
     * The tags to apply to the Connect attachment.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications
    /**
     * The ID of the transit gateway attachment. You can specify a VPC attachment or Amazon Web Services Direct Connect attachment.
     */
    val transportTransitGatewayAttachmentId: String? = builder.transportTransitGatewayAttachmentId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateTransitGatewayConnectRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateTransitGatewayConnectRequest(")
        append("dryRun=$dryRun,")
        append("options=$options,")
        append("tagSpecifications=$tagSpecifications,")
        append("transportTransitGatewayAttachmentId=$transportTransitGatewayAttachmentId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (options?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        result = 31 * result + (transportTransitGatewayAttachmentId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateTransitGatewayConnectRequest

        if (dryRun != other.dryRun) return false
        if (options != other.options) return false
        if (tagSpecifications != other.tagSpecifications) return false
        if (transportTransitGatewayAttachmentId != other.transportTransitGatewayAttachmentId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateTransitGatewayConnectRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateTransitGatewayConnectRequest
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The Connect attachment options.
         */
        fun options(options: CreateTransitGatewayConnectRequestOptions): FluentBuilder
        /**
         * The tags to apply to the Connect attachment.
         */
        fun tagSpecifications(tagSpecifications: List<TagSpecification>): FluentBuilder
        /**
         * The ID of the transit gateway attachment. You can specify a VPC attachment or Amazon Web Services Direct Connect attachment.
         */
        fun transportTransitGatewayAttachmentId(transportTransitGatewayAttachmentId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The Connect attachment options.
         */
        var options: CreateTransitGatewayConnectRequestOptions?
        /**
         * The tags to apply to the Connect attachment.
         */
        var tagSpecifications: List<TagSpecification>?
        /**
         * The ID of the transit gateway attachment. You can specify a VPC attachment or Amazon Web Services Direct Connect attachment.
         */
        var transportTransitGatewayAttachmentId: String?

        fun build(): CreateTransitGatewayConnectRequest
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayConnectRequestOptions] inside the given [block]
         */
        fun options(block: CreateTransitGatewayConnectRequestOptions.DslBuilder.() -> kotlin.Unit) {
            this.options = CreateTransitGatewayConnectRequestOptions.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var dryRun: Boolean? = null
        override var options: CreateTransitGatewayConnectRequestOptions? = null
        override var tagSpecifications: List<TagSpecification>? = null
        override var transportTransitGatewayAttachmentId: String? = null

        constructor(x: CreateTransitGatewayConnectRequest) : this() {
            this.dryRun = x.dryRun
            this.options = x.options
            this.tagSpecifications = x.tagSpecifications
            this.transportTransitGatewayAttachmentId = x.transportTransitGatewayAttachmentId
        }

        override fun build(): CreateTransitGatewayConnectRequest = CreateTransitGatewayConnectRequest(this)
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun options(options: CreateTransitGatewayConnectRequestOptions): FluentBuilder = apply { this.options = options }
        override fun tagSpecifications(tagSpecifications: List<TagSpecification>): FluentBuilder = apply { this.tagSpecifications = tagSpecifications }
        override fun transportTransitGatewayAttachmentId(transportTransitGatewayAttachmentId: String): FluentBuilder = apply { this.transportTransitGatewayAttachmentId = transportTransitGatewayAttachmentId }
    }
}
