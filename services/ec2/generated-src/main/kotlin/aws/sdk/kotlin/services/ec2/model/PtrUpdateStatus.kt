// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The status of an updated pointer (PTR) record for an Elastic IP address.
 */
class PtrUpdateStatus private constructor(builder: BuilderImpl) {
    /**
     * The reason for the PTR record update.
     */
    val reason: String? = builder.reason
    /**
     * The status of the PTR record update.
     */
    val status: String? = builder.status
    /**
     * The value for the PTR record update.
     */
    val value: String? = builder.value

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PtrUpdateStatus = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PtrUpdateStatus(")
        append("reason=$reason,")
        append("status=$status,")
        append("value=$value)")
    }

    override fun hashCode(): kotlin.Int {
        var result = reason?.hashCode() ?: 0
        result = 31 * result + (status?.hashCode() ?: 0)
        result = 31 * result + (value?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PtrUpdateStatus

        if (reason != other.reason) return false
        if (status != other.status) return false
        if (value != other.value) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PtrUpdateStatus = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PtrUpdateStatus
        /**
         * The reason for the PTR record update.
         */
        fun reason(reason: String): FluentBuilder
        /**
         * The status of the PTR record update.
         */
        fun status(status: String): FluentBuilder
        /**
         * The value for the PTR record update.
         */
        fun value(value: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The reason for the PTR record update.
         */
        var reason: String?
        /**
         * The status of the PTR record update.
         */
        var status: String?
        /**
         * The value for the PTR record update.
         */
        var value: String?

        fun build(): PtrUpdateStatus
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var reason: String? = null
        override var status: String? = null
        override var value: String? = null

        constructor(x: PtrUpdateStatus) : this() {
            this.reason = x.reason
            this.status = x.status
            this.value = x.value
        }

        override fun build(): PtrUpdateStatus = PtrUpdateStatus(this)
        override fun reason(reason: String): FluentBuilder = apply { this.reason = reason }
        override fun status(status: String): FluentBuilder = apply { this.status = status }
        override fun value(value: String): FluentBuilder = apply { this.value = value }
    }
}
