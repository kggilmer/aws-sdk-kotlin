// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the
 * running Spot Instances with these target groups.
 */
class TargetGroupsConfig private constructor(builder: BuilderImpl) {
    /**
     * One or more target groups.
     */
    val targetGroups: List<TargetGroup>? = builder.targetGroups

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TargetGroupsConfig = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TargetGroupsConfig(")
        append("targetGroups=$targetGroups)")
    }

    override fun hashCode(): kotlin.Int {
        var result = targetGroups?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TargetGroupsConfig

        if (targetGroups != other.targetGroups) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TargetGroupsConfig = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TargetGroupsConfig
        /**
         * One or more target groups.
         */
        fun targetGroups(targetGroups: List<TargetGroup>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * One or more target groups.
         */
        var targetGroups: List<TargetGroup>?

        fun build(): TargetGroupsConfig
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var targetGroups: List<TargetGroup>? = null

        constructor(x: TargetGroupsConfig) : this() {
            this.targetGroups = x.targetGroups
        }

        override fun build(): TargetGroupsConfig = TargetGroupsConfig(this)
        override fun targetGroups(targetGroups: List<TargetGroup>): FluentBuilder = apply { this.targetGroups = targetGroups }
    }
}
