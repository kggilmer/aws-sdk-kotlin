// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



sealed class FlowLogsResourceType {

    abstract val value: kotlin.String

    object NetworkInterface : aws.sdk.kotlin.services.ec2.model.FlowLogsResourceType() {
        override val value: kotlin.String = "NetworkInterface"
        override fun toString(): kotlin.String = value
    }

    object Subnet : aws.sdk.kotlin.services.ec2.model.FlowLogsResourceType() {
        override val value: kotlin.String = "Subnet"
        override fun toString(): kotlin.String = value
    }

    object Vpc : aws.sdk.kotlin.services.ec2.model.FlowLogsResourceType() {
        override val value: kotlin.String = "VPC"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.FlowLogsResourceType() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.FlowLogsResourceType = when(str) {
            "NetworkInterface" -> NetworkInterface
            "Subnet" -> Subnet
            "VPC" -> Vpc
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.FlowLogsResourceType> = listOf(
            NetworkInterface,
            Subnet,
            Vpc
        )
    }
}
