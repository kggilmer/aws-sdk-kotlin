// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteTransitGatewayPrefixListReferenceRequest private constructor(builder: BuilderImpl) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The ID of the prefix list.
     */
    val prefixListId: String? = builder.prefixListId
    /**
     * The ID of the route table.
     */
    val transitGatewayRouteTableId: String? = builder.transitGatewayRouteTableId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteTransitGatewayPrefixListReferenceRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteTransitGatewayPrefixListReferenceRequest(")
        append("dryRun=$dryRun,")
        append("prefixListId=$prefixListId,")
        append("transitGatewayRouteTableId=$transitGatewayRouteTableId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (prefixListId?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayRouteTableId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteTransitGatewayPrefixListReferenceRequest

        if (dryRun != other.dryRun) return false
        if (prefixListId != other.prefixListId) return false
        if (transitGatewayRouteTableId != other.transitGatewayRouteTableId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteTransitGatewayPrefixListReferenceRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteTransitGatewayPrefixListReferenceRequest
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The ID of the prefix list.
         */
        fun prefixListId(prefixListId: String): FluentBuilder
        /**
         * The ID of the route table.
         */
        fun transitGatewayRouteTableId(transitGatewayRouteTableId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The ID of the prefix list.
         */
        var prefixListId: String?
        /**
         * The ID of the route table.
         */
        var transitGatewayRouteTableId: String?

        fun build(): DeleteTransitGatewayPrefixListReferenceRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var dryRun: Boolean? = null
        override var prefixListId: String? = null
        override var transitGatewayRouteTableId: String? = null

        constructor(x: DeleteTransitGatewayPrefixListReferenceRequest) : this() {
            this.dryRun = x.dryRun
            this.prefixListId = x.prefixListId
            this.transitGatewayRouteTableId = x.transitGatewayRouteTableId
        }

        override fun build(): DeleteTransitGatewayPrefixListReferenceRequest = DeleteTransitGatewayPrefixListReferenceRequest(this)
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun prefixListId(prefixListId: String): FluentBuilder = apply { this.prefixListId = prefixListId }
        override fun transitGatewayRouteTableId(transitGatewayRouteTableId: String): FluentBuilder = apply { this.transitGatewayRouteTableId = transitGatewayRouteTableId }
    }
}
