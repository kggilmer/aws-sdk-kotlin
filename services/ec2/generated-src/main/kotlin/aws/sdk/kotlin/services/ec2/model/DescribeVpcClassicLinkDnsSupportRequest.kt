// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DescribeVpcClassicLinkDnsSupportRequest private constructor(builder: BuilderImpl) {
    /**
     * The maximum number of results to return with a single call.
     * To retrieve the remaining results, make another call with the returned nextToken value.
     */
    val maxResults: Int? = builder.maxResults
    /**
     * The token for the next page of results.
     */
    val nextToken: String? = builder.nextToken
    /**
     * One or more VPC IDs.
     */
    val vpcIds: List<String>? = builder.vpcIds

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeVpcClassicLinkDnsSupportRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeVpcClassicLinkDnsSupportRequest(")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken,")
        append("vpcIds=$vpcIds)")
    }

    override fun hashCode(): kotlin.Int {
        var result = maxResults ?: 0
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (vpcIds?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeVpcClassicLinkDnsSupportRequest

        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false
        if (vpcIds != other.vpcIds) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeVpcClassicLinkDnsSupportRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeVpcClassicLinkDnsSupportRequest
        /**
         * The maximum number of results to return with a single call.
         * To retrieve the remaining results, make another call with the returned nextToken value.
         */
        fun maxResults(maxResults: Int): FluentBuilder
        /**
         * The token for the next page of results.
         */
        fun nextToken(nextToken: String): FluentBuilder
        /**
         * One or more VPC IDs.
         */
        fun vpcIds(vpcIds: List<String>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The maximum number of results to return with a single call.
         * To retrieve the remaining results, make another call with the returned nextToken value.
         */
        var maxResults: Int?
        /**
         * The token for the next page of results.
         */
        var nextToken: String?
        /**
         * One or more VPC IDs.
         */
        var vpcIds: List<String>?

        fun build(): DescribeVpcClassicLinkDnsSupportRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var maxResults: Int? = null
        override var nextToken: String? = null
        override var vpcIds: List<String>? = null

        constructor(x: DescribeVpcClassicLinkDnsSupportRequest) : this() {
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
            this.vpcIds = x.vpcIds
        }

        override fun build(): DescribeVpcClassicLinkDnsSupportRequest = DescribeVpcClassicLinkDnsSupportRequest(this)
        override fun maxResults(maxResults: Int): FluentBuilder = apply { this.maxResults = maxResults }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
        override fun vpcIds(vpcIds: List<String>): FluentBuilder = apply { this.vpcIds = vpcIds }
    }
}
