// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class StartInstancesResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the started instances.
     */
    val startingInstances: List<InstanceStateChange>? = builder.startingInstances

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): StartInstancesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("StartInstancesResponse(")
        append("startingInstances=$startingInstances)")
    }

    override fun hashCode(): kotlin.Int {
        var result = startingInstances?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as StartInstancesResponse

        if (startingInstances != other.startingInstances) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): StartInstancesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): StartInstancesResponse
        /**
         * Information about the started instances.
         */
        fun startingInstances(startingInstances: List<InstanceStateChange>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the started instances.
         */
        var startingInstances: List<InstanceStateChange>?

        fun build(): StartInstancesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var startingInstances: List<InstanceStateChange>? = null

        constructor(x: StartInstancesResponse) : this() {
            this.startingInstances = x.startingInstances
        }

        override fun build(): StartInstancesResponse = StartInstancesResponse(this)
        override fun startingInstances(startingInstances: List<InstanceStateChange>): FluentBuilder = apply { this.startingInstances = startingInstances }
    }
}
