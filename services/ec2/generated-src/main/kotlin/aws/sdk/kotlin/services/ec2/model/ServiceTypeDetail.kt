// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the type of service for a VPC endpoint.
 */
class ServiceTypeDetail private constructor(builder: BuilderImpl) {
    /**
     * The type of service.
     */
    val serviceType: ServiceType? = builder.serviceType

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ServiceTypeDetail = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ServiceTypeDetail(")
        append("serviceType=$serviceType)")
    }

    override fun hashCode(): kotlin.Int {
        var result = serviceType?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ServiceTypeDetail

        if (serviceType != other.serviceType) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ServiceTypeDetail = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ServiceTypeDetail
        /**
         * The type of service.
         */
        fun serviceType(serviceType: ServiceType): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The type of service.
         */
        var serviceType: ServiceType?

        fun build(): ServiceTypeDetail
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var serviceType: ServiceType? = null

        constructor(x: ServiceTypeDetail) : this() {
            this.serviceType = x.serviceType
        }

        override fun build(): ServiceTypeDetail = ServiceTypeDetail(this)
        override fun serviceType(serviceType: ServiceType): FluentBuilder = apply { this.serviceType = serviceType }
    }
}
