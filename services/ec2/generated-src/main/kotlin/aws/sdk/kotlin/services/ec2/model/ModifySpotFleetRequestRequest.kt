// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for ModifySpotFleetRequest.
 */
class ModifySpotFleetRequestRequest private constructor(builder: BuilderImpl) {
    /**
     * Reserved.
     */
    val context: String? = builder.context
    /**
     * Indicates whether running Spot Instances should be terminated if the target capacity
     * of the Spot Fleet request is decreased below the current size of the Spot Fleet.
     */
    val excessCapacityTerminationPolicy: ExcessCapacityTerminationPolicy? = builder.excessCapacityTerminationPolicy
    /**
     * The launch template and overrides. You can only use this parameter if you specified a
     * launch template (LaunchTemplateConfigs) in your Spot Fleet request. If you
     * specified LaunchSpecifications in your Spot Fleet request, then omit this
     * parameter.
     */
    val launchTemplateConfigs: List<LaunchTemplateConfig>? = builder.launchTemplateConfigs
    /**
     * The number of On-Demand Instances in the fleet.
     */
    val onDemandTargetCapacity: Int? = builder.onDemandTargetCapacity
    /**
     * The ID of the Spot Fleet request.
     */
    val spotFleetRequestId: String? = builder.spotFleetRequestId
    /**
     * The size of the fleet.
     */
    val targetCapacity: Int? = builder.targetCapacity

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ModifySpotFleetRequestRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ModifySpotFleetRequestRequest(")
        append("context=$context,")
        append("excessCapacityTerminationPolicy=$excessCapacityTerminationPolicy,")
        append("launchTemplateConfigs=$launchTemplateConfigs,")
        append("onDemandTargetCapacity=$onDemandTargetCapacity,")
        append("spotFleetRequestId=$spotFleetRequestId,")
        append("targetCapacity=$targetCapacity)")
    }

    override fun hashCode(): kotlin.Int {
        var result = context?.hashCode() ?: 0
        result = 31 * result + (excessCapacityTerminationPolicy?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateConfigs?.hashCode() ?: 0)
        result = 31 * result + (onDemandTargetCapacity ?: 0)
        result = 31 * result + (spotFleetRequestId?.hashCode() ?: 0)
        result = 31 * result + (targetCapacity ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ModifySpotFleetRequestRequest

        if (context != other.context) return false
        if (excessCapacityTerminationPolicy != other.excessCapacityTerminationPolicy) return false
        if (launchTemplateConfigs != other.launchTemplateConfigs) return false
        if (onDemandTargetCapacity != other.onDemandTargetCapacity) return false
        if (spotFleetRequestId != other.spotFleetRequestId) return false
        if (targetCapacity != other.targetCapacity) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ModifySpotFleetRequestRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ModifySpotFleetRequestRequest
        /**
         * Reserved.
         */
        fun context(context: String): FluentBuilder
        /**
         * Indicates whether running Spot Instances should be terminated if the target capacity
         * of the Spot Fleet request is decreased below the current size of the Spot Fleet.
         */
        fun excessCapacityTerminationPolicy(excessCapacityTerminationPolicy: ExcessCapacityTerminationPolicy): FluentBuilder
        /**
         * The launch template and overrides. You can only use this parameter if you specified a
         * launch template (LaunchTemplateConfigs) in your Spot Fleet request. If you
         * specified LaunchSpecifications in your Spot Fleet request, then omit this
         * parameter.
         */
        fun launchTemplateConfigs(launchTemplateConfigs: List<LaunchTemplateConfig>): FluentBuilder
        /**
         * The number of On-Demand Instances in the fleet.
         */
        fun onDemandTargetCapacity(onDemandTargetCapacity: Int): FluentBuilder
        /**
         * The ID of the Spot Fleet request.
         */
        fun spotFleetRequestId(spotFleetRequestId: String): FluentBuilder
        /**
         * The size of the fleet.
         */
        fun targetCapacity(targetCapacity: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Reserved.
         */
        var context: String?
        /**
         * Indicates whether running Spot Instances should be terminated if the target capacity
         * of the Spot Fleet request is decreased below the current size of the Spot Fleet.
         */
        var excessCapacityTerminationPolicy: ExcessCapacityTerminationPolicy?
        /**
         * The launch template and overrides. You can only use this parameter if you specified a
         * launch template (LaunchTemplateConfigs) in your Spot Fleet request. If you
         * specified LaunchSpecifications in your Spot Fleet request, then omit this
         * parameter.
         */
        var launchTemplateConfigs: List<LaunchTemplateConfig>?
        /**
         * The number of On-Demand Instances in the fleet.
         */
        var onDemandTargetCapacity: Int?
        /**
         * The ID of the Spot Fleet request.
         */
        var spotFleetRequestId: String?
        /**
         * The size of the fleet.
         */
        var targetCapacity: Int?

        fun build(): ModifySpotFleetRequestRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var context: String? = null
        override var excessCapacityTerminationPolicy: ExcessCapacityTerminationPolicy? = null
        override var launchTemplateConfigs: List<LaunchTemplateConfig>? = null
        override var onDemandTargetCapacity: Int? = null
        override var spotFleetRequestId: String? = null
        override var targetCapacity: Int? = null

        constructor(x: ModifySpotFleetRequestRequest) : this() {
            this.context = x.context
            this.excessCapacityTerminationPolicy = x.excessCapacityTerminationPolicy
            this.launchTemplateConfigs = x.launchTemplateConfigs
            this.onDemandTargetCapacity = x.onDemandTargetCapacity
            this.spotFleetRequestId = x.spotFleetRequestId
            this.targetCapacity = x.targetCapacity
        }

        override fun build(): ModifySpotFleetRequestRequest = ModifySpotFleetRequestRequest(this)
        override fun context(context: String): FluentBuilder = apply { this.context = context }
        override fun excessCapacityTerminationPolicy(excessCapacityTerminationPolicy: ExcessCapacityTerminationPolicy): FluentBuilder = apply { this.excessCapacityTerminationPolicy = excessCapacityTerminationPolicy }
        override fun launchTemplateConfigs(launchTemplateConfigs: List<LaunchTemplateConfig>): FluentBuilder = apply { this.launchTemplateConfigs = launchTemplateConfigs }
        override fun onDemandTargetCapacity(onDemandTargetCapacity: Int): FluentBuilder = apply { this.onDemandTargetCapacity = onDemandTargetCapacity }
        override fun spotFleetRequestId(spotFleetRequestId: String): FluentBuilder = apply { this.spotFleetRequestId = spotFleetRequestId }
        override fun targetCapacity(targetCapacity: Int): FluentBuilder = apply { this.targetCapacity = targetCapacity }
    }
}
