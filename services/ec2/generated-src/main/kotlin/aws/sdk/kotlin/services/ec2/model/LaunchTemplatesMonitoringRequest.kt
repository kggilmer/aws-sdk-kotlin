// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the monitoring for the instance.
 */
class LaunchTemplatesMonitoringRequest private constructor(builder: BuilderImpl) {
    /**
     * Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.
     */
    val enabled: Boolean? = builder.enabled

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LaunchTemplatesMonitoringRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplatesMonitoringRequest(")
        append("enabled=$enabled)")
    }

    override fun hashCode(): kotlin.Int {
        var result = enabled?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LaunchTemplatesMonitoringRequest

        if (enabled != other.enabled) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LaunchTemplatesMonitoringRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LaunchTemplatesMonitoringRequest
        /**
         * Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.
         */
        fun enabled(enabled: Boolean): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specify true to enable detailed monitoring. Otherwise, basic monitoring is enabled.
         */
        var enabled: Boolean?

        fun build(): LaunchTemplatesMonitoringRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var enabled: Boolean? = null

        constructor(x: LaunchTemplatesMonitoringRequest) : this() {
            this.enabled = x.enabled
        }

        override fun build(): LaunchTemplatesMonitoringRequest = LaunchTemplatesMonitoringRequest(this)
        override fun enabled(enabled: Boolean): FluentBuilder = apply { this.enabled = enabled }
    }
}
