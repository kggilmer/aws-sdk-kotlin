// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an import volume task.
 */
class ImportInstanceVolumeDetailItem private constructor(builder: BuilderImpl) {
    /**
     * The Availability Zone where the resulting instance will reside.
     */
    val availabilityZone: String? = builder.availabilityZone
    /**
     * The number of bytes converted so far.
     */
    val bytesConverted: Long? = builder.bytesConverted
    /**
     * A description of the task.
     */
    val description: String? = builder.description
    /**
     * The image.
     */
    val image: DiskImageDescription? = builder.image
    /**
     * The status of the import of this particular disk image.
     */
    val status: String? = builder.status
    /**
     * The status information or errors related to the disk image.
     */
    val statusMessage: String? = builder.statusMessage
    /**
     * The volume.
     */
    val volume: DiskImageVolumeDescription? = builder.volume

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ImportInstanceVolumeDetailItem = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ImportInstanceVolumeDetailItem(")
        append("availabilityZone=$availabilityZone,")
        append("bytesConverted=$bytesConverted,")
        append("description=$description,")
        append("image=$image,")
        append("status=$status,")
        append("statusMessage=$statusMessage,")
        append("volume=$volume)")
    }

    override fun hashCode(): kotlin.Int {
        var result = availabilityZone?.hashCode() ?: 0
        result = 31 * result + (bytesConverted?.hashCode() ?: 0)
        result = 31 * result + (description?.hashCode() ?: 0)
        result = 31 * result + (image?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        result = 31 * result + (statusMessage?.hashCode() ?: 0)
        result = 31 * result + (volume?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ImportInstanceVolumeDetailItem

        if (availabilityZone != other.availabilityZone) return false
        if (bytesConverted != other.bytesConverted) return false
        if (description != other.description) return false
        if (image != other.image) return false
        if (status != other.status) return false
        if (statusMessage != other.statusMessage) return false
        if (volume != other.volume) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ImportInstanceVolumeDetailItem = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ImportInstanceVolumeDetailItem
        /**
         * The Availability Zone where the resulting instance will reside.
         */
        fun availabilityZone(availabilityZone: String): FluentBuilder
        /**
         * The number of bytes converted so far.
         */
        fun bytesConverted(bytesConverted: Long): FluentBuilder
        /**
         * A description of the task.
         */
        fun description(description: String): FluentBuilder
        /**
         * The image.
         */
        fun image(image: DiskImageDescription): FluentBuilder
        /**
         * The status of the import of this particular disk image.
         */
        fun status(status: String): FluentBuilder
        /**
         * The status information or errors related to the disk image.
         */
        fun statusMessage(statusMessage: String): FluentBuilder
        /**
         * The volume.
         */
        fun volume(volume: DiskImageVolumeDescription): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Availability Zone where the resulting instance will reside.
         */
        var availabilityZone: String?
        /**
         * The number of bytes converted so far.
         */
        var bytesConverted: Long?
        /**
         * A description of the task.
         */
        var description: String?
        /**
         * The image.
         */
        var image: DiskImageDescription?
        /**
         * The status of the import of this particular disk image.
         */
        var status: String?
        /**
         * The status information or errors related to the disk image.
         */
        var statusMessage: String?
        /**
         * The volume.
         */
        var volume: DiskImageVolumeDescription?

        fun build(): ImportInstanceVolumeDetailItem
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.DiskImageDescription] inside the given [block]
         */
        fun image(block: DiskImageDescription.DslBuilder.() -> kotlin.Unit) {
            this.image = DiskImageDescription.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.DiskImageVolumeDescription] inside the given [block]
         */
        fun volume(block: DiskImageVolumeDescription.DslBuilder.() -> kotlin.Unit) {
            this.volume = DiskImageVolumeDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var availabilityZone: String? = null
        override var bytesConverted: Long? = null
        override var description: String? = null
        override var image: DiskImageDescription? = null
        override var status: String? = null
        override var statusMessage: String? = null
        override var volume: DiskImageVolumeDescription? = null

        constructor(x: ImportInstanceVolumeDetailItem) : this() {
            this.availabilityZone = x.availabilityZone
            this.bytesConverted = x.bytesConverted
            this.description = x.description
            this.image = x.image
            this.status = x.status
            this.statusMessage = x.statusMessage
            this.volume = x.volume
        }

        override fun build(): ImportInstanceVolumeDetailItem = ImportInstanceVolumeDetailItem(this)
        override fun availabilityZone(availabilityZone: String): FluentBuilder = apply { this.availabilityZone = availabilityZone }
        override fun bytesConverted(bytesConverted: Long): FluentBuilder = apply { this.bytesConverted = bytesConverted }
        override fun description(description: String): FluentBuilder = apply { this.description = description }
        override fun image(image: DiskImageDescription): FluentBuilder = apply { this.image = image }
        override fun status(status: String): FluentBuilder = apply { this.status = status }
        override fun statusMessage(statusMessage: String): FluentBuilder = apply { this.statusMessage = statusMessage }
        override fun volume(volume: DiskImageVolumeDescription): FluentBuilder = apply { this.volume = volume }
    }
}
