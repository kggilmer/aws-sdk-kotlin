// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class AssociateTransitGatewayRouteTableResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the association.
     */
    val association: TransitGatewayAssociation? = builder.association

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AssociateTransitGatewayRouteTableResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AssociateTransitGatewayRouteTableResponse(")
        append("association=$association)")
    }

    override fun hashCode(): kotlin.Int {
        var result = association?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AssociateTransitGatewayRouteTableResponse

        if (association != other.association) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AssociateTransitGatewayRouteTableResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AssociateTransitGatewayRouteTableResponse
        /**
         * The ID of the association.
         */
        fun association(association: TransitGatewayAssociation): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the association.
         */
        var association: TransitGatewayAssociation?

        fun build(): AssociateTransitGatewayRouteTableResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.TransitGatewayAssociation] inside the given [block]
         */
        fun association(block: TransitGatewayAssociation.DslBuilder.() -> kotlin.Unit) {
            this.association = TransitGatewayAssociation.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var association: TransitGatewayAssociation? = null

        constructor(x: AssociateTransitGatewayRouteTableResponse) : this() {
            this.association = x.association
        }

        override fun build(): AssociateTransitGatewayRouteTableResponse = AssociateTransitGatewayRouteTableResponse(this)
        override fun association(association: TransitGatewayAssociation): FluentBuilder = apply { this.association = association }
    }
}
