// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The result of the exchange and whether it was successful.
 */
class AcceptReservedInstancesExchangeQuoteResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the successful exchange.
     */
    val exchangeId: String? = builder.exchangeId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AcceptReservedInstancesExchangeQuoteResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AcceptReservedInstancesExchangeQuoteResponse(")
        append("exchangeId=$exchangeId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = exchangeId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AcceptReservedInstancesExchangeQuoteResponse

        if (exchangeId != other.exchangeId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AcceptReservedInstancesExchangeQuoteResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AcceptReservedInstancesExchangeQuoteResponse
        /**
         * The ID of the successful exchange.
         */
        fun exchangeId(exchangeId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the successful exchange.
         */
        var exchangeId: String?

        fun build(): AcceptReservedInstancesExchangeQuoteResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var exchangeId: String? = null

        constructor(x: AcceptReservedInstancesExchangeQuoteResponse) : this() {
            this.exchangeId = x.exchangeId
        }

        override fun build(): AcceptReservedInstancesExchangeQuoteResponse = AcceptReservedInstancesExchangeQuoteResponse(this)
        override fun exchangeId(exchangeId: String): FluentBuilder = apply { this.exchangeId = exchangeId }
    }
}
