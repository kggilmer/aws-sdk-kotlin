// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteInstanceEventWindowResponse private constructor(builder: BuilderImpl) {
    /**
     * The state of the event window.
     */
    val instanceEventWindowState: InstanceEventWindowStateChange? = builder.instanceEventWindowState

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteInstanceEventWindowResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteInstanceEventWindowResponse(")
        append("instanceEventWindowState=$instanceEventWindowState)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceEventWindowState?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteInstanceEventWindowResponse

        if (instanceEventWindowState != other.instanceEventWindowState) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteInstanceEventWindowResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteInstanceEventWindowResponse
        /**
         * The state of the event window.
         */
        fun instanceEventWindowState(instanceEventWindowState: InstanceEventWindowStateChange): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The state of the event window.
         */
        var instanceEventWindowState: InstanceEventWindowStateChange?

        fun build(): DeleteInstanceEventWindowResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.InstanceEventWindowStateChange] inside the given [block]
         */
        fun instanceEventWindowState(block: InstanceEventWindowStateChange.DslBuilder.() -> kotlin.Unit) {
            this.instanceEventWindowState = InstanceEventWindowStateChange.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceEventWindowState: InstanceEventWindowStateChange? = null

        constructor(x: DeleteInstanceEventWindowResponse) : this() {
            this.instanceEventWindowState = x.instanceEventWindowState
        }

        override fun build(): DeleteInstanceEventWindowResponse = DeleteInstanceEventWindowResponse(this)
        override fun instanceEventWindowState(instanceEventWindowState: InstanceEventWindowStateChange): FluentBuilder = apply { this.instanceEventWindowState = instanceEventWindowState }
    }
}
