// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the monitoring of an instance.
 */
class InstanceMonitoring private constructor(builder: BuilderImpl) {
    /**
     * The ID of the instance.
     */
    val instanceId: String? = builder.instanceId
    /**
     * The monitoring for the instance.
     */
    val monitoring: Monitoring? = builder.monitoring

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InstanceMonitoring = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceMonitoring(")
        append("instanceId=$instanceId,")
        append("monitoring=$monitoring)")
    }

    override fun hashCode(): kotlin.Int {
        var result = instanceId?.hashCode() ?: 0
        result = 31 * result + (monitoring?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InstanceMonitoring

        if (instanceId != other.instanceId) return false
        if (monitoring != other.monitoring) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InstanceMonitoring = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InstanceMonitoring
        /**
         * The ID of the instance.
         */
        fun instanceId(instanceId: String): FluentBuilder
        /**
         * The monitoring for the instance.
         */
        fun monitoring(monitoring: Monitoring): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the instance.
         */
        var instanceId: String?
        /**
         * The monitoring for the instance.
         */
        var monitoring: Monitoring?

        fun build(): InstanceMonitoring
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.Monitoring] inside the given [block]
         */
        fun monitoring(block: Monitoring.DslBuilder.() -> kotlin.Unit) {
            this.monitoring = Monitoring.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var instanceId: String? = null
        override var monitoring: Monitoring? = null

        constructor(x: InstanceMonitoring) : this() {
            this.instanceId = x.instanceId
            this.monitoring = x.monitoring
        }

        override fun build(): InstanceMonitoring = InstanceMonitoring(this)
        override fun instanceId(instanceId: String): FluentBuilder = apply { this.instanceId = instanceId }
        override fun monitoring(monitoring: Monitoring): FluentBuilder = apply { this.monitoring = monitoring }
    }
}
