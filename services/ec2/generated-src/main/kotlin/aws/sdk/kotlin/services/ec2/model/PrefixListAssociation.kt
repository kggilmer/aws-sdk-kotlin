// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the resource with which a prefix list is associated.
 */
class PrefixListAssociation private constructor(builder: BuilderImpl) {
    /**
     * The ID of the resource.
     */
    val resourceId: String? = builder.resourceId
    /**
     * The owner of the resource.
     */
    val resourceOwner: String? = builder.resourceOwner

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PrefixListAssociation = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PrefixListAssociation(")
        append("resourceId=$resourceId,")
        append("resourceOwner=$resourceOwner)")
    }

    override fun hashCode(): kotlin.Int {
        var result = resourceId?.hashCode() ?: 0
        result = 31 * result + (resourceOwner?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PrefixListAssociation

        if (resourceId != other.resourceId) return false
        if (resourceOwner != other.resourceOwner) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PrefixListAssociation = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PrefixListAssociation
        /**
         * The ID of the resource.
         */
        fun resourceId(resourceId: String): FluentBuilder
        /**
         * The owner of the resource.
         */
        fun resourceOwner(resourceOwner: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the resource.
         */
        var resourceId: String?
        /**
         * The owner of the resource.
         */
        var resourceOwner: String?

        fun build(): PrefixListAssociation
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var resourceId: String? = null
        override var resourceOwner: String? = null

        constructor(x: PrefixListAssociation) : this() {
            this.resourceId = x.resourceId
            this.resourceOwner = x.resourceOwner
        }

        override fun build(): PrefixListAssociation = PrefixListAssociation(this)
        override fun resourceId(resourceId: String): FluentBuilder = apply { this.resourceId = resourceId }
        override fun resourceOwner(resourceOwner: String): FluentBuilder = apply { this.resourceOwner = resourceOwner }
    }
}
