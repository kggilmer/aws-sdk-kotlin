// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a prefix list entry.
 */
class PrefixListEntry private constructor(builder: BuilderImpl) {
    /**
     * The CIDR block.
     */
    val cidr: String? = builder.cidr
    /**
     * The description.
     */
    val description: String? = builder.description

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PrefixListEntry = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PrefixListEntry(")
        append("cidr=$cidr,")
        append("description=$description)")
    }

    override fun hashCode(): kotlin.Int {
        var result = cidr?.hashCode() ?: 0
        result = 31 * result + (description?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PrefixListEntry

        if (cidr != other.cidr) return false
        if (description != other.description) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PrefixListEntry = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PrefixListEntry
        /**
         * The CIDR block.
         */
        fun cidr(cidr: String): FluentBuilder
        /**
         * The description.
         */
        fun description(description: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The CIDR block.
         */
        var cidr: String?
        /**
         * The description.
         */
        var description: String?

        fun build(): PrefixListEntry
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var cidr: String? = null
        override var description: String? = null

        constructor(x: PrefixListEntry) : this() {
            this.cidr = x.cidr
            this.description = x.description
        }

        override fun build(): PrefixListEntry = PrefixListEntry(this)
        override fun cidr(cidr: String): FluentBuilder = apply { this.cidr = cidr }
        override fun description(description: String): FluentBuilder = apply { this.description = description }
    }
}
