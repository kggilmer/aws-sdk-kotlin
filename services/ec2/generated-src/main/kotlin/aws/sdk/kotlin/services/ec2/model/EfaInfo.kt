// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the Elastic Fabric Adapters for the instance type.
 */
class EfaInfo private constructor(builder: BuilderImpl) {
    /**
     * The maximum number of Elastic Fabric Adapters for the instance type.
     */
    val maximumEfaInterfaces: Int? = builder.maximumEfaInterfaces

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): EfaInfo = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("EfaInfo(")
        append("maximumEfaInterfaces=$maximumEfaInterfaces)")
    }

    override fun hashCode(): kotlin.Int {
        var result = maximumEfaInterfaces ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as EfaInfo

        if (maximumEfaInterfaces != other.maximumEfaInterfaces) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): EfaInfo = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): EfaInfo
        /**
         * The maximum number of Elastic Fabric Adapters for the instance type.
         */
        fun maximumEfaInterfaces(maximumEfaInterfaces: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The maximum number of Elastic Fabric Adapters for the instance type.
         */
        var maximumEfaInterfaces: Int?

        fun build(): EfaInfo
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var maximumEfaInterfaces: Int? = null

        constructor(x: EfaInfo) : this() {
            this.maximumEfaInterfaces = x.maximumEfaInterfaces
        }

        override fun build(): EfaInfo = EfaInfo(this)
        override fun maximumEfaInterfaces(maximumEfaInterfaces: Int): FluentBuilder = apply { this.maximumEfaInterfaces = maximumEfaInterfaces }
    }
}
