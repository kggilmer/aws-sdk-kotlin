// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a launch permission.
 */
class LaunchPermission private constructor(builder: BuilderImpl) {
    /**
     * The name of the group.
     */
    val group: PermissionGroup? = builder.group
    /**
     * The Amazon Web Services account ID.
     * Constraints: Up to 10 000 account IDs can be specified in a single request.
     */
    val userId: String? = builder.userId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LaunchPermission = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchPermission(")
        append("group=$group,")
        append("userId=$userId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = group?.hashCode() ?: 0
        result = 31 * result + (userId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LaunchPermission

        if (group != other.group) return false
        if (userId != other.userId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LaunchPermission = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LaunchPermission
        /**
         * The name of the group.
         */
        fun group(group: PermissionGroup): FluentBuilder
        /**
         * The Amazon Web Services account ID.
         * Constraints: Up to 10 000 account IDs can be specified in a single request.
         */
        fun userId(userId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the group.
         */
        var group: PermissionGroup?
        /**
         * The Amazon Web Services account ID.
         * Constraints: Up to 10 000 account IDs can be specified in a single request.
         */
        var userId: String?

        fun build(): LaunchPermission
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var group: PermissionGroup? = null
        override var userId: String? = null

        constructor(x: LaunchPermission) : this() {
            this.group = x.group
            this.userId = x.userId
        }

        override fun build(): LaunchPermission = LaunchPermission(this)
        override fun group(group: PermissionGroup): FluentBuilder = apply { this.group = group }
        override fun userId(userId: String): FluentBuilder = apply { this.userId = userId }
    }
}
