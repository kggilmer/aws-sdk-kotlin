// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateReplaceRootVolumeTaskResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the root volume replacement task.
     */
    val replaceRootVolumeTask: ReplaceRootVolumeTask? = builder.replaceRootVolumeTask

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateReplaceRootVolumeTaskResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateReplaceRootVolumeTaskResponse(")
        append("replaceRootVolumeTask=$replaceRootVolumeTask)")
    }

    override fun hashCode(): kotlin.Int {
        var result = replaceRootVolumeTask?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateReplaceRootVolumeTaskResponse

        if (replaceRootVolumeTask != other.replaceRootVolumeTask) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateReplaceRootVolumeTaskResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateReplaceRootVolumeTaskResponse
        /**
         * Information about the root volume replacement task.
         */
        fun replaceRootVolumeTask(replaceRootVolumeTask: ReplaceRootVolumeTask): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the root volume replacement task.
         */
        var replaceRootVolumeTask: ReplaceRootVolumeTask?

        fun build(): CreateReplaceRootVolumeTaskResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ReplaceRootVolumeTask] inside the given [block]
         */
        fun replaceRootVolumeTask(block: ReplaceRootVolumeTask.DslBuilder.() -> kotlin.Unit) {
            this.replaceRootVolumeTask = ReplaceRootVolumeTask.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var replaceRootVolumeTask: ReplaceRootVolumeTask? = null

        constructor(x: CreateReplaceRootVolumeTaskResponse) : this() {
            this.replaceRootVolumeTask = x.replaceRootVolumeTask
        }

        override fun build(): CreateReplaceRootVolumeTaskResponse = CreateReplaceRootVolumeTaskResponse(this)
        override fun replaceRootVolumeTask(replaceRootVolumeTask: ReplaceRootVolumeTask): FluentBuilder = apply { this.replaceRootVolumeTask = replaceRootVolumeTask }
    }
}
