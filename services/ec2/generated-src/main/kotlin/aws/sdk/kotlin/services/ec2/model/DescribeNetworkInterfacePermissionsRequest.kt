// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Contains the parameters for DescribeNetworkInterfacePermissions.
 */
class DescribeNetworkInterfacePermissionsRequest private constructor(builder: BuilderImpl) {
    /**
     * One or more filters.
     * network-interface-permission.network-interface-permission-id - The ID of the
     * permission.
     * network-interface-permission.network-interface-id - The ID of
     * the network interface.
     * network-interface-permission.aws-account-id - The Amazon Web Services account ID.
     * network-interface-permission.aws-service - The Amazon Web Service.
     * network-interface-permission.permission - The type of
     * permission (INSTANCE-ATTACH |
     * EIP-ASSOCIATE).
     */
    val filters: List<Filter>? = builder.filters
    /**
     * The maximum number of results to return in a single call. To retrieve the remaining results,
     * make another call with the returned NextToken value. If this parameter is not specified, up to 50 results are returned by default.
     */
    val maxResults: Int? = builder.maxResults
    /**
     * One or more network interface permission IDs.
     */
    val networkInterfacePermissionIds: List<String>? = builder.networkInterfacePermissionIds
    /**
     * The token to request the next page of results.
     */
    val nextToken: String? = builder.nextToken

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeNetworkInterfacePermissionsRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeNetworkInterfacePermissionsRequest(")
        append("filters=$filters,")
        append("maxResults=$maxResults,")
        append("networkInterfacePermissionIds=$networkInterfacePermissionIds,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = filters?.hashCode() ?: 0
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (networkInterfacePermissionIds?.hashCode() ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeNetworkInterfacePermissionsRequest

        if (filters != other.filters) return false
        if (maxResults != other.maxResults) return false
        if (networkInterfacePermissionIds != other.networkInterfacePermissionIds) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeNetworkInterfacePermissionsRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeNetworkInterfacePermissionsRequest
        /**
         * One or more filters.
         * network-interface-permission.network-interface-permission-id - The ID of the
         * permission.
         * network-interface-permission.network-interface-id - The ID of
         * the network interface.
         * network-interface-permission.aws-account-id - The Amazon Web Services account ID.
         * network-interface-permission.aws-service - The Amazon Web Service.
         * network-interface-permission.permission - The type of
         * permission (INSTANCE-ATTACH |
         * EIP-ASSOCIATE).
         */
        fun filters(filters: List<Filter>): FluentBuilder
        /**
         * The maximum number of results to return in a single call. To retrieve the remaining results,
         * make another call with the returned NextToken value. If this parameter is not specified, up to 50 results are returned by default.
         */
        fun maxResults(maxResults: Int): FluentBuilder
        /**
         * One or more network interface permission IDs.
         */
        fun networkInterfacePermissionIds(networkInterfacePermissionIds: List<String>): FluentBuilder
        /**
         * The token to request the next page of results.
         */
        fun nextToken(nextToken: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * One or more filters.
         * network-interface-permission.network-interface-permission-id - The ID of the
         * permission.
         * network-interface-permission.network-interface-id - The ID of
         * the network interface.
         * network-interface-permission.aws-account-id - The Amazon Web Services account ID.
         * network-interface-permission.aws-service - The Amazon Web Service.
         * network-interface-permission.permission - The type of
         * permission (INSTANCE-ATTACH |
         * EIP-ASSOCIATE).
         */
        var filters: List<Filter>?
        /**
         * The maximum number of results to return in a single call. To retrieve the remaining results,
         * make another call with the returned NextToken value. If this parameter is not specified, up to 50 results are returned by default.
         */
        var maxResults: Int?
        /**
         * One or more network interface permission IDs.
         */
        var networkInterfacePermissionIds: List<String>?
        /**
         * The token to request the next page of results.
         */
        var nextToken: String?

        fun build(): DescribeNetworkInterfacePermissionsRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var filters: List<Filter>? = null
        override var maxResults: Int? = null
        override var networkInterfacePermissionIds: List<String>? = null
        override var nextToken: String? = null

        constructor(x: DescribeNetworkInterfacePermissionsRequest) : this() {
            this.filters = x.filters
            this.maxResults = x.maxResults
            this.networkInterfacePermissionIds = x.networkInterfacePermissionIds
            this.nextToken = x.nextToken
        }

        override fun build(): DescribeNetworkInterfacePermissionsRequest = DescribeNetworkInterfacePermissionsRequest(this)
        override fun filters(filters: List<Filter>): FluentBuilder = apply { this.filters = filters }
        override fun maxResults(maxResults: Int): FluentBuilder = apply { this.maxResults = maxResults }
        override fun networkInterfacePermissionIds(networkInterfacePermissionIds: List<String>): FluentBuilder = apply { this.networkInterfacePermissionIds = networkInterfacePermissionIds }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
    }
}
