// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteTrafficMirrorFilterResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the Traffic Mirror filter.
     */
    val trafficMirrorFilterId: String? = builder.trafficMirrorFilterId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteTrafficMirrorFilterResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteTrafficMirrorFilterResponse(")
        append("trafficMirrorFilterId=$trafficMirrorFilterId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = trafficMirrorFilterId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteTrafficMirrorFilterResponse

        if (trafficMirrorFilterId != other.trafficMirrorFilterId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteTrafficMirrorFilterResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteTrafficMirrorFilterResponse
        /**
         * The ID of the Traffic Mirror filter.
         */
        fun trafficMirrorFilterId(trafficMirrorFilterId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the Traffic Mirror filter.
         */
        var trafficMirrorFilterId: String?

        fun build(): DeleteTrafficMirrorFilterResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var trafficMirrorFilterId: String? = null

        constructor(x: DeleteTrafficMirrorFilterResponse) : this() {
            this.trafficMirrorFilterId = x.trafficMirrorFilterId
        }

        override fun build(): DeleteTrafficMirrorFilterResponse = DeleteTrafficMirrorFilterResponse(this)
        override fun trafficMirrorFilterId(trafficMirrorFilterId: String): FluentBuilder = apply { this.trafficMirrorFilterId = trafficMirrorFilterId }
    }
}
