// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateVpcPeeringConnectionResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the VPC peering connection.
     */
    val vpcPeeringConnection: VpcPeeringConnection? = builder.vpcPeeringConnection

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateVpcPeeringConnectionResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateVpcPeeringConnectionResponse(")
        append("vpcPeeringConnection=$vpcPeeringConnection)")
    }

    override fun hashCode(): kotlin.Int {
        var result = vpcPeeringConnection?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateVpcPeeringConnectionResponse

        if (vpcPeeringConnection != other.vpcPeeringConnection) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateVpcPeeringConnectionResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateVpcPeeringConnectionResponse
        /**
         * Information about the VPC peering connection.
         */
        fun vpcPeeringConnection(vpcPeeringConnection: VpcPeeringConnection): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the VPC peering connection.
         */
        var vpcPeeringConnection: VpcPeeringConnection?

        fun build(): CreateVpcPeeringConnectionResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.VpcPeeringConnection] inside the given [block]
         */
        fun vpcPeeringConnection(block: VpcPeeringConnection.DslBuilder.() -> kotlin.Unit) {
            this.vpcPeeringConnection = VpcPeeringConnection.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var vpcPeeringConnection: VpcPeeringConnection? = null

        constructor(x: CreateVpcPeeringConnectionResponse) : this() {
            this.vpcPeeringConnection = x.vpcPeeringConnection
        }

        override fun build(): CreateVpcPeeringConnectionResponse = CreateVpcPeeringConnectionResponse(this)
        override fun vpcPeeringConnection(vpcPeeringConnection: VpcPeeringConnection): FluentBuilder = apply { this.vpcPeeringConnection = vpcPeeringConnection }
    }
}
