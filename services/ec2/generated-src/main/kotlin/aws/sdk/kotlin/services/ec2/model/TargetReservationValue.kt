// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The total value of the new Convertible Reserved Instances.
 */
class TargetReservationValue private constructor(builder: BuilderImpl) {
    /**
     * The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of
     * the list value, remaining upfront price, and additional upfront cost of the exchange.
     */
    val reservationValue: ReservationValue? = builder.reservationValue
    /**
     * The configuration of the Convertible Reserved Instances that make up the exchange.
     */
    val targetConfiguration: TargetConfiguration? = builder.targetConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TargetReservationValue = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TargetReservationValue(")
        append("reservationValue=$reservationValue,")
        append("targetConfiguration=$targetConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = reservationValue?.hashCode() ?: 0
        result = 31 * result + (targetConfiguration?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TargetReservationValue

        if (reservationValue != other.reservationValue) return false
        if (targetConfiguration != other.targetConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TargetReservationValue = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TargetReservationValue
        /**
         * The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of
         * the list value, remaining upfront price, and additional upfront cost of the exchange.
         */
        fun reservationValue(reservationValue: ReservationValue): FluentBuilder
        /**
         * The configuration of the Convertible Reserved Instances that make up the exchange.
         */
        fun targetConfiguration(targetConfiguration: TargetConfiguration): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of
         * the list value, remaining upfront price, and additional upfront cost of the exchange.
         */
        var reservationValue: ReservationValue?
        /**
         * The configuration of the Convertible Reserved Instances that make up the exchange.
         */
        var targetConfiguration: TargetConfiguration?

        fun build(): TargetReservationValue
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ReservationValue] inside the given [block]
         */
        fun reservationValue(block: ReservationValue.DslBuilder.() -> kotlin.Unit) {
            this.reservationValue = ReservationValue.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.TargetConfiguration] inside the given [block]
         */
        fun targetConfiguration(block: TargetConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.targetConfiguration = TargetConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var reservationValue: ReservationValue? = null
        override var targetConfiguration: TargetConfiguration? = null

        constructor(x: TargetReservationValue) : this() {
            this.reservationValue = x.reservationValue
            this.targetConfiguration = x.targetConfiguration
        }

        override fun build(): TargetReservationValue = TargetReservationValue(this)
        override fun reservationValue(reservationValue: ReservationValue): FluentBuilder = apply { this.reservationValue = reservationValue }
        override fun targetConfiguration(targetConfiguration: TargetConfiguration): FluentBuilder = apply { this.targetConfiguration = targetConfiguration }
    }
}
