// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ExportTransitGatewayRoutesResponse private constructor(builder: BuilderImpl) {
    /**
     * The URL of the exported file in Amazon S3. For example,
     * s3://bucket_name/VPCTransitGateway/TransitGatewayRouteTables/file_name.
     */
    val s3Location: String? = builder.s3Location

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ExportTransitGatewayRoutesResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ExportTransitGatewayRoutesResponse(")
        append("s3Location=$s3Location)")
    }

    override fun hashCode(): kotlin.Int {
        var result = s3Location?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExportTransitGatewayRoutesResponse

        if (s3Location != other.s3Location) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ExportTransitGatewayRoutesResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ExportTransitGatewayRoutesResponse
        /**
         * The URL of the exported file in Amazon S3. For example,
         * s3://bucket_name/VPCTransitGateway/TransitGatewayRouteTables/file_name.
         */
        fun s3Location(s3Location: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The URL of the exported file in Amazon S3. For example,
         * s3://bucket_name/VPCTransitGateway/TransitGatewayRouteTables/file_name.
         */
        var s3Location: String?

        fun build(): ExportTransitGatewayRoutesResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var s3Location: String? = null

        constructor(x: ExportTransitGatewayRoutesResponse) : this() {
            this.s3Location = x.s3Location
        }

        override fun build(): ExportTransitGatewayRoutesResponse = ExportTransitGatewayRoutesResponse(this)
        override fun s3Location(s3Location: String): FluentBuilder = apply { this.s3Location = s3Location }
    }
}
