// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a value of an account attribute.
 */
class AccountAttributeValue private constructor(builder: BuilderImpl) {
    /**
     * The value of the attribute.
     */
    val attributeValue: String? = builder.attributeValue

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AccountAttributeValue = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AccountAttributeValue(")
        append("attributeValue=$attributeValue)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attributeValue?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AccountAttributeValue

        if (attributeValue != other.attributeValue) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AccountAttributeValue = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AccountAttributeValue
        /**
         * The value of the attribute.
         */
        fun attributeValue(attributeValue: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The value of the attribute.
         */
        var attributeValue: String?

        fun build(): AccountAttributeValue
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var attributeValue: String? = null

        constructor(x: AccountAttributeValue) : this() {
            this.attributeValue = x.attributeValue
        }

        override fun build(): AccountAttributeValue = AccountAttributeValue(this)
        override fun attributeValue(attributeValue: String): FluentBuilder = apply { this.attributeValue = attributeValue }
    }
}
