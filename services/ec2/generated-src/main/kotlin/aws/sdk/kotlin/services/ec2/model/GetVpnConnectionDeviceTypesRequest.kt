// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class GetVpnConnectionDeviceTypesRequest private constructor(builder: BuilderImpl) {
    /**
     * Checks whether you have the required permissions for the action, without actually
     * making the request, and provides an error response. If you have the required
     * permissions, the error response is DryRunOperation. Otherwise, it is
     * UnauthorizedOperation.
     */
    val dryRun: Boolean? = builder.dryRun
    /**
     * The maximum number of results returned by GetVpnConnectionDeviceTypes in
     * paginated output. When this parameter is used, GetVpnConnectionDeviceTypes
     * only returns MaxResults results in a single page along with a
     * NextToken response element. The remaining results of the initial
     * request can be seen by sending another GetVpnConnectionDeviceTypes request
     * with the returned NextToken value. This value can be between 200 and 1000.
     * If this parameter is not used, then GetVpnConnectionDeviceTypes returns all
     * results.
     */
    val maxResults: Int? = builder.maxResults
    /**
     * The NextToken value returned from a previous paginated
     * GetVpnConnectionDeviceTypes request where MaxResults was
     * used and the results exceeded the value of that parameter. Pagination continues from the
     * end of the previous results that returned the NextToken value. This value
     * is null when there are no more results to return.
     */
    val nextToken: String? = builder.nextToken

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetVpnConnectionDeviceTypesRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetVpnConnectionDeviceTypesRequest(")
        append("dryRun=$dryRun,")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (maxResults ?: 0)
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetVpnConnectionDeviceTypesRequest

        if (dryRun != other.dryRun) return false
        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetVpnConnectionDeviceTypesRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetVpnConnectionDeviceTypesRequest
        /**
         * Checks whether you have the required permissions for the action, without actually
         * making the request, and provides an error response. If you have the required
         * permissions, the error response is DryRunOperation. Otherwise, it is
         * UnauthorizedOperation.
         */
        fun dryRun(dryRun: Boolean): FluentBuilder
        /**
         * The maximum number of results returned by GetVpnConnectionDeviceTypes in
         * paginated output. When this parameter is used, GetVpnConnectionDeviceTypes
         * only returns MaxResults results in a single page along with a
         * NextToken response element. The remaining results of the initial
         * request can be seen by sending another GetVpnConnectionDeviceTypes request
         * with the returned NextToken value. This value can be between 200 and 1000.
         * If this parameter is not used, then GetVpnConnectionDeviceTypes returns all
         * results.
         */
        fun maxResults(maxResults: Int): FluentBuilder
        /**
         * The NextToken value returned from a previous paginated
         * GetVpnConnectionDeviceTypes request where MaxResults was
         * used and the results exceeded the value of that parameter. Pagination continues from the
         * end of the previous results that returned the NextToken value. This value
         * is null when there are no more results to return.
         */
        fun nextToken(nextToken: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Checks whether you have the required permissions for the action, without actually
         * making the request, and provides an error response. If you have the required
         * permissions, the error response is DryRunOperation. Otherwise, it is
         * UnauthorizedOperation.
         */
        var dryRun: Boolean?
        /**
         * The maximum number of results returned by GetVpnConnectionDeviceTypes in
         * paginated output. When this parameter is used, GetVpnConnectionDeviceTypes
         * only returns MaxResults results in a single page along with a
         * NextToken response element. The remaining results of the initial
         * request can be seen by sending another GetVpnConnectionDeviceTypes request
         * with the returned NextToken value. This value can be between 200 and 1000.
         * If this parameter is not used, then GetVpnConnectionDeviceTypes returns all
         * results.
         */
        var maxResults: Int?
        /**
         * The NextToken value returned from a previous paginated
         * GetVpnConnectionDeviceTypes request where MaxResults was
         * used and the results exceeded the value of that parameter. Pagination continues from the
         * end of the previous results that returned the NextToken value. This value
         * is null when there are no more results to return.
         */
        var nextToken: String?

        fun build(): GetVpnConnectionDeviceTypesRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var dryRun: Boolean? = null
        override var maxResults: Int? = null
        override var nextToken: String? = null

        constructor(x: GetVpnConnectionDeviceTypesRequest) : this() {
            this.dryRun = x.dryRun
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
        }

        override fun build(): GetVpnConnectionDeviceTypesRequest = GetVpnConnectionDeviceTypesRequest(this)
        override fun dryRun(dryRun: Boolean): FluentBuilder = apply { this.dryRun = dryRun }
        override fun maxResults(maxResults: Int): FluentBuilder = apply { this.maxResults = maxResults }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
    }
}
