// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the limit price of a Reserved Instance offering.
 */
class ReservedInstanceLimitPrice private constructor(builder: BuilderImpl) {
    /**
     * Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
     */
    val amount: Double? = builder.amount
    /**
     * The currency in which the limitPrice amount is specified.
     * At this time, the only supported currency is USD.
     */
    val currencyCode: CurrencyCodeValues? = builder.currencyCode

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReservedInstanceLimitPrice = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReservedInstanceLimitPrice(")
        append("amount=$amount,")
        append("currencyCode=$currencyCode)")
    }

    override fun hashCode(): kotlin.Int {
        var result = amount?.hashCode() ?: 0
        result = 31 * result + (currencyCode?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReservedInstanceLimitPrice

        if (amount != other.amount) return false
        if (currencyCode != other.currencyCode) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReservedInstanceLimitPrice = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReservedInstanceLimitPrice
        /**
         * Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
         */
        fun amount(amount: Double): FluentBuilder
        /**
         * The currency in which the limitPrice amount is specified.
         * At this time, the only supported currency is USD.
         */
        fun currencyCode(currencyCode: CurrencyCodeValues): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
         */
        var amount: Double?
        /**
         * The currency in which the limitPrice amount is specified.
         * At this time, the only supported currency is USD.
         */
        var currencyCode: CurrencyCodeValues?

        fun build(): ReservedInstanceLimitPrice
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var amount: Double? = null
        override var currencyCode: CurrencyCodeValues? = null

        constructor(x: ReservedInstanceLimitPrice) : this() {
            this.amount = x.amount
            this.currencyCode = x.currencyCode
        }

        override fun build(): ReservedInstanceLimitPrice = ReservedInstanceLimitPrice(this)
        override fun amount(amount: Double): FluentBuilder = apply { this.amount = amount }
        override fun currencyCode(currencyCode: CurrencyCodeValues): FluentBuilder = apply { this.currencyCode = currencyCode }
    }
}
