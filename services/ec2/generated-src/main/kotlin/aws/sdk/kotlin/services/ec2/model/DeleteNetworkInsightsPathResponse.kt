// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteNetworkInsightsPathResponse private constructor(builder: BuilderImpl) {
    /**
     * The ID of the path.
     */
    val networkInsightsPathId: String? = builder.networkInsightsPathId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteNetworkInsightsPathResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteNetworkInsightsPathResponse(")
        append("networkInsightsPathId=$networkInsightsPathId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = networkInsightsPathId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteNetworkInsightsPathResponse

        if (networkInsightsPathId != other.networkInsightsPathId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteNetworkInsightsPathResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteNetworkInsightsPathResponse
        /**
         * The ID of the path.
         */
        fun networkInsightsPathId(networkInsightsPathId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the path.
         */
        var networkInsightsPathId: String?

        fun build(): DeleteNetworkInsightsPathResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var networkInsightsPathId: String? = null

        constructor(x: DeleteNetworkInsightsPathResponse) : this() {
            this.networkInsightsPathId = x.networkInsightsPathId
        }

        override fun build(): DeleteNetworkInsightsPathResponse = DeleteNetworkInsightsPathResponse(this)
        override fun networkInsightsPathId(networkInsightsPathId: String): FluentBuilder = apply { this.networkInsightsPathId = networkInsightsPathId }
    }
}
