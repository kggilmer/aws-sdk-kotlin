// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a launch template version that could not be deleted.
 */
class DeleteLaunchTemplateVersionsResponseErrorItem private constructor(builder: BuilderImpl) {
    /**
     * The ID of the launch template.
     */
    val launchTemplateId: String? = builder.launchTemplateId
    /**
     * The name of the launch template.
     */
    val launchTemplateName: String? = builder.launchTemplateName
    /**
     * Information about the error.
     */
    val responseError: ResponseError? = builder.responseError
    /**
     * The version number of the launch template.
     */
    val versionNumber: Long? = builder.versionNumber

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteLaunchTemplateVersionsResponseErrorItem = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteLaunchTemplateVersionsResponseErrorItem(")
        append("launchTemplateId=$launchTemplateId,")
        append("launchTemplateName=$launchTemplateName,")
        append("responseError=$responseError,")
        append("versionNumber=$versionNumber)")
    }

    override fun hashCode(): kotlin.Int {
        var result = launchTemplateId?.hashCode() ?: 0
        result = 31 * result + (launchTemplateName?.hashCode() ?: 0)
        result = 31 * result + (responseError?.hashCode() ?: 0)
        result = 31 * result + (versionNumber?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteLaunchTemplateVersionsResponseErrorItem

        if (launchTemplateId != other.launchTemplateId) return false
        if (launchTemplateName != other.launchTemplateName) return false
        if (responseError != other.responseError) return false
        if (versionNumber != other.versionNumber) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteLaunchTemplateVersionsResponseErrorItem = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteLaunchTemplateVersionsResponseErrorItem
        /**
         * The ID of the launch template.
         */
        fun launchTemplateId(launchTemplateId: String): FluentBuilder
        /**
         * The name of the launch template.
         */
        fun launchTemplateName(launchTemplateName: String): FluentBuilder
        /**
         * Information about the error.
         */
        fun responseError(responseError: ResponseError): FluentBuilder
        /**
         * The version number of the launch template.
         */
        fun versionNumber(versionNumber: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ID of the launch template.
         */
        var launchTemplateId: String?
        /**
         * The name of the launch template.
         */
        var launchTemplateName: String?
        /**
         * Information about the error.
         */
        var responseError: ResponseError?
        /**
         * The version number of the launch template.
         */
        var versionNumber: Long?

        fun build(): DeleteLaunchTemplateVersionsResponseErrorItem
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ResponseError] inside the given [block]
         */
        fun responseError(block: ResponseError.DslBuilder.() -> kotlin.Unit) {
            this.responseError = ResponseError.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var launchTemplateId: String? = null
        override var launchTemplateName: String? = null
        override var responseError: ResponseError? = null
        override var versionNumber: Long? = null

        constructor(x: DeleteLaunchTemplateVersionsResponseErrorItem) : this() {
            this.launchTemplateId = x.launchTemplateId
            this.launchTemplateName = x.launchTemplateName
            this.responseError = x.responseError
            this.versionNumber = x.versionNumber
        }

        override fun build(): DeleteLaunchTemplateVersionsResponseErrorItem = DeleteLaunchTemplateVersionsResponseErrorItem(this)
        override fun launchTemplateId(launchTemplateId: String): FluentBuilder = apply { this.launchTemplateId = launchTemplateId }
        override fun launchTemplateName(launchTemplateName: String): FluentBuilder = apply { this.launchTemplateName = launchTemplateName }
        override fun responseError(responseError: ResponseError): FluentBuilder = apply { this.responseError = responseError }
        override fun versionNumber(versionNumber: Long): FluentBuilder = apply { this.versionNumber = versionNumber }
    }
}
