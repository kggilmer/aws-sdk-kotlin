// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateNetworkInsightsPathResponse private constructor(builder: BuilderImpl) {
    /**
     * Information about the path.
     */
    val networkInsightsPath: NetworkInsightsPath? = builder.networkInsightsPath

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateNetworkInsightsPathResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateNetworkInsightsPathResponse(")
        append("networkInsightsPath=$networkInsightsPath)")
    }

    override fun hashCode(): kotlin.Int {
        var result = networkInsightsPath?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateNetworkInsightsPathResponse

        if (networkInsightsPath != other.networkInsightsPath) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateNetworkInsightsPathResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateNetworkInsightsPathResponse
        /**
         * Information about the path.
         */
        fun networkInsightsPath(networkInsightsPath: NetworkInsightsPath): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Information about the path.
         */
        var networkInsightsPath: NetworkInsightsPath?

        fun build(): CreateNetworkInsightsPathResponse
        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.NetworkInsightsPath] inside the given [block]
         */
        fun networkInsightsPath(block: NetworkInsightsPath.DslBuilder.() -> kotlin.Unit) {
            this.networkInsightsPath = NetworkInsightsPath.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var networkInsightsPath: NetworkInsightsPath? = null

        constructor(x: CreateNetworkInsightsPathResponse) : this() {
            this.networkInsightsPath = x.networkInsightsPath
        }

        override fun build(): CreateNetworkInsightsPathResponse = CreateNetworkInsightsPathResponse(this)
        override fun networkInsightsPath(networkInsightsPath: NetworkInsightsPath): FluentBuilder = apply { this.networkInsightsPath = networkInsightsPath }
    }
}
