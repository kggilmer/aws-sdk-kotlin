// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.polly.model

import aws.smithy.kotlin.runtime.content.ByteStream

class SynthesizeSpeechResponse private constructor(builder: BuilderImpl) {
    /**
     * Stream containing the synthesized speech.
     */
    val audioStream: ByteStream? = builder.audioStream
    /**
     * Specifies the type audio stream. This should reflect the
     * OutputFormat parameter in your request.
     * If you request mp3 as the
     * OutputFormat, the ContentType returned is
     * audio/mpeg.
     * If you request ogg_vorbis as the
     * OutputFormat, the ContentType returned is
     * audio/ogg.
     * If you request pcm as the
     * OutputFormat, the ContentType returned is
     * audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format.
     * If you request json as the
     * OutputFormat, the ContentType returned is
     * audio/json.
     */
    val contentType: String? = builder.contentType
    /**
     * Number of characters synthesized.
     */
    val requestCharacters: Int = builder.requestCharacters

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): SynthesizeSpeechResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("SynthesizeSpeechResponse(")
        append("audioStream=$audioStream,")
        append("contentType=$contentType,")
        append("requestCharacters=$requestCharacters)")
    }

    override fun hashCode(): kotlin.Int {
        var result = audioStream?.hashCode() ?: 0
        result = 31 * result + (contentType?.hashCode() ?: 0)
        result = 31 * result + (requestCharacters)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as SynthesizeSpeechResponse

        if (audioStream != other.audioStream) return false
        if (contentType != other.contentType) return false
        if (requestCharacters != other.requestCharacters) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): SynthesizeSpeechResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): SynthesizeSpeechResponse
        /**
         * Stream containing the synthesized speech.
         */
        fun audioStream(audioStream: ByteStream): FluentBuilder
        /**
         * Specifies the type audio stream. This should reflect the
         * OutputFormat parameter in your request.
         * If you request mp3 as the
         * OutputFormat, the ContentType returned is
         * audio/mpeg.
         * If you request ogg_vorbis as the
         * OutputFormat, the ContentType returned is
         * audio/ogg.
         * If you request pcm as the
         * OutputFormat, the ContentType returned is
         * audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format.
         * If you request json as the
         * OutputFormat, the ContentType returned is
         * audio/json.
         */
        fun contentType(contentType: String): FluentBuilder
        /**
         * Number of characters synthesized.
         */
        fun requestCharacters(requestCharacters: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Stream containing the synthesized speech.
         */
        var audioStream: ByteStream?
        /**
         * Specifies the type audio stream. This should reflect the
         * OutputFormat parameter in your request.
         * If you request mp3 as the
         * OutputFormat, the ContentType returned is
         * audio/mpeg.
         * If you request ogg_vorbis as the
         * OutputFormat, the ContentType returned is
         * audio/ogg.
         * If you request pcm as the
         * OutputFormat, the ContentType returned is
         * audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format.
         * If you request json as the
         * OutputFormat, the ContentType returned is
         * audio/json.
         */
        var contentType: String?
        /**
         * Number of characters synthesized.
         */
        var requestCharacters: Int

        fun build(): SynthesizeSpeechResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var audioStream: ByteStream? = null
        override var contentType: String? = null
        override var requestCharacters: Int = 0

        constructor(x: SynthesizeSpeechResponse) : this() {
            this.audioStream = x.audioStream
            this.contentType = x.contentType
            this.requestCharacters = x.requestCharacters
        }

        override fun build(): SynthesizeSpeechResponse = SynthesizeSpeechResponse(this)
        override fun audioStream(audioStream: ByteStream): FluentBuilder = apply { this.audioStream = audioStream }
        override fun contentType(contentType: String): FluentBuilder = apply { this.contentType = contentType }
        override fun requestCharacters(requestCharacters: Int): FluentBuilder = apply { this.requestCharacters = requestCharacters }
    }
}
