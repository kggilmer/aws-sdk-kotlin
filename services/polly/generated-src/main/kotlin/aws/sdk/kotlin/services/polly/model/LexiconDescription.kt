// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.polly.model



/**
 * Describes the content of the lexicon.
 */
class LexiconDescription private constructor(builder: BuilderImpl) {
    /**
     * Provides lexicon metadata.
     */
    val attributes: LexiconAttributes? = builder.attributes
    /**
     * Name of the lexicon.
     */
    val name: String? = builder.name

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): LexiconDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("LexiconDescription(")
        append("attributes=$attributes,")
        append("name=$name)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attributes?.hashCode() ?: 0
        result = 31 * result + (name?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as LexiconDescription

        if (attributes != other.attributes) return false
        if (name != other.name) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): LexiconDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): LexiconDescription
        /**
         * Provides lexicon metadata.
         */
        fun attributes(attributes: LexiconAttributes): FluentBuilder
        /**
         * Name of the lexicon.
         */
        fun name(name: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Provides lexicon metadata.
         */
        var attributes: LexiconAttributes?
        /**
         * Name of the lexicon.
         */
        var name: String?

        fun build(): LexiconDescription
        /**
         * construct an [aws.sdk.kotlin.services.polly.model.LexiconAttributes] inside the given [block]
         */
        fun attributes(block: LexiconAttributes.DslBuilder.() -> kotlin.Unit) {
            this.attributes = LexiconAttributes.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var attributes: LexiconAttributes? = null
        override var name: String? = null

        constructor(x: LexiconDescription) : this() {
            this.attributes = x.attributes
            this.name = x.name
        }

        override fun build(): LexiconDescription = LexiconDescription(this)
        override fun attributes(attributes: LexiconAttributes): FluentBuilder = apply { this.attributes = attributes }
        override fun name(name: String): FluentBuilder = apply { this.name = name }
    }
}
