// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.polly.model



class ListLexiconsResponse private constructor(builder: BuilderImpl) {
    /**
     * A list of lexicon names and attributes.
     */
    val lexicons: List<LexiconDescription>? = builder.lexicons
    /**
     * The pagination token to use in the next request to continue the
     * listing of lexicons. NextToken is returned only if the
     * response is truncated.
     */
    val nextToken: String? = builder.nextToken

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ListLexiconsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ListLexiconsResponse(")
        append("lexicons=$lexicons,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = lexicons?.hashCode() ?: 0
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ListLexiconsResponse

        if (lexicons != other.lexicons) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ListLexiconsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ListLexiconsResponse
        /**
         * A list of lexicon names and attributes.
         */
        fun lexicons(lexicons: List<LexiconDescription>): FluentBuilder
        /**
         * The pagination token to use in the next request to continue the
         * listing of lexicons. NextToken is returned only if the
         * response is truncated.
         */
        fun nextToken(nextToken: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A list of lexicon names and attributes.
         */
        var lexicons: List<LexiconDescription>?
        /**
         * The pagination token to use in the next request to continue the
         * listing of lexicons. NextToken is returned only if the
         * response is truncated.
         */
        var nextToken: String?

        fun build(): ListLexiconsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var lexicons: List<LexiconDescription>? = null
        override var nextToken: String? = null

        constructor(x: ListLexiconsResponse) : this() {
            this.lexicons = x.lexicons
            this.nextToken = x.nextToken
        }

        override fun build(): ListLexiconsResponse = ListLexiconsResponse(this)
        override fun lexicons(lexicons: List<LexiconDescription>): FluentBuilder = apply { this.lexicons = lexicons }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
    }
}
