// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.polly.model



class ListSpeechSynthesisTasksRequest private constructor(builder: BuilderImpl) {
    /**
     * Maximum number of speech synthesis tasks returned in a List
     * operation.
     */
    val maxResults: Int? = builder.maxResults
    /**
     * The pagination token to use in the next request to continue the
     * listing of speech synthesis tasks.
     */
    val nextToken: String? = builder.nextToken
    /**
     * Status of the speech synthesis tasks returned in a List
     * operation
     */
    val status: TaskStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ListSpeechSynthesisTasksRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ListSpeechSynthesisTasksRequest(")
        append("maxResults=$maxResults,")
        append("nextToken=$nextToken,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = maxResults ?: 0
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ListSpeechSynthesisTasksRequest

        if (maxResults != other.maxResults) return false
        if (nextToken != other.nextToken) return false
        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ListSpeechSynthesisTasksRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ListSpeechSynthesisTasksRequest
        /**
         * Maximum number of speech synthesis tasks returned in a List
         * operation.
         */
        fun maxResults(maxResults: Int): FluentBuilder
        /**
         * The pagination token to use in the next request to continue the
         * listing of speech synthesis tasks.
         */
        fun nextToken(nextToken: String): FluentBuilder
        /**
         * Status of the speech synthesis tasks returned in a List
         * operation
         */
        fun status(status: TaskStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Maximum number of speech synthesis tasks returned in a List
         * operation.
         */
        var maxResults: Int?
        /**
         * The pagination token to use in the next request to continue the
         * listing of speech synthesis tasks.
         */
        var nextToken: String?
        /**
         * Status of the speech synthesis tasks returned in a List
         * operation
         */
        var status: TaskStatus?

        fun build(): ListSpeechSynthesisTasksRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var maxResults: Int? = null
        override var nextToken: String? = null
        override var status: TaskStatus? = null

        constructor(x: ListSpeechSynthesisTasksRequest) : this() {
            this.maxResults = x.maxResults
            this.nextToken = x.nextToken
            this.status = x.status
        }

        override fun build(): ListSpeechSynthesisTasksRequest = ListSpeechSynthesisTasksRequest(this)
        override fun maxResults(maxResults: Int): FluentBuilder = apply { this.maxResults = maxResults }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
        override fun status(status: TaskStatus): FluentBuilder = apply { this.status = status }
    }
}
