// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
 */
class Projection private constructor(builder: BuilderImpl) {
    /**
     * Represents the non-key attribute names which will be projected into the index.
     * For local secondary indexes, the total count of NonKeyAttributes summed across all of the local secondary indexes,
     * must not exceed 20. If you project the same attribute into two
     * different indexes, this counts as two distinct attributes when determining the total.
     */
    val nonKeyAttributes: List<String>? = builder.nonKeyAttributes
    /**
     * The set of attributes that are projected into the index:
     * KEYS_ONLY - Only the index and primary keys are projected into the
     * index.
     * INCLUDE - In addition to the attributes described in KEYS_ONLY, the secondary index will include other non-key attributes that you specify.
     * ALL - All of the table attributes are projected into the index.
     */
    val projectionType: ProjectionType? = builder.projectionType

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Projection = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Projection(")
        append("nonKeyAttributes=$nonKeyAttributes,")
        append("projectionType=$projectionType)")
    }

    override fun hashCode(): kotlin.Int {
        var result = nonKeyAttributes?.hashCode() ?: 0
        result = 31 * result + (projectionType?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Projection

        if (nonKeyAttributes != other.nonKeyAttributes) return false
        if (projectionType != other.projectionType) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Projection = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Projection
        /**
         * Represents the non-key attribute names which will be projected into the index.
         * For local secondary indexes, the total count of NonKeyAttributes summed across all of the local secondary indexes,
         * must not exceed 20. If you project the same attribute into two
         * different indexes, this counts as two distinct attributes when determining the total.
         */
        fun nonKeyAttributes(nonKeyAttributes: List<String>): FluentBuilder
        /**
         * The set of attributes that are projected into the index:
         * KEYS_ONLY - Only the index and primary keys are projected into the
         * index.
         * INCLUDE - In addition to the attributes described in KEYS_ONLY, the secondary index will include other non-key attributes that you specify.
         * ALL - All of the table attributes are projected into the index.
         */
        fun projectionType(projectionType: ProjectionType): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Represents the non-key attribute names which will be projected into the index.
         * For local secondary indexes, the total count of NonKeyAttributes summed across all of the local secondary indexes,
         * must not exceed 20. If you project the same attribute into two
         * different indexes, this counts as two distinct attributes when determining the total.
         */
        var nonKeyAttributes: List<String>?
        /**
         * The set of attributes that are projected into the index:
         * KEYS_ONLY - Only the index and primary keys are projected into the
         * index.
         * INCLUDE - In addition to the attributes described in KEYS_ONLY, the secondary index will include other non-key attributes that you specify.
         * ALL - All of the table attributes are projected into the index.
         */
        var projectionType: ProjectionType?

        fun build(): Projection
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var nonKeyAttributes: List<String>? = null
        override var projectionType: ProjectionType? = null

        constructor(x: Projection) : this() {
            this.nonKeyAttributes = x.nonKeyAttributes
            this.projectionType = x.projectionType
        }

        override fun build(): Projection = Projection(this)
        override fun nonKeyAttributes(nonKeyAttributes: List<String>): FluentBuilder = apply { this.nonKeyAttributes = nonKeyAttributes }
        override fun projectionType(projectionType: ProjectionType): FluentBuilder = apply { this.projectionType = projectionType }
    }
}
