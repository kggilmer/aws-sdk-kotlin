// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the properties of the scaling policy.
 */
class AutoScalingPolicyDescription private constructor(builder: BuilderImpl) {
    /**
     * The name of the scaling policy.
     */
    val policyName: String? = builder.policyName
    /**
     * Represents a target tracking scaling policy configuration.
     */
    val targetTrackingScalingPolicyConfiguration: AutoScalingTargetTrackingScalingPolicyConfigurationDescription? = builder.targetTrackingScalingPolicyConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AutoScalingPolicyDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AutoScalingPolicyDescription(")
        append("policyName=$policyName,")
        append("targetTrackingScalingPolicyConfiguration=$targetTrackingScalingPolicyConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = policyName?.hashCode() ?: 0
        result = 31 * result + (targetTrackingScalingPolicyConfiguration?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AutoScalingPolicyDescription

        if (policyName != other.policyName) return false
        if (targetTrackingScalingPolicyConfiguration != other.targetTrackingScalingPolicyConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AutoScalingPolicyDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AutoScalingPolicyDescription
        /**
         * The name of the scaling policy.
         */
        fun policyName(policyName: String): FluentBuilder
        /**
         * Represents a target tracking scaling policy configuration.
         */
        fun targetTrackingScalingPolicyConfiguration(targetTrackingScalingPolicyConfiguration: AutoScalingTargetTrackingScalingPolicyConfigurationDescription): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the scaling policy.
         */
        var policyName: String?
        /**
         * Represents a target tracking scaling policy configuration.
         */
        var targetTrackingScalingPolicyConfiguration: AutoScalingTargetTrackingScalingPolicyConfigurationDescription?

        fun build(): AutoScalingPolicyDescription
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingTargetTrackingScalingPolicyConfigurationDescription] inside the given [block]
         */
        fun targetTrackingScalingPolicyConfiguration(block: AutoScalingTargetTrackingScalingPolicyConfigurationDescription.DslBuilder.() -> kotlin.Unit) {
            this.targetTrackingScalingPolicyConfiguration = AutoScalingTargetTrackingScalingPolicyConfigurationDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var policyName: String? = null
        override var targetTrackingScalingPolicyConfiguration: AutoScalingTargetTrackingScalingPolicyConfigurationDescription? = null

        constructor(x: AutoScalingPolicyDescription) : this() {
            this.policyName = x.policyName
            this.targetTrackingScalingPolicyConfiguration = x.targetTrackingScalingPolicyConfiguration
        }

        override fun build(): AutoScalingPolicyDescription = AutoScalingPolicyDescription(this)
        override fun policyName(policyName: String): FluentBuilder = apply { this.policyName = policyName }
        override fun targetTrackingScalingPolicyConfiguration(targetTrackingScalingPolicyConfiguration: AutoScalingTargetTrackingScalingPolicyConfigurationDescription): FluentBuilder = apply { this.targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfiguration }
    }
}
