// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the continuous backups and point in time recovery settings on the table.
 */
class ContinuousBackupsDescription private constructor(builder: BuilderImpl) {
    /**
     * ContinuousBackupsStatus can be one of the following states: ENABLED,
     * DISABLED
     */
    val continuousBackupsStatus: ContinuousBackupsStatus? = builder.continuousBackupsStatus
    /**
     * The description of the point in time recovery settings applied to the table.
     */
    val pointInTimeRecoveryDescription: PointInTimeRecoveryDescription? = builder.pointInTimeRecoveryDescription

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ContinuousBackupsDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ContinuousBackupsDescription(")
        append("continuousBackupsStatus=$continuousBackupsStatus,")
        append("pointInTimeRecoveryDescription=$pointInTimeRecoveryDescription)")
    }

    override fun hashCode(): kotlin.Int {
        var result = continuousBackupsStatus?.hashCode() ?: 0
        result = 31 * result + (pointInTimeRecoveryDescription?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ContinuousBackupsDescription

        if (continuousBackupsStatus != other.continuousBackupsStatus) return false
        if (pointInTimeRecoveryDescription != other.pointInTimeRecoveryDescription) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ContinuousBackupsDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ContinuousBackupsDescription
        /**
         * ContinuousBackupsStatus can be one of the following states: ENABLED,
         * DISABLED
         */
        fun continuousBackupsStatus(continuousBackupsStatus: ContinuousBackupsStatus): FluentBuilder
        /**
         * The description of the point in time recovery settings applied to the table.
         */
        fun pointInTimeRecoveryDescription(pointInTimeRecoveryDescription: PointInTimeRecoveryDescription): FluentBuilder
    }

    interface DslBuilder {
        /**
         * ContinuousBackupsStatus can be one of the following states: ENABLED,
         * DISABLED
         */
        var continuousBackupsStatus: ContinuousBackupsStatus?
        /**
         * The description of the point in time recovery settings applied to the table.
         */
        var pointInTimeRecoveryDescription: PointInTimeRecoveryDescription?

        fun build(): ContinuousBackupsDescription
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.PointInTimeRecoveryDescription] inside the given [block]
         */
        fun pointInTimeRecoveryDescription(block: PointInTimeRecoveryDescription.DslBuilder.() -> kotlin.Unit) {
            this.pointInTimeRecoveryDescription = PointInTimeRecoveryDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var continuousBackupsStatus: ContinuousBackupsStatus? = null
        override var pointInTimeRecoveryDescription: PointInTimeRecoveryDescription? = null

        constructor(x: ContinuousBackupsDescription) : this() {
            this.continuousBackupsStatus = x.continuousBackupsStatus
            this.pointInTimeRecoveryDescription = x.pointInTimeRecoveryDescription
        }

        override fun build(): ContinuousBackupsDescription = ContinuousBackupsDescription(this)
        override fun continuousBackupsStatus(continuousBackupsStatus: ContinuousBackupsStatus): FluentBuilder = apply { this.continuousBackupsStatus = continuousBackupsStatus }
        override fun pointInTimeRecoveryDescription(pointInTimeRecoveryDescription: PointInTimeRecoveryDescription): FluentBuilder = apply { this.pointInTimeRecoveryDescription = pointInTimeRecoveryDescription }
    }
}
