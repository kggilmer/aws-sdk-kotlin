// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class TransactGetItemsResponse private constructor(builder: BuilderImpl) {
    /**
     * If the ReturnConsumedCapacity value was TOTAL,
     * this is an array of ConsumedCapacity objects, one for each table
     * addressed by TransactGetItem objects in the TransactItems
     * parameter. These ConsumedCapacity objects report the read-capacity
     * units consumed by the TransactGetItems call in that table.
     */
    val consumedCapacity: List<ConsumedCapacity>? = builder.consumedCapacity
    /**
     * An ordered array of up to 25 ItemResponse objects, each of which corresponds
     * to the TransactGetItem object in the same position in the
     * TransactItems array. Each ItemResponse object
     * contains a Map of the name-value pairs that are the projected attributes of
     * the requested item.
     * If a requested item could not be retrieved, the corresponding ItemResponse
     * object is Null, or if the requested item has no projected attributes, the corresponding
     * ItemResponse object is an empty Map.
     */
    val responses: List<ItemResponse>? = builder.responses

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TransactGetItemsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TransactGetItemsResponse(")
        append("consumedCapacity=$consumedCapacity,")
        append("responses=$responses)")
    }

    override fun hashCode(): kotlin.Int {
        var result = consumedCapacity?.hashCode() ?: 0
        result = 31 * result + (responses?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TransactGetItemsResponse

        if (consumedCapacity != other.consumedCapacity) return false
        if (responses != other.responses) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TransactGetItemsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TransactGetItemsResponse
        /**
         * If the ReturnConsumedCapacity value was TOTAL,
         * this is an array of ConsumedCapacity objects, one for each table
         * addressed by TransactGetItem objects in the TransactItems
         * parameter. These ConsumedCapacity objects report the read-capacity
         * units consumed by the TransactGetItems call in that table.
         */
        fun consumedCapacity(consumedCapacity: List<ConsumedCapacity>): FluentBuilder
        /**
         * An ordered array of up to 25 ItemResponse objects, each of which corresponds
         * to the TransactGetItem object in the same position in the
         * TransactItems array. Each ItemResponse object
         * contains a Map of the name-value pairs that are the projected attributes of
         * the requested item.
         * If a requested item could not be retrieved, the corresponding ItemResponse
         * object is Null, or if the requested item has no projected attributes, the corresponding
         * ItemResponse object is an empty Map.
         */
        fun responses(responses: List<ItemResponse>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * If the ReturnConsumedCapacity value was TOTAL,
         * this is an array of ConsumedCapacity objects, one for each table
         * addressed by TransactGetItem objects in the TransactItems
         * parameter. These ConsumedCapacity objects report the read-capacity
         * units consumed by the TransactGetItems call in that table.
         */
        var consumedCapacity: List<ConsumedCapacity>?
        /**
         * An ordered array of up to 25 ItemResponse objects, each of which corresponds
         * to the TransactGetItem object in the same position in the
         * TransactItems array. Each ItemResponse object
         * contains a Map of the name-value pairs that are the projected attributes of
         * the requested item.
         * If a requested item could not be retrieved, the corresponding ItemResponse
         * object is Null, or if the requested item has no projected attributes, the corresponding
         * ItemResponse object is an empty Map.
         */
        var responses: List<ItemResponse>?

        fun build(): TransactGetItemsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var consumedCapacity: List<ConsumedCapacity>? = null
        override var responses: List<ItemResponse>? = null

        constructor(x: TransactGetItemsResponse) : this() {
            this.consumedCapacity = x.consumedCapacity
            this.responses = x.responses
        }

        override fun build(): TransactGetItemsResponse = TransactGetItemsResponse(this)
        override fun consumedCapacity(consumedCapacity: List<ConsumedCapacity>): FluentBuilder = apply { this.consumedCapacity = consumedCapacity }
        override fun responses(responses: List<ItemResponse>): FluentBuilder = apply { this.responses = responses }
    }
}
