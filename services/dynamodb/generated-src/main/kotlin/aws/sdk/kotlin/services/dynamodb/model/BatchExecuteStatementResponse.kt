// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class BatchExecuteStatementResponse private constructor(builder: BuilderImpl) {
    /**
     * The response to each PartiQL statement in the batch.
     */
    val responses: List<BatchStatementResponse>? = builder.responses

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): BatchExecuteStatementResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("BatchExecuteStatementResponse(")
        append("responses=$responses)")
    }

    override fun hashCode(): kotlin.Int {
        var result = responses?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as BatchExecuteStatementResponse

        if (responses != other.responses) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): BatchExecuteStatementResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): BatchExecuteStatementResponse
        /**
         * The response to each PartiQL statement in the batch.
         */
        fun responses(responses: List<BatchStatementResponse>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The response to each PartiQL statement in the batch.
         */
        var responses: List<BatchStatementResponse>?

        fun build(): BatchExecuteStatementResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var responses: List<BatchStatementResponse>? = null

        constructor(x: BatchExecuteStatementResponse) : this() {
            this.responses = x.responses
        }

        override fun build(): BatchExecuteStatementResponse = BatchExecuteStatementResponse(this)
        override fun responses(responses: List<BatchStatementResponse>): FluentBuilder = apply { this.responses = responses }
    }
}
