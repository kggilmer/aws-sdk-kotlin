// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the output of a DeleteTable operation.
 */
class DeleteTableResponse private constructor(builder: BuilderImpl) {
    /**
     * Represents the properties of a table.
     */
    val tableDescription: TableDescription? = builder.tableDescription

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteTableResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteTableResponse(")
        append("tableDescription=$tableDescription)")
    }

    override fun hashCode(): kotlin.Int {
        var result = tableDescription?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteTableResponse

        if (tableDescription != other.tableDescription) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteTableResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteTableResponse
        /**
         * Represents the properties of a table.
         */
        fun tableDescription(tableDescription: TableDescription): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Represents the properties of a table.
         */
        var tableDescription: TableDescription?

        fun build(): DeleteTableResponse
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.TableDescription] inside the given [block]
         */
        fun tableDescription(block: TableDescription.DslBuilder.() -> kotlin.Unit) {
            this.tableDescription = TableDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var tableDescription: TableDescription? = null

        constructor(x: DeleteTableResponse) : this() {
            this.tableDescription = x.tableDescription
        }

        override fun build(): DeleteTableResponse = DeleteTableResponse(this)
        override fun tableDescription(tableDescription: TableDescription): FluentBuilder = apply { this.tableDescription = tableDescription }
    }
}
