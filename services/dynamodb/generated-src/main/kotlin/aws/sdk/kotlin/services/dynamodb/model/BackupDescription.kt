// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Contains the description of the backup created for the table.
 */
class BackupDescription private constructor(builder: BuilderImpl) {
    /**
     * Contains the details of the backup created for the table.
     */
    val backupDetails: BackupDetails? = builder.backupDetails
    /**
     * Contains the details of the table when the backup was created.
     */
    val sourceTableDetails: SourceTableDetails? = builder.sourceTableDetails
    /**
     * Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.
     */
    val sourceTableFeatureDetails: SourceTableFeatureDetails? = builder.sourceTableFeatureDetails

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): BackupDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("BackupDescription(")
        append("backupDetails=$backupDetails,")
        append("sourceTableDetails=$sourceTableDetails,")
        append("sourceTableFeatureDetails=$sourceTableFeatureDetails)")
    }

    override fun hashCode(): kotlin.Int {
        var result = backupDetails?.hashCode() ?: 0
        result = 31 * result + (sourceTableDetails?.hashCode() ?: 0)
        result = 31 * result + (sourceTableFeatureDetails?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as BackupDescription

        if (backupDetails != other.backupDetails) return false
        if (sourceTableDetails != other.sourceTableDetails) return false
        if (sourceTableFeatureDetails != other.sourceTableFeatureDetails) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): BackupDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): BackupDescription
        /**
         * Contains the details of the backup created for the table.
         */
        fun backupDetails(backupDetails: BackupDetails): FluentBuilder
        /**
         * Contains the details of the table when the backup was created.
         */
        fun sourceTableDetails(sourceTableDetails: SourceTableDetails): FluentBuilder
        /**
         * Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.
         */
        fun sourceTableFeatureDetails(sourceTableFeatureDetails: SourceTableFeatureDetails): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Contains the details of the backup created for the table.
         */
        var backupDetails: BackupDetails?
        /**
         * Contains the details of the table when the backup was created.
         */
        var sourceTableDetails: SourceTableDetails?
        /**
         * Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.
         */
        var sourceTableFeatureDetails: SourceTableFeatureDetails?

        fun build(): BackupDescription
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.BackupDetails] inside the given [block]
         */
        fun backupDetails(block: BackupDetails.DslBuilder.() -> kotlin.Unit) {
            this.backupDetails = BackupDetails.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.SourceTableDetails] inside the given [block]
         */
        fun sourceTableDetails(block: SourceTableDetails.DslBuilder.() -> kotlin.Unit) {
            this.sourceTableDetails = SourceTableDetails.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.SourceTableFeatureDetails] inside the given [block]
         */
        fun sourceTableFeatureDetails(block: SourceTableFeatureDetails.DslBuilder.() -> kotlin.Unit) {
            this.sourceTableFeatureDetails = SourceTableFeatureDetails.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var backupDetails: BackupDetails? = null
        override var sourceTableDetails: SourceTableDetails? = null
        override var sourceTableFeatureDetails: SourceTableFeatureDetails? = null

        constructor(x: BackupDescription) : this() {
            this.backupDetails = x.backupDetails
            this.sourceTableDetails = x.sourceTableDetails
            this.sourceTableFeatureDetails = x.sourceTableFeatureDetails
        }

        override fun build(): BackupDescription = BackupDescription(this)
        override fun backupDetails(backupDetails: BackupDetails): FluentBuilder = apply { this.backupDetails = backupDetails }
        override fun sourceTableDetails(sourceTableDetails: SourceTableDetails): FluentBuilder = apply { this.sourceTableDetails = sourceTableDetails }
        override fun sourceTableFeatureDetails(sourceTableFeatureDetails: SourceTableFeatureDetails): FluentBuilder = apply { this.sourceTableFeatureDetails = sourceTableFeatureDetails }
    }
}
