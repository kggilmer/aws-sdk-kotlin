// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the settings of a global secondary index for a global table that will be modified.
 */
class ReplicaGlobalSecondaryIndexSettingsUpdate private constructor(builder: BuilderImpl) {
    /**
     * The name of the global secondary index. The name must be unique among all other indexes on this table.
     */
    val indexName: String? = builder.indexName
    /**
     * Auto scaling settings for managing a global secondary index replica's read capacity
     * units.
     */
    val provisionedReadCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate? = builder.provisionedReadCapacityAutoScalingSettingsUpdate
    /**
     * The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
     */
    val provisionedReadCapacityUnits: Long? = builder.provisionedReadCapacityUnits

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicaGlobalSecondaryIndexSettingsUpdate = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicaGlobalSecondaryIndexSettingsUpdate(")
        append("indexName=$indexName,")
        append("provisionedReadCapacityAutoScalingSettingsUpdate=$provisionedReadCapacityAutoScalingSettingsUpdate,")
        append("provisionedReadCapacityUnits=$provisionedReadCapacityUnits)")
    }

    override fun hashCode(): kotlin.Int {
        var result = indexName?.hashCode() ?: 0
        result = 31 * result + (provisionedReadCapacityAutoScalingSettingsUpdate?.hashCode() ?: 0)
        result = 31 * result + (provisionedReadCapacityUnits?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicaGlobalSecondaryIndexSettingsUpdate

        if (indexName != other.indexName) return false
        if (provisionedReadCapacityAutoScalingSettingsUpdate != other.provisionedReadCapacityAutoScalingSettingsUpdate) return false
        if (provisionedReadCapacityUnits != other.provisionedReadCapacityUnits) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicaGlobalSecondaryIndexSettingsUpdate = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicaGlobalSecondaryIndexSettingsUpdate
        /**
         * The name of the global secondary index. The name must be unique among all other indexes on this table.
         */
        fun indexName(indexName: String): FluentBuilder
        /**
         * Auto scaling settings for managing a global secondary index replica's read capacity
         * units.
         */
        fun provisionedReadCapacityAutoScalingSettingsUpdate(provisionedReadCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate): FluentBuilder
        /**
         * The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
         */
        fun provisionedReadCapacityUnits(provisionedReadCapacityUnits: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the global secondary index. The name must be unique among all other indexes on this table.
         */
        var indexName: String?
        /**
         * Auto scaling settings for managing a global secondary index replica's read capacity
         * units.
         */
        var provisionedReadCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate?
        /**
         * The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
         */
        var provisionedReadCapacityUnits: Long?

        fun build(): ReplicaGlobalSecondaryIndexSettingsUpdate
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingSettingsUpdate] inside the given [block]
         */
        fun provisionedReadCapacityAutoScalingSettingsUpdate(block: AutoScalingSettingsUpdate.DslBuilder.() -> kotlin.Unit) {
            this.provisionedReadCapacityAutoScalingSettingsUpdate = AutoScalingSettingsUpdate.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var indexName: String? = null
        override var provisionedReadCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate? = null
        override var provisionedReadCapacityUnits: Long? = null

        constructor(x: ReplicaGlobalSecondaryIndexSettingsUpdate) : this() {
            this.indexName = x.indexName
            this.provisionedReadCapacityAutoScalingSettingsUpdate = x.provisionedReadCapacityAutoScalingSettingsUpdate
            this.provisionedReadCapacityUnits = x.provisionedReadCapacityUnits
        }

        override fun build(): ReplicaGlobalSecondaryIndexSettingsUpdate = ReplicaGlobalSecondaryIndexSettingsUpdate(this)
        override fun indexName(indexName: String): FluentBuilder = apply { this.indexName = indexName }
        override fun provisionedReadCapacityAutoScalingSettingsUpdate(provisionedReadCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate): FluentBuilder = apply { this.provisionedReadCapacityAutoScalingSettingsUpdate = provisionedReadCapacityAutoScalingSettingsUpdate }
        override fun provisionedReadCapacityUnits(provisionedReadCapacityUnits: Long): FluentBuilder = apply { this.provisionedReadCapacityUnits = provisionedReadCapacityUnits }
    }
}
