// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class ExecuteTransactionResponse private constructor(builder: BuilderImpl) {
    /**
     * The response to a PartiQL transaction.
     */
    val responses: List<ItemResponse>? = builder.responses

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ExecuteTransactionResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ExecuteTransactionResponse(")
        append("responses=$responses)")
    }

    override fun hashCode(): kotlin.Int {
        var result = responses?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExecuteTransactionResponse

        if (responses != other.responses) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ExecuteTransactionResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ExecuteTransactionResponse
        /**
         * The response to a PartiQL transaction.
         */
        fun responses(responses: List<ItemResponse>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The response to a PartiQL transaction.
         */
        var responses: List<ItemResponse>?

        fun build(): ExecuteTransactionResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var responses: List<ItemResponse>? = null

        constructor(x: ExecuteTransactionResponse) : this() {
            this.responses = x.responses
        }

        override fun build(): ExecuteTransactionResponse = ExecuteTransactionResponse(this)
        override fun responses(responses: List<ItemResponse>): FluentBuilder = apply { this.responses = responses }
    }
}
