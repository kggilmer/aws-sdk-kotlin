// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents a replica to be modified.
 */
class UpdateReplicationGroupMemberAction private constructor(builder: BuilderImpl) {
    /**
     * Replica-specific global secondary index settings.
     */
    val globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndex>? = builder.globalSecondaryIndexes
    /**
     * The AWS KMS customer master key (CMK) of the replica that should be used for AWS KMS encryption.
     * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
     * ARN. Note that you should only provide this parameter if the key is different from
     * the default DynamoDB KMS master key alias/aws/dynamodb.
     */
    val kmsMasterKeyId: String? = builder.kmsMasterKeyId
    /**
     * Replica-specific provisioned throughput. If not specified, uses the source table's
     * provisioned throughput settings.
     */
    val provisionedThroughputOverride: ProvisionedThroughputOverride? = builder.provisionedThroughputOverride
    /**
     * The Region where the replica exists.
     */
    val regionName: String? = builder.regionName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): UpdateReplicationGroupMemberAction = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("UpdateReplicationGroupMemberAction(")
        append("globalSecondaryIndexes=$globalSecondaryIndexes,")
        append("kmsMasterKeyId=$kmsMasterKeyId,")
        append("provisionedThroughputOverride=$provisionedThroughputOverride,")
        append("regionName=$regionName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = globalSecondaryIndexes?.hashCode() ?: 0
        result = 31 * result + (kmsMasterKeyId?.hashCode() ?: 0)
        result = 31 * result + (provisionedThroughputOverride?.hashCode() ?: 0)
        result = 31 * result + (regionName?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as UpdateReplicationGroupMemberAction

        if (globalSecondaryIndexes != other.globalSecondaryIndexes) return false
        if (kmsMasterKeyId != other.kmsMasterKeyId) return false
        if (provisionedThroughputOverride != other.provisionedThroughputOverride) return false
        if (regionName != other.regionName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): UpdateReplicationGroupMemberAction = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): UpdateReplicationGroupMemberAction
        /**
         * Replica-specific global secondary index settings.
         */
        fun globalSecondaryIndexes(globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndex>): FluentBuilder
        /**
         * The AWS KMS customer master key (CMK) of the replica that should be used for AWS KMS encryption.
         * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
         * ARN. Note that you should only provide this parameter if the key is different from
         * the default DynamoDB KMS master key alias/aws/dynamodb.
         */
        fun kmsMasterKeyId(kmsMasterKeyId: String): FluentBuilder
        /**
         * Replica-specific provisioned throughput. If not specified, uses the source table's
         * provisioned throughput settings.
         */
        fun provisionedThroughputOverride(provisionedThroughputOverride: ProvisionedThroughputOverride): FluentBuilder
        /**
         * The Region where the replica exists.
         */
        fun regionName(regionName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Replica-specific global secondary index settings.
         */
        var globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndex>?
        /**
         * The AWS KMS customer master key (CMK) of the replica that should be used for AWS KMS encryption.
         * To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias
         * ARN. Note that you should only provide this parameter if the key is different from
         * the default DynamoDB KMS master key alias/aws/dynamodb.
         */
        var kmsMasterKeyId: String?
        /**
         * Replica-specific provisioned throughput. If not specified, uses the source table's
         * provisioned throughput settings.
         */
        var provisionedThroughputOverride: ProvisionedThroughputOverride?
        /**
         * The Region where the replica exists.
         */
        var regionName: String?

        fun build(): UpdateReplicationGroupMemberAction
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.ProvisionedThroughputOverride] inside the given [block]
         */
        fun provisionedThroughputOverride(block: ProvisionedThroughputOverride.DslBuilder.() -> kotlin.Unit) {
            this.provisionedThroughputOverride = ProvisionedThroughputOverride.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndex>? = null
        override var kmsMasterKeyId: String? = null
        override var provisionedThroughputOverride: ProvisionedThroughputOverride? = null
        override var regionName: String? = null

        constructor(x: UpdateReplicationGroupMemberAction) : this() {
            this.globalSecondaryIndexes = x.globalSecondaryIndexes
            this.kmsMasterKeyId = x.kmsMasterKeyId
            this.provisionedThroughputOverride = x.provisionedThroughputOverride
            this.regionName = x.regionName
        }

        override fun build(): UpdateReplicationGroupMemberAction = UpdateReplicationGroupMemberAction(this)
        override fun globalSecondaryIndexes(globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndex>): FluentBuilder = apply { this.globalSecondaryIndexes = globalSecondaryIndexes }
        override fun kmsMasterKeyId(kmsMasterKeyId: String): FluentBuilder = apply { this.kmsMasterKeyId = kmsMasterKeyId }
        override fun provisionedThroughputOverride(provisionedThroughputOverride: ProvisionedThroughputOverride): FluentBuilder = apply { this.provisionedThroughputOverride = provisionedThroughputOverride }
        override fun regionName(regionName: String): FluentBuilder = apply { this.regionName = regionName }
    }
}
