// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the properties of a replica.
 */
class ReplicaSettingsDescription private constructor(builder: BuilderImpl) {
    /**
     * The Region name of the replica.
     */
    val regionName: String? = builder.regionName
    /**
     * The read/write capacity mode of the replica.
     */
    val replicaBillingModeSummary: BillingModeSummary? = builder.replicaBillingModeSummary
    /**
     * Replica global secondary index settings for the global table.
     */
    val replicaGlobalSecondaryIndexSettings: List<ReplicaGlobalSecondaryIndexSettingsDescription>? = builder.replicaGlobalSecondaryIndexSettings
    /**
     * Auto scaling settings for a global table replica's read capacity units.
     */
    val replicaProvisionedReadCapacityAutoScalingSettings: AutoScalingSettingsDescription? = builder.replicaProvisionedReadCapacityAutoScalingSettings
    /**
     * The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
     * For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
     * Requirements in the Amazon DynamoDB Developer Guide.
     */
    val replicaProvisionedReadCapacityUnits: Long? = builder.replicaProvisionedReadCapacityUnits
    /**
     * Auto scaling settings for a global table replica's write capacity units.
     */
    val replicaProvisionedWriteCapacityAutoScalingSettings: AutoScalingSettingsDescription? = builder.replicaProvisionedWriteCapacityAutoScalingSettings
    /**
     * The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
     * For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
     * Requirements in the Amazon DynamoDB Developer Guide.
     */
    val replicaProvisionedWriteCapacityUnits: Long? = builder.replicaProvisionedWriteCapacityUnits
    /**
     * The current state of the Region:
     * CREATING - The Region is being created.
     * UPDATING - The Region is being updated.
     * DELETING - The Region is being deleted.
     * ACTIVE - The Region is ready for use.
     */
    val replicaStatus: ReplicaStatus? = builder.replicaStatus

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicaSettingsDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicaSettingsDescription(")
        append("regionName=$regionName,")
        append("replicaBillingModeSummary=$replicaBillingModeSummary,")
        append("replicaGlobalSecondaryIndexSettings=$replicaGlobalSecondaryIndexSettings,")
        append("replicaProvisionedReadCapacityAutoScalingSettings=$replicaProvisionedReadCapacityAutoScalingSettings,")
        append("replicaProvisionedReadCapacityUnits=$replicaProvisionedReadCapacityUnits,")
        append("replicaProvisionedWriteCapacityAutoScalingSettings=$replicaProvisionedWriteCapacityAutoScalingSettings,")
        append("replicaProvisionedWriteCapacityUnits=$replicaProvisionedWriteCapacityUnits,")
        append("replicaStatus=$replicaStatus)")
    }

    override fun hashCode(): kotlin.Int {
        var result = regionName?.hashCode() ?: 0
        result = 31 * result + (replicaBillingModeSummary?.hashCode() ?: 0)
        result = 31 * result + (replicaGlobalSecondaryIndexSettings?.hashCode() ?: 0)
        result = 31 * result + (replicaProvisionedReadCapacityAutoScalingSettings?.hashCode() ?: 0)
        result = 31 * result + (replicaProvisionedReadCapacityUnits?.hashCode() ?: 0)
        result = 31 * result + (replicaProvisionedWriteCapacityAutoScalingSettings?.hashCode() ?: 0)
        result = 31 * result + (replicaProvisionedWriteCapacityUnits?.hashCode() ?: 0)
        result = 31 * result + (replicaStatus?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicaSettingsDescription

        if (regionName != other.regionName) return false
        if (replicaBillingModeSummary != other.replicaBillingModeSummary) return false
        if (replicaGlobalSecondaryIndexSettings != other.replicaGlobalSecondaryIndexSettings) return false
        if (replicaProvisionedReadCapacityAutoScalingSettings != other.replicaProvisionedReadCapacityAutoScalingSettings) return false
        if (replicaProvisionedReadCapacityUnits != other.replicaProvisionedReadCapacityUnits) return false
        if (replicaProvisionedWriteCapacityAutoScalingSettings != other.replicaProvisionedWriteCapacityAutoScalingSettings) return false
        if (replicaProvisionedWriteCapacityUnits != other.replicaProvisionedWriteCapacityUnits) return false
        if (replicaStatus != other.replicaStatus) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicaSettingsDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicaSettingsDescription
        /**
         * The Region name of the replica.
         */
        fun regionName(regionName: String): FluentBuilder
        /**
         * The read/write capacity mode of the replica.
         */
        fun replicaBillingModeSummary(replicaBillingModeSummary: BillingModeSummary): FluentBuilder
        /**
         * Replica global secondary index settings for the global table.
         */
        fun replicaGlobalSecondaryIndexSettings(replicaGlobalSecondaryIndexSettings: List<ReplicaGlobalSecondaryIndexSettingsDescription>): FluentBuilder
        /**
         * Auto scaling settings for a global table replica's read capacity units.
         */
        fun replicaProvisionedReadCapacityAutoScalingSettings(replicaProvisionedReadCapacityAutoScalingSettings: AutoScalingSettingsDescription): FluentBuilder
        /**
         * The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
         * For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
         * Requirements in the Amazon DynamoDB Developer Guide.
         */
        fun replicaProvisionedReadCapacityUnits(replicaProvisionedReadCapacityUnits: Long): FluentBuilder
        /**
         * Auto scaling settings for a global table replica's write capacity units.
         */
        fun replicaProvisionedWriteCapacityAutoScalingSettings(replicaProvisionedWriteCapacityAutoScalingSettings: AutoScalingSettingsDescription): FluentBuilder
        /**
         * The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
         * For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
         * Requirements in the Amazon DynamoDB Developer Guide.
         */
        fun replicaProvisionedWriteCapacityUnits(replicaProvisionedWriteCapacityUnits: Long): FluentBuilder
        /**
         * The current state of the Region:
         * CREATING - The Region is being created.
         * UPDATING - The Region is being updated.
         * DELETING - The Region is being deleted.
         * ACTIVE - The Region is ready for use.
         */
        fun replicaStatus(replicaStatus: ReplicaStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Region name of the replica.
         */
        var regionName: String?
        /**
         * The read/write capacity mode of the replica.
         */
        var replicaBillingModeSummary: BillingModeSummary?
        /**
         * Replica global secondary index settings for the global table.
         */
        var replicaGlobalSecondaryIndexSettings: List<ReplicaGlobalSecondaryIndexSettingsDescription>?
        /**
         * Auto scaling settings for a global table replica's read capacity units.
         */
        var replicaProvisionedReadCapacityAutoScalingSettings: AutoScalingSettingsDescription?
        /**
         * The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.
         * For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
         * Requirements in the Amazon DynamoDB Developer Guide.
         */
        var replicaProvisionedReadCapacityUnits: Long?
        /**
         * Auto scaling settings for a global table replica's write capacity units.
         */
        var replicaProvisionedWriteCapacityAutoScalingSettings: AutoScalingSettingsDescription?
        /**
         * The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
         * For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
         * Requirements in the Amazon DynamoDB Developer Guide.
         */
        var replicaProvisionedWriteCapacityUnits: Long?
        /**
         * The current state of the Region:
         * CREATING - The Region is being created.
         * UPDATING - The Region is being updated.
         * DELETING - The Region is being deleted.
         * ACTIVE - The Region is ready for use.
         */
        var replicaStatus: ReplicaStatus?

        fun build(): ReplicaSettingsDescription
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.BillingModeSummary] inside the given [block]
         */
        fun replicaBillingModeSummary(block: BillingModeSummary.DslBuilder.() -> kotlin.Unit) {
            this.replicaBillingModeSummary = BillingModeSummary.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingSettingsDescription] inside the given [block]
         */
        fun replicaProvisionedReadCapacityAutoScalingSettings(block: AutoScalingSettingsDescription.DslBuilder.() -> kotlin.Unit) {
            this.replicaProvisionedReadCapacityAutoScalingSettings = AutoScalingSettingsDescription.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingSettingsDescription] inside the given [block]
         */
        fun replicaProvisionedWriteCapacityAutoScalingSettings(block: AutoScalingSettingsDescription.DslBuilder.() -> kotlin.Unit) {
            this.replicaProvisionedWriteCapacityAutoScalingSettings = AutoScalingSettingsDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var regionName: String? = null
        override var replicaBillingModeSummary: BillingModeSummary? = null
        override var replicaGlobalSecondaryIndexSettings: List<ReplicaGlobalSecondaryIndexSettingsDescription>? = null
        override var replicaProvisionedReadCapacityAutoScalingSettings: AutoScalingSettingsDescription? = null
        override var replicaProvisionedReadCapacityUnits: Long? = null
        override var replicaProvisionedWriteCapacityAutoScalingSettings: AutoScalingSettingsDescription? = null
        override var replicaProvisionedWriteCapacityUnits: Long? = null
        override var replicaStatus: ReplicaStatus? = null

        constructor(x: ReplicaSettingsDescription) : this() {
            this.regionName = x.regionName
            this.replicaBillingModeSummary = x.replicaBillingModeSummary
            this.replicaGlobalSecondaryIndexSettings = x.replicaGlobalSecondaryIndexSettings
            this.replicaProvisionedReadCapacityAutoScalingSettings = x.replicaProvisionedReadCapacityAutoScalingSettings
            this.replicaProvisionedReadCapacityUnits = x.replicaProvisionedReadCapacityUnits
            this.replicaProvisionedWriteCapacityAutoScalingSettings = x.replicaProvisionedWriteCapacityAutoScalingSettings
            this.replicaProvisionedWriteCapacityUnits = x.replicaProvisionedWriteCapacityUnits
            this.replicaStatus = x.replicaStatus
        }

        override fun build(): ReplicaSettingsDescription = ReplicaSettingsDescription(this)
        override fun regionName(regionName: String): FluentBuilder = apply { this.regionName = regionName }
        override fun replicaBillingModeSummary(replicaBillingModeSummary: BillingModeSummary): FluentBuilder = apply { this.replicaBillingModeSummary = replicaBillingModeSummary }
        override fun replicaGlobalSecondaryIndexSettings(replicaGlobalSecondaryIndexSettings: List<ReplicaGlobalSecondaryIndexSettingsDescription>): FluentBuilder = apply { this.replicaGlobalSecondaryIndexSettings = replicaGlobalSecondaryIndexSettings }
        override fun replicaProvisionedReadCapacityAutoScalingSettings(replicaProvisionedReadCapacityAutoScalingSettings: AutoScalingSettingsDescription): FluentBuilder = apply { this.replicaProvisionedReadCapacityAutoScalingSettings = replicaProvisionedReadCapacityAutoScalingSettings }
        override fun replicaProvisionedReadCapacityUnits(replicaProvisionedReadCapacityUnits: Long): FluentBuilder = apply { this.replicaProvisionedReadCapacityUnits = replicaProvisionedReadCapacityUnits }
        override fun replicaProvisionedWriteCapacityAutoScalingSettings(replicaProvisionedWriteCapacityAutoScalingSettings: AutoScalingSettingsDescription): FluentBuilder = apply { this.replicaProvisionedWriteCapacityAutoScalingSettings = replicaProvisionedWriteCapacityAutoScalingSettings }
        override fun replicaProvisionedWriteCapacityUnits(replicaProvisionedWriteCapacityUnits: Long): FluentBuilder = apply { this.replicaProvisionedWriteCapacityUnits = replicaProvisionedWriteCapacityUnits }
        override fun replicaStatus(replicaStatus: ReplicaStatus): FluentBuilder = apply { this.replicaStatus = replicaStatus }
    }
}
