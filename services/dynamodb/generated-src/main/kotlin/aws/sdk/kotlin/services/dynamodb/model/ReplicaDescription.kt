// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Contains the details of the replica.
 */
class ReplicaDescription private constructor(builder: BuilderImpl) {
    /**
     * Replica-specific global secondary index settings.
     */
    val globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndexDescription>? = builder.globalSecondaryIndexes
    /**
     * The AWS KMS customer master key (CMK) of the replica that will be used for AWS KMS
     * encryption.
     */
    val kmsMasterKeyId: String? = builder.kmsMasterKeyId
    /**
     * Replica-specific provisioned throughput. If not described, uses the source table's
     * provisioned throughput settings.
     */
    val provisionedThroughputOverride: ProvisionedThroughputOverride? = builder.provisionedThroughputOverride
    /**
     * The name of the Region.
     */
    val regionName: String? = builder.regionName
    /**
     * The time at which the replica was first detected as inaccessible. To determine cause of inaccessibility check the ReplicaStatus property.
     */
    val replicaInaccessibleDateTime: Instant? = builder.replicaInaccessibleDateTime
    /**
     * The current state of the replica:
     * CREATING - The replica is being created.
     * UPDATING - The replica is being updated.
     * DELETING - The replica is being deleted.
     * ACTIVE - The replica is ready for use.
     * REGION_DISABLED - The replica is inaccessible because the AWS Region has been disabled.
     * If the AWS Region remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.
     * INACCESSIBLE_ENCRYPTION_CREDENTIALS  - The AWS KMS key used to encrypt the table is inaccessible.
     * If the AWS KMS key remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.
     */
    val replicaStatus: ReplicaStatus? = builder.replicaStatus
    /**
     * Detailed information about the replica status.
     */
    val replicaStatusDescription: String? = builder.replicaStatusDescription
    /**
     * Specifies the progress of a Create, Update, or Delete action on the replica
     * as a percentage.
     */
    val replicaStatusPercentProgress: String? = builder.replicaStatusPercentProgress

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicaDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicaDescription(")
        append("globalSecondaryIndexes=$globalSecondaryIndexes,")
        append("kmsMasterKeyId=$kmsMasterKeyId,")
        append("provisionedThroughputOverride=$provisionedThroughputOverride,")
        append("regionName=$regionName,")
        append("replicaInaccessibleDateTime=$replicaInaccessibleDateTime,")
        append("replicaStatus=$replicaStatus,")
        append("replicaStatusDescription=$replicaStatusDescription,")
        append("replicaStatusPercentProgress=$replicaStatusPercentProgress)")
    }

    override fun hashCode(): kotlin.Int {
        var result = globalSecondaryIndexes?.hashCode() ?: 0
        result = 31 * result + (kmsMasterKeyId?.hashCode() ?: 0)
        result = 31 * result + (provisionedThroughputOverride?.hashCode() ?: 0)
        result = 31 * result + (regionName?.hashCode() ?: 0)
        result = 31 * result + (replicaInaccessibleDateTime?.hashCode() ?: 0)
        result = 31 * result + (replicaStatus?.hashCode() ?: 0)
        result = 31 * result + (replicaStatusDescription?.hashCode() ?: 0)
        result = 31 * result + (replicaStatusPercentProgress?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicaDescription

        if (globalSecondaryIndexes != other.globalSecondaryIndexes) return false
        if (kmsMasterKeyId != other.kmsMasterKeyId) return false
        if (provisionedThroughputOverride != other.provisionedThroughputOverride) return false
        if (regionName != other.regionName) return false
        if (replicaInaccessibleDateTime != other.replicaInaccessibleDateTime) return false
        if (replicaStatus != other.replicaStatus) return false
        if (replicaStatusDescription != other.replicaStatusDescription) return false
        if (replicaStatusPercentProgress != other.replicaStatusPercentProgress) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicaDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicaDescription
        /**
         * Replica-specific global secondary index settings.
         */
        fun globalSecondaryIndexes(globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndexDescription>): FluentBuilder
        /**
         * The AWS KMS customer master key (CMK) of the replica that will be used for AWS KMS
         * encryption.
         */
        fun kmsMasterKeyId(kmsMasterKeyId: String): FluentBuilder
        /**
         * Replica-specific provisioned throughput. If not described, uses the source table's
         * provisioned throughput settings.
         */
        fun provisionedThroughputOverride(provisionedThroughputOverride: ProvisionedThroughputOverride): FluentBuilder
        /**
         * The name of the Region.
         */
        fun regionName(regionName: String): FluentBuilder
        /**
         * The time at which the replica was first detected as inaccessible. To determine cause of inaccessibility check the ReplicaStatus property.
         */
        fun replicaInaccessibleDateTime(replicaInaccessibleDateTime: Instant): FluentBuilder
        /**
         * The current state of the replica:
         * CREATING - The replica is being created.
         * UPDATING - The replica is being updated.
         * DELETING - The replica is being deleted.
         * ACTIVE - The replica is ready for use.
         * REGION_DISABLED - The replica is inaccessible because the AWS Region has been disabled.
         * If the AWS Region remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.
         * INACCESSIBLE_ENCRYPTION_CREDENTIALS  - The AWS KMS key used to encrypt the table is inaccessible.
         * If the AWS KMS key remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.
         */
        fun replicaStatus(replicaStatus: ReplicaStatus): FluentBuilder
        /**
         * Detailed information about the replica status.
         */
        fun replicaStatusDescription(replicaStatusDescription: String): FluentBuilder
        /**
         * Specifies the progress of a Create, Update, or Delete action on the replica
         * as a percentage.
         */
        fun replicaStatusPercentProgress(replicaStatusPercentProgress: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Replica-specific global secondary index settings.
         */
        var globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndexDescription>?
        /**
         * The AWS KMS customer master key (CMK) of the replica that will be used for AWS KMS
         * encryption.
         */
        var kmsMasterKeyId: String?
        /**
         * Replica-specific provisioned throughput. If not described, uses the source table's
         * provisioned throughput settings.
         */
        var provisionedThroughputOverride: ProvisionedThroughputOverride?
        /**
         * The name of the Region.
         */
        var regionName: String?
        /**
         * The time at which the replica was first detected as inaccessible. To determine cause of inaccessibility check the ReplicaStatus property.
         */
        var replicaInaccessibleDateTime: Instant?
        /**
         * The current state of the replica:
         * CREATING - The replica is being created.
         * UPDATING - The replica is being updated.
         * DELETING - The replica is being deleted.
         * ACTIVE - The replica is ready for use.
         * REGION_DISABLED - The replica is inaccessible because the AWS Region has been disabled.
         * If the AWS Region remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.
         * INACCESSIBLE_ENCRYPTION_CREDENTIALS  - The AWS KMS key used to encrypt the table is inaccessible.
         * If the AWS KMS key remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.
         */
        var replicaStatus: ReplicaStatus?
        /**
         * Detailed information about the replica status.
         */
        var replicaStatusDescription: String?
        /**
         * Specifies the progress of a Create, Update, or Delete action on the replica
         * as a percentage.
         */
        var replicaStatusPercentProgress: String?

        fun build(): ReplicaDescription
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.ProvisionedThroughputOverride] inside the given [block]
         */
        fun provisionedThroughputOverride(block: ProvisionedThroughputOverride.DslBuilder.() -> kotlin.Unit) {
            this.provisionedThroughputOverride = ProvisionedThroughputOverride.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndexDescription>? = null
        override var kmsMasterKeyId: String? = null
        override var provisionedThroughputOverride: ProvisionedThroughputOverride? = null
        override var regionName: String? = null
        override var replicaInaccessibleDateTime: Instant? = null
        override var replicaStatus: ReplicaStatus? = null
        override var replicaStatusDescription: String? = null
        override var replicaStatusPercentProgress: String? = null

        constructor(x: ReplicaDescription) : this() {
            this.globalSecondaryIndexes = x.globalSecondaryIndexes
            this.kmsMasterKeyId = x.kmsMasterKeyId
            this.provisionedThroughputOverride = x.provisionedThroughputOverride
            this.regionName = x.regionName
            this.replicaInaccessibleDateTime = x.replicaInaccessibleDateTime
            this.replicaStatus = x.replicaStatus
            this.replicaStatusDescription = x.replicaStatusDescription
            this.replicaStatusPercentProgress = x.replicaStatusPercentProgress
        }

        override fun build(): ReplicaDescription = ReplicaDescription(this)
        override fun globalSecondaryIndexes(globalSecondaryIndexes: List<ReplicaGlobalSecondaryIndexDescription>): FluentBuilder = apply { this.globalSecondaryIndexes = globalSecondaryIndexes }
        override fun kmsMasterKeyId(kmsMasterKeyId: String): FluentBuilder = apply { this.kmsMasterKeyId = kmsMasterKeyId }
        override fun provisionedThroughputOverride(provisionedThroughputOverride: ProvisionedThroughputOverride): FluentBuilder = apply { this.provisionedThroughputOverride = provisionedThroughputOverride }
        override fun regionName(regionName: String): FluentBuilder = apply { this.regionName = regionName }
        override fun replicaInaccessibleDateTime(replicaInaccessibleDateTime: Instant): FluentBuilder = apply { this.replicaInaccessibleDateTime = replicaInaccessibleDateTime }
        override fun replicaStatus(replicaStatus: ReplicaStatus): FluentBuilder = apply { this.replicaStatus = replicaStatus }
        override fun replicaStatusDescription(replicaStatusDescription: String): FluentBuilder = apply { this.replicaStatusDescription = replicaStatusDescription }
        override fun replicaStatusPercentProgress(replicaStatusPercentProgress: String): FluentBuilder = apply { this.replicaStatusPercentProgress = replicaStatusPercentProgress }
    }
}
