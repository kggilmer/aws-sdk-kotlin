// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the auto scaling settings of a global secondary index for a replica
 * that will be modified.
 */
class ReplicaGlobalSecondaryIndexAutoScalingUpdate private constructor(builder: BuilderImpl) {
    /**
     * The name of the global secondary index.
     */
    val indexName: String? = builder.indexName
    /**
     * Represents the auto scaling settings to be modified for a global table or global
     * secondary index.
     */
    val provisionedReadCapacityAutoScalingUpdate: AutoScalingSettingsUpdate? = builder.provisionedReadCapacityAutoScalingUpdate

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicaGlobalSecondaryIndexAutoScalingUpdate = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicaGlobalSecondaryIndexAutoScalingUpdate(")
        append("indexName=$indexName,")
        append("provisionedReadCapacityAutoScalingUpdate=$provisionedReadCapacityAutoScalingUpdate)")
    }

    override fun hashCode(): kotlin.Int {
        var result = indexName?.hashCode() ?: 0
        result = 31 * result + (provisionedReadCapacityAutoScalingUpdate?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicaGlobalSecondaryIndexAutoScalingUpdate

        if (indexName != other.indexName) return false
        if (provisionedReadCapacityAutoScalingUpdate != other.provisionedReadCapacityAutoScalingUpdate) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicaGlobalSecondaryIndexAutoScalingUpdate = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicaGlobalSecondaryIndexAutoScalingUpdate
        /**
         * The name of the global secondary index.
         */
        fun indexName(indexName: String): FluentBuilder
        /**
         * Represents the auto scaling settings to be modified for a global table or global
         * secondary index.
         */
        fun provisionedReadCapacityAutoScalingUpdate(provisionedReadCapacityAutoScalingUpdate: AutoScalingSettingsUpdate): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the global secondary index.
         */
        var indexName: String?
        /**
         * Represents the auto scaling settings to be modified for a global table or global
         * secondary index.
         */
        var provisionedReadCapacityAutoScalingUpdate: AutoScalingSettingsUpdate?

        fun build(): ReplicaGlobalSecondaryIndexAutoScalingUpdate
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingSettingsUpdate] inside the given [block]
         */
        fun provisionedReadCapacityAutoScalingUpdate(block: AutoScalingSettingsUpdate.DslBuilder.() -> kotlin.Unit) {
            this.provisionedReadCapacityAutoScalingUpdate = AutoScalingSettingsUpdate.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var indexName: String? = null
        override var provisionedReadCapacityAutoScalingUpdate: AutoScalingSettingsUpdate? = null

        constructor(x: ReplicaGlobalSecondaryIndexAutoScalingUpdate) : this() {
            this.indexName = x.indexName
            this.provisionedReadCapacityAutoScalingUpdate = x.provisionedReadCapacityAutoScalingUpdate
        }

        override fun build(): ReplicaGlobalSecondaryIndexAutoScalingUpdate = ReplicaGlobalSecondaryIndexAutoScalingUpdate(this)
        override fun indexName(indexName: String): FluentBuilder = apply { this.indexName = indexName }
        override fun provisionedReadCapacityAutoScalingUpdate(provisionedReadCapacityAutoScalingUpdate: AutoScalingSettingsUpdate): FluentBuilder = apply { this.provisionedReadCapacityAutoScalingUpdate = provisionedReadCapacityAutoScalingUpdate }
    }
}
