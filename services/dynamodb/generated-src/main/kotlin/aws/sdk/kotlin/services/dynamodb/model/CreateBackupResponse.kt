// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class CreateBackupResponse private constructor(builder: BuilderImpl) {
    /**
     * Contains the details of the backup created for the table.
     */
    val backupDetails: BackupDetails? = builder.backupDetails

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CreateBackupResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CreateBackupResponse(")
        append("backupDetails=$backupDetails)")
    }

    override fun hashCode(): kotlin.Int {
        var result = backupDetails?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CreateBackupResponse

        if (backupDetails != other.backupDetails) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CreateBackupResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CreateBackupResponse
        /**
         * Contains the details of the backup created for the table.
         */
        fun backupDetails(backupDetails: BackupDetails): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Contains the details of the backup created for the table.
         */
        var backupDetails: BackupDetails?

        fun build(): CreateBackupResponse
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.BackupDetails] inside the given [block]
         */
        fun backupDetails(block: BackupDetails.DslBuilder.() -> kotlin.Unit) {
            this.backupDetails = BackupDetails.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var backupDetails: BackupDetails? = null

        constructor(x: CreateBackupResponse) : this() {
            this.backupDetails = x.backupDetails
        }

        override fun build(): CreateBackupResponse = CreateBackupResponse(this)
        override fun backupDetails(backupDetails: BackupDetails): FluentBuilder = apply { this.backupDetails = backupDetails }
    }
}
