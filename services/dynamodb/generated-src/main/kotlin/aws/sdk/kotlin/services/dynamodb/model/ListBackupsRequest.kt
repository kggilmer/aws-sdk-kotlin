// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import aws.smithy.kotlin.runtime.time.Instant

class ListBackupsRequest private constructor(builder: BuilderImpl) {
    /**
     * The backups from the table specified by BackupType are listed.
     * Where BackupType can be:
     * USER - On-demand backup created by you.
     * SYSTEM - On-demand backup automatically created by
     * DynamoDB.
     * ALL - All types of on-demand backups (USER and SYSTEM).
     */
    val backupType: BackupTypeFilter? = builder.backupType
    /**
     * LastEvaluatedBackupArn is the Amazon Resource Name (ARN) of the backup last
     * evaluated when the current page of results was returned, inclusive of the current page
     * of results. This value may be specified as the ExclusiveStartBackupArn of a
     * new ListBackups operation in order to fetch the next page of results.
     */
    val exclusiveStartBackupArn: String? = builder.exclusiveStartBackupArn
    /**
     * Maximum number of backups to return at once.
     */
    val limit: Int? = builder.limit
    /**
     * The backups from the table specified by TableName are listed.
     */
    val tableName: String? = builder.tableName
    /**
     * Only backups created after this time are listed. TimeRangeLowerBound is inclusive.
     */
    val timeRangeLowerBound: Instant? = builder.timeRangeLowerBound
    /**
     * Only backups created before this time are listed. TimeRangeUpperBound is exclusive.
     */
    val timeRangeUpperBound: Instant? = builder.timeRangeUpperBound

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ListBackupsRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ListBackupsRequest(")
        append("backupType=$backupType,")
        append("exclusiveStartBackupArn=$exclusiveStartBackupArn,")
        append("limit=$limit,")
        append("tableName=$tableName,")
        append("timeRangeLowerBound=$timeRangeLowerBound,")
        append("timeRangeUpperBound=$timeRangeUpperBound)")
    }

    override fun hashCode(): kotlin.Int {
        var result = backupType?.hashCode() ?: 0
        result = 31 * result + (exclusiveStartBackupArn?.hashCode() ?: 0)
        result = 31 * result + (limit ?: 0)
        result = 31 * result + (tableName?.hashCode() ?: 0)
        result = 31 * result + (timeRangeLowerBound?.hashCode() ?: 0)
        result = 31 * result + (timeRangeUpperBound?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ListBackupsRequest

        if (backupType != other.backupType) return false
        if (exclusiveStartBackupArn != other.exclusiveStartBackupArn) return false
        if (limit != other.limit) return false
        if (tableName != other.tableName) return false
        if (timeRangeLowerBound != other.timeRangeLowerBound) return false
        if (timeRangeUpperBound != other.timeRangeUpperBound) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ListBackupsRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ListBackupsRequest
        /**
         * The backups from the table specified by BackupType are listed.
         * Where BackupType can be:
         * USER - On-demand backup created by you.
         * SYSTEM - On-demand backup automatically created by
         * DynamoDB.
         * ALL - All types of on-demand backups (USER and SYSTEM).
         */
        fun backupType(backupType: BackupTypeFilter): FluentBuilder
        /**
         * LastEvaluatedBackupArn is the Amazon Resource Name (ARN) of the backup last
         * evaluated when the current page of results was returned, inclusive of the current page
         * of results. This value may be specified as the ExclusiveStartBackupArn of a
         * new ListBackups operation in order to fetch the next page of results.
         */
        fun exclusiveStartBackupArn(exclusiveStartBackupArn: String): FluentBuilder
        /**
         * Maximum number of backups to return at once.
         */
        fun limit(limit: Int): FluentBuilder
        /**
         * The backups from the table specified by TableName are listed.
         */
        fun tableName(tableName: String): FluentBuilder
        /**
         * Only backups created after this time are listed. TimeRangeLowerBound is inclusive.
         */
        fun timeRangeLowerBound(timeRangeLowerBound: Instant): FluentBuilder
        /**
         * Only backups created before this time are listed. TimeRangeUpperBound is exclusive.
         */
        fun timeRangeUpperBound(timeRangeUpperBound: Instant): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The backups from the table specified by BackupType are listed.
         * Where BackupType can be:
         * USER - On-demand backup created by you.
         * SYSTEM - On-demand backup automatically created by
         * DynamoDB.
         * ALL - All types of on-demand backups (USER and SYSTEM).
         */
        var backupType: BackupTypeFilter?
        /**
         * LastEvaluatedBackupArn is the Amazon Resource Name (ARN) of the backup last
         * evaluated when the current page of results was returned, inclusive of the current page
         * of results. This value may be specified as the ExclusiveStartBackupArn of a
         * new ListBackups operation in order to fetch the next page of results.
         */
        var exclusiveStartBackupArn: String?
        /**
         * Maximum number of backups to return at once.
         */
        var limit: Int?
        /**
         * The backups from the table specified by TableName are listed.
         */
        var tableName: String?
        /**
         * Only backups created after this time are listed. TimeRangeLowerBound is inclusive.
         */
        var timeRangeLowerBound: Instant?
        /**
         * Only backups created before this time are listed. TimeRangeUpperBound is exclusive.
         */
        var timeRangeUpperBound: Instant?

        fun build(): ListBackupsRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var backupType: BackupTypeFilter? = null
        override var exclusiveStartBackupArn: String? = null
        override var limit: Int? = null
        override var tableName: String? = null
        override var timeRangeLowerBound: Instant? = null
        override var timeRangeUpperBound: Instant? = null

        constructor(x: ListBackupsRequest) : this() {
            this.backupType = x.backupType
            this.exclusiveStartBackupArn = x.exclusiveStartBackupArn
            this.limit = x.limit
            this.tableName = x.tableName
            this.timeRangeLowerBound = x.timeRangeLowerBound
            this.timeRangeUpperBound = x.timeRangeUpperBound
        }

        override fun build(): ListBackupsRequest = ListBackupsRequest(this)
        override fun backupType(backupType: BackupTypeFilter): FluentBuilder = apply { this.backupType = backupType }
        override fun exclusiveStartBackupArn(exclusiveStartBackupArn: String): FluentBuilder = apply { this.exclusiveStartBackupArn = exclusiveStartBackupArn }
        override fun limit(limit: Int): FluentBuilder = apply { this.limit = limit }
        override fun tableName(tableName: String): FluentBuilder = apply { this.tableName = tableName }
        override fun timeRangeLowerBound(timeRangeLowerBound: Instant): FluentBuilder = apply { this.timeRangeLowerBound = timeRangeLowerBound }
        override fun timeRangeUpperBound(timeRangeUpperBound: Instant): FluentBuilder = apply { this.timeRangeUpperBound = timeRangeUpperBound }
    }
}
