// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents a global secondary index to be deleted from an existing table.
 */
class DeleteGlobalSecondaryIndexAction private constructor(builder: BuilderImpl) {
    /**
     * The name of the global secondary index to be deleted.
     */
    val indexName: String? = builder.indexName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteGlobalSecondaryIndexAction = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteGlobalSecondaryIndexAction(")
        append("indexName=$indexName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = indexName?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteGlobalSecondaryIndexAction

        if (indexName != other.indexName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteGlobalSecondaryIndexAction = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteGlobalSecondaryIndexAction
        /**
         * The name of the global secondary index to be deleted.
         */
        fun indexName(indexName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the global secondary index to be deleted.
         */
        var indexName: String?

        fun build(): DeleteGlobalSecondaryIndexAction
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var indexName: String? = null

        constructor(x: DeleteGlobalSecondaryIndexAction) : this() {
            this.indexName = x.indexName
        }

        override fun build(): DeleteGlobalSecondaryIndexAction = DeleteGlobalSecondaryIndexAction(this)
        override fun indexName(indexName: String): FluentBuilder = apply { this.indexName = indexName }
    }
}
