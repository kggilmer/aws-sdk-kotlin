// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import aws.smithy.kotlin.runtime.ServiceErrorMetadata

/**
 * An error occurred on the server side.
 */
class InternalServerError private constructor(builder: BuilderImpl) : DynamoDbException() {

    /**
     * The server encountered an internal error trying to fulfill the request.
     */
    override val message: String? = builder.message

    init {
        sdkErrorMetadata.attributes[ServiceErrorMetadata.ErrorType] = ErrorType.Server
    }

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InternalServerError = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InternalServerError(")
        append("message=$message)")
    }

    override fun hashCode(): kotlin.Int {
        var result = message?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InternalServerError

        if (message != other.message) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InternalServerError = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InternalServerError
        /**
         * The server encountered an internal error trying to fulfill the request.
         */
        fun message(message: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The server encountered an internal error trying to fulfill the request.
         */
        var message: String?

        fun build(): InternalServerError
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var message: String? = null

        constructor(x: InternalServerError) : this() {
            this.message = x.message
        }

        override fun build(): InternalServerError = InternalServerError(this)
        override fun message(message: String): FluentBuilder = apply { this.message = message }
    }
}
