// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the input of an UpdateTimeToLive operation.
 */
class UpdateTimeToLiveRequest private constructor(builder: BuilderImpl) {
    /**
     * The name of the table to be configured.
     */
    val tableName: String? = builder.tableName
    /**
     * Represents the settings used to enable or disable Time to Live for the specified table.
     */
    val timeToLiveSpecification: TimeToLiveSpecification? = builder.timeToLiveSpecification

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): UpdateTimeToLiveRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("UpdateTimeToLiveRequest(")
        append("tableName=$tableName,")
        append("timeToLiveSpecification=$timeToLiveSpecification)")
    }

    override fun hashCode(): kotlin.Int {
        var result = tableName?.hashCode() ?: 0
        result = 31 * result + (timeToLiveSpecification?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as UpdateTimeToLiveRequest

        if (tableName != other.tableName) return false
        if (timeToLiveSpecification != other.timeToLiveSpecification) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): UpdateTimeToLiveRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): UpdateTimeToLiveRequest
        /**
         * The name of the table to be configured.
         */
        fun tableName(tableName: String): FluentBuilder
        /**
         * Represents the settings used to enable or disable Time to Live for the specified table.
         */
        fun timeToLiveSpecification(timeToLiveSpecification: TimeToLiveSpecification): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the table to be configured.
         */
        var tableName: String?
        /**
         * Represents the settings used to enable or disable Time to Live for the specified table.
         */
        var timeToLiveSpecification: TimeToLiveSpecification?

        fun build(): UpdateTimeToLiveRequest
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.TimeToLiveSpecification] inside the given [block]
         */
        fun timeToLiveSpecification(block: TimeToLiveSpecification.DslBuilder.() -> kotlin.Unit) {
            this.timeToLiveSpecification = TimeToLiveSpecification.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var tableName: String? = null
        override var timeToLiveSpecification: TimeToLiveSpecification? = null

        constructor(x: UpdateTimeToLiveRequest) : this() {
            this.tableName = x.tableName
            this.timeToLiveSpecification = x.timeToLiveSpecification
        }

        override fun build(): UpdateTimeToLiveRequest = UpdateTimeToLiveRequest(this)
        override fun tableName(tableName: String): FluentBuilder = apply { this.tableName = tableName }
        override fun timeToLiveSpecification(timeToLiveSpecification: TimeToLiveSpecification): FluentBuilder = apply { this.timeToLiveSpecification = timeToLiveSpecification }
    }
}
