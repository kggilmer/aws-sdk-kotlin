// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the input of a DescribeTable operation.
 */
class DescribeTableRequest private constructor(builder: BuilderImpl) {
    /**
     * The name of the table to describe.
     */
    val tableName: String? = builder.tableName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeTableRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeTableRequest(")
        append("tableName=$tableName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = tableName?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeTableRequest

        if (tableName != other.tableName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeTableRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeTableRequest
        /**
         * The name of the table to describe.
         */
        fun tableName(tableName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the table to describe.
         */
        var tableName: String?

        fun build(): DescribeTableRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var tableName: String? = null

        constructor(x: DescribeTableRequest) : this() {
            this.tableName = x.tableName
        }

        override fun build(): DescribeTableRequest = DescribeTableRequest(this)
        override fun tableName(tableName: String): FluentBuilder = apply { this.tableName = tableName }
    }
}
