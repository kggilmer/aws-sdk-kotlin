// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class ListContributorInsightsResponse private constructor(builder: BuilderImpl) {
    /**
     * A list of ContributorInsightsSummary.
     */
    val contributorInsightsSummaries: List<ContributorInsightsSummary>? = builder.contributorInsightsSummaries
    /**
     * A token to go to the next page if there is one.
     */
    val nextToken: String? = builder.nextToken

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ListContributorInsightsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ListContributorInsightsResponse(")
        append("contributorInsightsSummaries=$contributorInsightsSummaries,")
        append("nextToken=$nextToken)")
    }

    override fun hashCode(): kotlin.Int {
        var result = contributorInsightsSummaries?.hashCode() ?: 0
        result = 31 * result + (nextToken?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ListContributorInsightsResponse

        if (contributorInsightsSummaries != other.contributorInsightsSummaries) return false
        if (nextToken != other.nextToken) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ListContributorInsightsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ListContributorInsightsResponse
        /**
         * A list of ContributorInsightsSummary.
         */
        fun contributorInsightsSummaries(contributorInsightsSummaries: List<ContributorInsightsSummary>): FluentBuilder
        /**
         * A token to go to the next page if there is one.
         */
        fun nextToken(nextToken: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A list of ContributorInsightsSummary.
         */
        var contributorInsightsSummaries: List<ContributorInsightsSummary>?
        /**
         * A token to go to the next page if there is one.
         */
        var nextToken: String?

        fun build(): ListContributorInsightsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var contributorInsightsSummaries: List<ContributorInsightsSummary>? = null
        override var nextToken: String? = null

        constructor(x: ListContributorInsightsResponse) : this() {
            this.contributorInsightsSummaries = x.contributorInsightsSummaries
            this.nextToken = x.nextToken
        }

        override fun build(): ListContributorInsightsResponse = ListContributorInsightsResponse(this)
        override fun contributorInsightsSummaries(contributorInsightsSummaries: List<ContributorInsightsSummary>): FluentBuilder = apply { this.contributorInsightsSummaries = contributorInsightsSummaries }
        override fun nextToken(nextToken: String): FluentBuilder = apply { this.nextToken = nextToken }
    }
}
