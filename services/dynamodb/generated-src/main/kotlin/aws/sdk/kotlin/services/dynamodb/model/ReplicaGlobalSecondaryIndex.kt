// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the properties of a replica global secondary index.
 */
class ReplicaGlobalSecondaryIndex private constructor(builder: BuilderImpl) {
    /**
     * The name of the global secondary index.
     */
    val indexName: String? = builder.indexName
    /**
     * Replica table GSI-specific provisioned throughput. If not specified, uses the
     * source table GSI's read capacity settings.
     */
    val provisionedThroughputOverride: ProvisionedThroughputOverride? = builder.provisionedThroughputOverride

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicaGlobalSecondaryIndex = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicaGlobalSecondaryIndex(")
        append("indexName=$indexName,")
        append("provisionedThroughputOverride=$provisionedThroughputOverride)")
    }

    override fun hashCode(): kotlin.Int {
        var result = indexName?.hashCode() ?: 0
        result = 31 * result + (provisionedThroughputOverride?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicaGlobalSecondaryIndex

        if (indexName != other.indexName) return false
        if (provisionedThroughputOverride != other.provisionedThroughputOverride) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicaGlobalSecondaryIndex = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicaGlobalSecondaryIndex
        /**
         * The name of the global secondary index.
         */
        fun indexName(indexName: String): FluentBuilder
        /**
         * Replica table GSI-specific provisioned throughput. If not specified, uses the
         * source table GSI's read capacity settings.
         */
        fun provisionedThroughputOverride(provisionedThroughputOverride: ProvisionedThroughputOverride): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the global secondary index.
         */
        var indexName: String?
        /**
         * Replica table GSI-specific provisioned throughput. If not specified, uses the
         * source table GSI's read capacity settings.
         */
        var provisionedThroughputOverride: ProvisionedThroughputOverride?

        fun build(): ReplicaGlobalSecondaryIndex
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.ProvisionedThroughputOverride] inside the given [block]
         */
        fun provisionedThroughputOverride(block: ProvisionedThroughputOverride.DslBuilder.() -> kotlin.Unit) {
            this.provisionedThroughputOverride = ProvisionedThroughputOverride.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var indexName: String? = null
        override var provisionedThroughputOverride: ProvisionedThroughputOverride? = null

        constructor(x: ReplicaGlobalSecondaryIndex) : this() {
            this.indexName = x.indexName
            this.provisionedThroughputOverride = x.provisionedThroughputOverride
        }

        override fun build(): ReplicaGlobalSecondaryIndex = ReplicaGlobalSecondaryIndex(this)
        override fun indexName(indexName: String): FluentBuilder = apply { this.indexName = indexName }
        override fun provisionedThroughputOverride(provisionedThroughputOverride: ProvisionedThroughputOverride): FluentBuilder = apply { this.provisionedThroughputOverride = provisionedThroughputOverride }
    }
}
