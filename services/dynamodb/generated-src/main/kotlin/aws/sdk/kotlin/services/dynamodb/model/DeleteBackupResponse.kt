// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class DeleteBackupResponse private constructor(builder: BuilderImpl) {
    /**
     * Contains the description of the backup created for the table.
     */
    val backupDescription: BackupDescription? = builder.backupDescription

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteBackupResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteBackupResponse(")
        append("backupDescription=$backupDescription)")
    }

    override fun hashCode(): kotlin.Int {
        var result = backupDescription?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteBackupResponse

        if (backupDescription != other.backupDescription) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteBackupResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteBackupResponse
        /**
         * Contains the description of the backup created for the table.
         */
        fun backupDescription(backupDescription: BackupDescription): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Contains the description of the backup created for the table.
         */
        var backupDescription: BackupDescription?

        fun build(): DeleteBackupResponse
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.BackupDescription] inside the given [block]
         */
        fun backupDescription(block: BackupDescription.DslBuilder.() -> kotlin.Unit) {
            this.backupDescription = BackupDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var backupDescription: BackupDescription? = null

        constructor(x: DeleteBackupResponse) : this() {
            this.backupDescription = x.backupDescription
        }

        override fun build(): DeleteBackupResponse = DeleteBackupResponse(this)
        override fun backupDescription(backupDescription: BackupDescription): FluentBuilder = apply { this.backupDescription = backupDescription }
    }
}
