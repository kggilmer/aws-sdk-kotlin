// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * An ordered list of errors for each item in the request which caused the transaction
 * to get cancelled. The values of the list are ordered according to the ordering of the
 * TransactWriteItems request parameter. If no error
 * occurred for the associated item an error with a Null code and Null message will be present.
 */
class CancellationReason private constructor(builder: BuilderImpl) {
    /**
     * Status code for the result of the cancelled transaction.
     */
    val code: String? = builder.code
    /**
     * Item in the request which caused the transaction to get cancelled.
     */
    val item: Map<String, AttributeValue>? = builder.item
    /**
     * Cancellation reason message description.
     */
    val message: String? = builder.message

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CancellationReason = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CancellationReason(")
        append("code=$code,")
        append("item=$item,")
        append("message=$message)")
    }

    override fun hashCode(): kotlin.Int {
        var result = code?.hashCode() ?: 0
        result = 31 * result + (item?.hashCode() ?: 0)
        result = 31 * result + (message?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CancellationReason

        if (code != other.code) return false
        if (item != other.item) return false
        if (message != other.message) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CancellationReason = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CancellationReason
        /**
         * Status code for the result of the cancelled transaction.
         */
        fun code(code: String): FluentBuilder
        /**
         * Item in the request which caused the transaction to get cancelled.
         */
        fun item(item: Map<String, AttributeValue>): FluentBuilder
        /**
         * Cancellation reason message description.
         */
        fun message(message: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Status code for the result of the cancelled transaction.
         */
        var code: String?
        /**
         * Item in the request which caused the transaction to get cancelled.
         */
        var item: Map<String, AttributeValue>?
        /**
         * Cancellation reason message description.
         */
        var message: String?

        fun build(): CancellationReason
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var code: String? = null
        override var item: Map<String, AttributeValue>? = null
        override var message: String? = null

        constructor(x: CancellationReason) : this() {
            this.code = x.code
            this.item = x.item
            this.message = x.message
        }

        override fun build(): CancellationReason = CancellationReason(this)
        override fun code(code: String): FluentBuilder = apply { this.code = code }
        override fun item(item: Map<String, AttributeValue>): FluentBuilder = apply { this.item = item }
        override fun message(message: String): FluentBuilder = apply { this.message = message }
    }
}
