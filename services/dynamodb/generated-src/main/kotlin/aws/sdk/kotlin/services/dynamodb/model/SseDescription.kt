// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * The description of the server-side encryption status on the specified table.
 */
class SseDescription private constructor(builder: BuilderImpl) {
    /**
     * Indicates the time, in UNIX epoch date format, when DynamoDB detected that the table's
     * AWS KMS key was inaccessible. This attribute will automatically be cleared when DynamoDB
     * detects that the table's AWS KMS key is accessible again. DynamoDB will initiate the table
     * archival process when table's AWS KMS key remains inaccessible for more than seven days
     * from this date.
     */
    val inaccessibleEncryptionDateTime: Instant? = builder.inaccessibleEncryptionDateTime
    /**
     * The AWS KMS customer master key (CMK) ARN used for the AWS KMS encryption.
     */
    val kmsMasterKeyArn: String? = builder.kmsMasterKeyArn
    /**
     * Server-side encryption type. The only supported value is:
     * KMS - Server-side encryption that uses AWS Key Management Service. The
     * key is stored in your account and is managed by AWS KMS (AWS KMS charges
     * apply).
     */
    val sseType: SseType? = builder.sseType
    /**
     * Represents the current state of server-side encryption. The only supported values are:
     * ENABLED - Server-side encryption is enabled.
     * UPDATING - Server-side encryption is being updated.
     */
    val status: SseStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): SseDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("SseDescription(")
        append("inaccessibleEncryptionDateTime=$inaccessibleEncryptionDateTime,")
        append("kmsMasterKeyArn=$kmsMasterKeyArn,")
        append("sseType=$sseType,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = inaccessibleEncryptionDateTime?.hashCode() ?: 0
        result = 31 * result + (kmsMasterKeyArn?.hashCode() ?: 0)
        result = 31 * result + (sseType?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as SseDescription

        if (inaccessibleEncryptionDateTime != other.inaccessibleEncryptionDateTime) return false
        if (kmsMasterKeyArn != other.kmsMasterKeyArn) return false
        if (sseType != other.sseType) return false
        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): SseDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): SseDescription
        /**
         * Indicates the time, in UNIX epoch date format, when DynamoDB detected that the table's
         * AWS KMS key was inaccessible. This attribute will automatically be cleared when DynamoDB
         * detects that the table's AWS KMS key is accessible again. DynamoDB will initiate the table
         * archival process when table's AWS KMS key remains inaccessible for more than seven days
         * from this date.
         */
        fun inaccessibleEncryptionDateTime(inaccessibleEncryptionDateTime: Instant): FluentBuilder
        /**
         * The AWS KMS customer master key (CMK) ARN used for the AWS KMS encryption.
         */
        fun kmsMasterKeyArn(kmsMasterKeyArn: String): FluentBuilder
        /**
         * Server-side encryption type. The only supported value is:
         * KMS - Server-side encryption that uses AWS Key Management Service. The
         * key is stored in your account and is managed by AWS KMS (AWS KMS charges
         * apply).
         */
        fun sseType(sseType: SseType): FluentBuilder
        /**
         * Represents the current state of server-side encryption. The only supported values are:
         * ENABLED - Server-side encryption is enabled.
         * UPDATING - Server-side encryption is being updated.
         */
        fun status(status: SseStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates the time, in UNIX epoch date format, when DynamoDB detected that the table's
         * AWS KMS key was inaccessible. This attribute will automatically be cleared when DynamoDB
         * detects that the table's AWS KMS key is accessible again. DynamoDB will initiate the table
         * archival process when table's AWS KMS key remains inaccessible for more than seven days
         * from this date.
         */
        var inaccessibleEncryptionDateTime: Instant?
        /**
         * The AWS KMS customer master key (CMK) ARN used for the AWS KMS encryption.
         */
        var kmsMasterKeyArn: String?
        /**
         * Server-side encryption type. The only supported value is:
         * KMS - Server-side encryption that uses AWS Key Management Service. The
         * key is stored in your account and is managed by AWS KMS (AWS KMS charges
         * apply).
         */
        var sseType: SseType?
        /**
         * Represents the current state of server-side encryption. The only supported values are:
         * ENABLED - Server-side encryption is enabled.
         * UPDATING - Server-side encryption is being updated.
         */
        var status: SseStatus?

        fun build(): SseDescription
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var inaccessibleEncryptionDateTime: Instant? = null
        override var kmsMasterKeyArn: String? = null
        override var sseType: SseType? = null
        override var status: SseStatus? = null

        constructor(x: SseDescription) : this() {
            this.inaccessibleEncryptionDateTime = x.inaccessibleEncryptionDateTime
            this.kmsMasterKeyArn = x.kmsMasterKeyArn
            this.sseType = x.sseType
            this.status = x.status
        }

        override fun build(): SseDescription = SseDescription(this)
        override fun inaccessibleEncryptionDateTime(inaccessibleEncryptionDateTime: Instant): FluentBuilder = apply { this.inaccessibleEncryptionDateTime = inaccessibleEncryptionDateTime }
        override fun kmsMasterKeyArn(kmsMasterKeyArn: String): FluentBuilder = apply { this.kmsMasterKeyArn = kmsMasterKeyArn }
        override fun sseType(sseType: SseType): FluentBuilder = apply { this.sseType = sseType }
        override fun status(status: SseStatus): FluentBuilder = apply { this.status = status }
    }
}
