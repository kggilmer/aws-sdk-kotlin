// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents the settings of a global secondary index for a global table that will be modified.
 */
class GlobalTableGlobalSecondaryIndexSettingsUpdate private constructor(builder: BuilderImpl) {
    /**
     * The name of the global secondary index. The name must be unique among all other indexes on this table.
     */
    val indexName: String? = builder.indexName
    /**
     * Auto scaling settings for managing a global secondary index's write capacity
     * units.
     */
    val provisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate? = builder.provisionedWriteCapacityAutoScalingSettingsUpdate
    /**
     * The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
     */
    val provisionedWriteCapacityUnits: Long? = builder.provisionedWriteCapacityUnits

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GlobalTableGlobalSecondaryIndexSettingsUpdate = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GlobalTableGlobalSecondaryIndexSettingsUpdate(")
        append("indexName=$indexName,")
        append("provisionedWriteCapacityAutoScalingSettingsUpdate=$provisionedWriteCapacityAutoScalingSettingsUpdate,")
        append("provisionedWriteCapacityUnits=$provisionedWriteCapacityUnits)")
    }

    override fun hashCode(): kotlin.Int {
        var result = indexName?.hashCode() ?: 0
        result = 31 * result + (provisionedWriteCapacityAutoScalingSettingsUpdate?.hashCode() ?: 0)
        result = 31 * result + (provisionedWriteCapacityUnits?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GlobalTableGlobalSecondaryIndexSettingsUpdate

        if (indexName != other.indexName) return false
        if (provisionedWriteCapacityAutoScalingSettingsUpdate != other.provisionedWriteCapacityAutoScalingSettingsUpdate) return false
        if (provisionedWriteCapacityUnits != other.provisionedWriteCapacityUnits) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GlobalTableGlobalSecondaryIndexSettingsUpdate = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GlobalTableGlobalSecondaryIndexSettingsUpdate
        /**
         * The name of the global secondary index. The name must be unique among all other indexes on this table.
         */
        fun indexName(indexName: String): FluentBuilder
        /**
         * Auto scaling settings for managing a global secondary index's write capacity
         * units.
         */
        fun provisionedWriteCapacityAutoScalingSettingsUpdate(provisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate): FluentBuilder
        /**
         * The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
         */
        fun provisionedWriteCapacityUnits(provisionedWriteCapacityUnits: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the global secondary index. The name must be unique among all other indexes on this table.
         */
        var indexName: String?
        /**
         * Auto scaling settings for managing a global secondary index's write capacity
         * units.
         */
        var provisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate?
        /**
         * The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.
         */
        var provisionedWriteCapacityUnits: Long?

        fun build(): GlobalTableGlobalSecondaryIndexSettingsUpdate
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingSettingsUpdate] inside the given [block]
         */
        fun provisionedWriteCapacityAutoScalingSettingsUpdate(block: AutoScalingSettingsUpdate.DslBuilder.() -> kotlin.Unit) {
            this.provisionedWriteCapacityAutoScalingSettingsUpdate = AutoScalingSettingsUpdate.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var indexName: String? = null
        override var provisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate? = null
        override var provisionedWriteCapacityUnits: Long? = null

        constructor(x: GlobalTableGlobalSecondaryIndexSettingsUpdate) : this() {
            this.indexName = x.indexName
            this.provisionedWriteCapacityAutoScalingSettingsUpdate = x.provisionedWriteCapacityAutoScalingSettingsUpdate
            this.provisionedWriteCapacityUnits = x.provisionedWriteCapacityUnits
        }

        override fun build(): GlobalTableGlobalSecondaryIndexSettingsUpdate = GlobalTableGlobalSecondaryIndexSettingsUpdate(this)
        override fun indexName(indexName: String): FluentBuilder = apply { this.indexName = indexName }
        override fun provisionedWriteCapacityAutoScalingSettingsUpdate(provisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate): FluentBuilder = apply { this.provisionedWriteCapacityAutoScalingSettingsUpdate = provisionedWriteCapacityAutoScalingSettingsUpdate }
        override fun provisionedWriteCapacityUnits(provisionedWriteCapacityUnits: Long): FluentBuilder = apply { this.provisionedWriteCapacityUnits = provisionedWriteCapacityUnits }
    }
}
