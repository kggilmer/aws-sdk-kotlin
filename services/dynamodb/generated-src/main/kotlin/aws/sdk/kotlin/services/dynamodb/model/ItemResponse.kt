// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Details for the requested item.
 */
class ItemResponse private constructor(builder: BuilderImpl) {
    /**
     * Map of attribute data consisting of the data type and attribute value.
     */
    val item: Map<String, AttributeValue>? = builder.item

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ItemResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ItemResponse(")
        append("item=$item)")
    }

    override fun hashCode(): kotlin.Int {
        var result = item?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ItemResponse

        if (item != other.item) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ItemResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ItemResponse
        /**
         * Map of attribute data consisting of the data type and attribute value.
         */
        fun item(item: Map<String, AttributeValue>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Map of attribute data consisting of the data type and attribute value.
         */
        var item: Map<String, AttributeValue>?

        fun build(): ItemResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var item: Map<String, AttributeValue>? = null

        constructor(x: ItemResponse) : this() {
            this.item = x.item
        }

        override fun build(): ItemResponse = ItemResponse(this)
        override fun item(item: Map<String, AttributeValue>): FluentBuilder = apply { this.item = item }
    }
}
