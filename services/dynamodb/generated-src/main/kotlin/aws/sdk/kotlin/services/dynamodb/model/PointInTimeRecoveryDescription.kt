// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * The description of the point in time settings applied to the table.
 */
class PointInTimeRecoveryDescription private constructor(builder: BuilderImpl) {
    /**
     * Specifies the earliest point in time you can restore your table to. You can restore your
     * table to any point in time during the last 35 days.
     */
    val earliestRestorableDateTime: Instant? = builder.earliestRestorableDateTime
    /**
     * LatestRestorableDateTime is typically 5 minutes before the current time.
     */
    val latestRestorableDateTime: Instant? = builder.latestRestorableDateTime
    /**
     * The current state of point in time recovery:
     * ENABLING - Point in time recovery is being enabled.
     * ENABLED - Point in time recovery is enabled.
     * DISABLED - Point in time recovery is disabled.
     */
    val pointInTimeRecoveryStatus: PointInTimeRecoveryStatus? = builder.pointInTimeRecoveryStatus

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PointInTimeRecoveryDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PointInTimeRecoveryDescription(")
        append("earliestRestorableDateTime=$earliestRestorableDateTime,")
        append("latestRestorableDateTime=$latestRestorableDateTime,")
        append("pointInTimeRecoveryStatus=$pointInTimeRecoveryStatus)")
    }

    override fun hashCode(): kotlin.Int {
        var result = earliestRestorableDateTime?.hashCode() ?: 0
        result = 31 * result + (latestRestorableDateTime?.hashCode() ?: 0)
        result = 31 * result + (pointInTimeRecoveryStatus?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PointInTimeRecoveryDescription

        if (earliestRestorableDateTime != other.earliestRestorableDateTime) return false
        if (latestRestorableDateTime != other.latestRestorableDateTime) return false
        if (pointInTimeRecoveryStatus != other.pointInTimeRecoveryStatus) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PointInTimeRecoveryDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PointInTimeRecoveryDescription
        /**
         * Specifies the earliest point in time you can restore your table to. You can restore your
         * table to any point in time during the last 35 days.
         */
        fun earliestRestorableDateTime(earliestRestorableDateTime: Instant): FluentBuilder
        /**
         * LatestRestorableDateTime is typically 5 minutes before the current time.
         */
        fun latestRestorableDateTime(latestRestorableDateTime: Instant): FluentBuilder
        /**
         * The current state of point in time recovery:
         * ENABLING - Point in time recovery is being enabled.
         * ENABLED - Point in time recovery is enabled.
         * DISABLED - Point in time recovery is disabled.
         */
        fun pointInTimeRecoveryStatus(pointInTimeRecoveryStatus: PointInTimeRecoveryStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies the earliest point in time you can restore your table to. You can restore your
         * table to any point in time during the last 35 days.
         */
        var earliestRestorableDateTime: Instant?
        /**
         * LatestRestorableDateTime is typically 5 minutes before the current time.
         */
        var latestRestorableDateTime: Instant?
        /**
         * The current state of point in time recovery:
         * ENABLING - Point in time recovery is being enabled.
         * ENABLED - Point in time recovery is enabled.
         * DISABLED - Point in time recovery is disabled.
         */
        var pointInTimeRecoveryStatus: PointInTimeRecoveryStatus?

        fun build(): PointInTimeRecoveryDescription
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var earliestRestorableDateTime: Instant? = null
        override var latestRestorableDateTime: Instant? = null
        override var pointInTimeRecoveryStatus: PointInTimeRecoveryStatus? = null

        constructor(x: PointInTimeRecoveryDescription) : this() {
            this.earliestRestorableDateTime = x.earliestRestorableDateTime
            this.latestRestorableDateTime = x.latestRestorableDateTime
            this.pointInTimeRecoveryStatus = x.pointInTimeRecoveryStatus
        }

        override fun build(): PointInTimeRecoveryDescription = PointInTimeRecoveryDescription(this)
        override fun earliestRestorableDateTime(earliestRestorableDateTime: Instant): FluentBuilder = apply { this.earliestRestorableDateTime = earliestRestorableDateTime }
        override fun latestRestorableDateTime(latestRestorableDateTime: Instant): FluentBuilder = apply { this.latestRestorableDateTime = latestRestorableDateTime }
        override fun pointInTimeRecoveryStatus(pointInTimeRecoveryStatus: PointInTimeRecoveryStatus): FluentBuilder = apply { this.pointInTimeRecoveryStatus = pointInTimeRecoveryStatus }
    }
}
