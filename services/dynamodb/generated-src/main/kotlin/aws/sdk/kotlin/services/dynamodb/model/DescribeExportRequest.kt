// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class DescribeExportRequest private constructor(builder: BuilderImpl) {
    /**
     * The Amazon Resource Name (ARN) associated with the export.
     */
    val exportArn: String? = builder.exportArn

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeExportRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeExportRequest(")
        append("exportArn=$exportArn)")
    }

    override fun hashCode(): kotlin.Int {
        var result = exportArn?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeExportRequest

        if (exportArn != other.exportArn) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeExportRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeExportRequest
        /**
         * The Amazon Resource Name (ARN) associated with the export.
         */
        fun exportArn(exportArn: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Amazon Resource Name (ARN) associated with the export.
         */
        var exportArn: String?

        fun build(): DescribeExportRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var exportArn: String? = null

        constructor(x: DescribeExportRequest) : this() {
            this.exportArn = x.exportArn
        }

        override fun build(): DescribeExportRequest = DescribeExportRequest(this)
        override fun exportArn(exportArn: String): FluentBuilder = apply { this.exportArn = exportArn }
    }
}
