// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class DescribeExportResponse private constructor(builder: BuilderImpl) {
    /**
     * Represents the properties of the export.
     */
    val exportDescription: ExportDescription? = builder.exportDescription

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DescribeExportResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DescribeExportResponse(")
        append("exportDescription=$exportDescription)")
    }

    override fun hashCode(): kotlin.Int {
        var result = exportDescription?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DescribeExportResponse

        if (exportDescription != other.exportDescription) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DescribeExportResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DescribeExportResponse
        /**
         * Represents the properties of the export.
         */
        fun exportDescription(exportDescription: ExportDescription): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Represents the properties of the export.
         */
        var exportDescription: ExportDescription?

        fun build(): DescribeExportResponse
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.ExportDescription] inside the given [block]
         */
        fun exportDescription(block: ExportDescription.DslBuilder.() -> kotlin.Unit) {
            this.exportDescription = ExportDescription.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var exportDescription: ExportDescription? = null

        constructor(x: DescribeExportResponse) : this() {
            this.exportDescription = x.exportDescription
        }

        override fun build(): DescribeExportResponse = DescribeExportResponse(this)
        override fun exportDescription(exportDescription: ExportDescription): FluentBuilder = apply { this.exportDescription = exportDescription }
    }
}
