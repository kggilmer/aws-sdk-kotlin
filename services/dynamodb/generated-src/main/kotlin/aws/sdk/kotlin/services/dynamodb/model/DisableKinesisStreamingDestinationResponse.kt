// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class DisableKinesisStreamingDestinationResponse private constructor(builder: BuilderImpl) {
    /**
     * The current status of the replication.
     */
    val destinationStatus: DestinationStatus? = builder.destinationStatus
    /**
     * The ARN for the specific Kinesis data stream.
     */
    val streamArn: String? = builder.streamArn
    /**
     * The name of the table being modified.
     */
    val tableName: String? = builder.tableName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DisableKinesisStreamingDestinationResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DisableKinesisStreamingDestinationResponse(")
        append("destinationStatus=$destinationStatus,")
        append("streamArn=$streamArn,")
        append("tableName=$tableName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = destinationStatus?.hashCode() ?: 0
        result = 31 * result + (streamArn?.hashCode() ?: 0)
        result = 31 * result + (tableName?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DisableKinesisStreamingDestinationResponse

        if (destinationStatus != other.destinationStatus) return false
        if (streamArn != other.streamArn) return false
        if (tableName != other.tableName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DisableKinesisStreamingDestinationResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DisableKinesisStreamingDestinationResponse
        /**
         * The current status of the replication.
         */
        fun destinationStatus(destinationStatus: DestinationStatus): FluentBuilder
        /**
         * The ARN for the specific Kinesis data stream.
         */
        fun streamArn(streamArn: String): FluentBuilder
        /**
         * The name of the table being modified.
         */
        fun tableName(tableName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The current status of the replication.
         */
        var destinationStatus: DestinationStatus?
        /**
         * The ARN for the specific Kinesis data stream.
         */
        var streamArn: String?
        /**
         * The name of the table being modified.
         */
        var tableName: String?

        fun build(): DisableKinesisStreamingDestinationResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var destinationStatus: DestinationStatus? = null
        override var streamArn: String? = null
        override var tableName: String? = null

        constructor(x: DisableKinesisStreamingDestinationResponse) : this() {
            this.destinationStatus = x.destinationStatus
            this.streamArn = x.streamArn
            this.tableName = x.tableName
        }

        override fun build(): DisableKinesisStreamingDestinationResponse = DisableKinesisStreamingDestinationResponse(this)
        override fun destinationStatus(destinationStatus: DestinationStatus): FluentBuilder = apply { this.destinationStatus = destinationStatus }
        override fun streamArn(streamArn: String): FluentBuilder = apply { this.streamArn = streamArn }
        override fun tableName(tableName: String): FluentBuilder = apply { this.tableName = tableName }
    }
}
