// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * The description of the Time to Live (TTL) status on the specified table.
 */
class TimeToLiveDescription private constructor(builder: BuilderImpl) {
    /**
     * The name of the TTL attribute for items in the table.
     */
    val attributeName: String? = builder.attributeName
    /**
     * The TTL status for the table.
     */
    val timeToLiveStatus: TimeToLiveStatus? = builder.timeToLiveStatus

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): TimeToLiveDescription = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("TimeToLiveDescription(")
        append("attributeName=$attributeName,")
        append("timeToLiveStatus=$timeToLiveStatus)")
    }

    override fun hashCode(): kotlin.Int {
        var result = attributeName?.hashCode() ?: 0
        result = 31 * result + (timeToLiveStatus?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as TimeToLiveDescription

        if (attributeName != other.attributeName) return false
        if (timeToLiveStatus != other.timeToLiveStatus) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): TimeToLiveDescription = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): TimeToLiveDescription
        /**
         * The name of the TTL attribute for items in the table.
         */
        fun attributeName(attributeName: String): FluentBuilder
        /**
         * The TTL status for the table.
         */
        fun timeToLiveStatus(timeToLiveStatus: TimeToLiveStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the TTL attribute for items in the table.
         */
        var attributeName: String?
        /**
         * The TTL status for the table.
         */
        var timeToLiveStatus: TimeToLiveStatus?

        fun build(): TimeToLiveDescription
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var attributeName: String? = null
        override var timeToLiveStatus: TimeToLiveStatus? = null

        constructor(x: TimeToLiveDescription) : this() {
            this.attributeName = x.attributeName
            this.timeToLiveStatus = x.timeToLiveStatus
        }

        override fun build(): TimeToLiveDescription = TimeToLiveDescription(this)
        override fun attributeName(attributeName: String): FluentBuilder = apply { this.attributeName = attributeName }
        override fun timeToLiveStatus(timeToLiveStatus: TimeToLiveStatus): FluentBuilder = apply { this.timeToLiveStatus = timeToLiveStatus }
    }
}
