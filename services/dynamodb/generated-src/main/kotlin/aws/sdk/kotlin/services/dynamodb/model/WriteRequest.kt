// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * Represents an operation to perform - either DeleteItem or
 * PutItem. You can only request one of these operations, not both, in a
 * single WriteRequest. If you do need to perform both of these operations, you
 * need to provide two separate WriteRequest objects.
 */
class WriteRequest private constructor(builder: BuilderImpl) {
    /**
     * A request to perform a DeleteItem operation.
     */
    val deleteRequest: DeleteRequest? = builder.deleteRequest
    /**
     * A request to perform a PutItem operation.
     */
    val putRequest: PutRequest? = builder.putRequest

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): WriteRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("WriteRequest(")
        append("deleteRequest=$deleteRequest,")
        append("putRequest=$putRequest)")
    }

    override fun hashCode(): kotlin.Int {
        var result = deleteRequest?.hashCode() ?: 0
        result = 31 * result + (putRequest?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as WriteRequest

        if (deleteRequest != other.deleteRequest) return false
        if (putRequest != other.putRequest) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): WriteRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): WriteRequest
        /**
         * A request to perform a DeleteItem operation.
         */
        fun deleteRequest(deleteRequest: DeleteRequest): FluentBuilder
        /**
         * A request to perform a PutItem operation.
         */
        fun putRequest(putRequest: PutRequest): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A request to perform a DeleteItem operation.
         */
        var deleteRequest: DeleteRequest?
        /**
         * A request to perform a PutItem operation.
         */
        var putRequest: PutRequest?

        fun build(): WriteRequest
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.DeleteRequest] inside the given [block]
         */
        fun deleteRequest(block: DeleteRequest.DslBuilder.() -> kotlin.Unit) {
            this.deleteRequest = DeleteRequest.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.PutRequest] inside the given [block]
         */
        fun putRequest(block: PutRequest.DslBuilder.() -> kotlin.Unit) {
            this.putRequest = PutRequest.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var deleteRequest: DeleteRequest? = null
        override var putRequest: PutRequest? = null

        constructor(x: WriteRequest) : this() {
            this.deleteRequest = x.deleteRequest
            this.putRequest = x.putRequest
        }

        override fun build(): WriteRequest = WriteRequest(this)
        override fun deleteRequest(deleteRequest: DeleteRequest): FluentBuilder = apply { this.deleteRequest = deleteRequest }
        override fun putRequest(putRequest: PutRequest): FluentBuilder = apply { this.putRequest = putRequest }
    }
}
