// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



/**
 * An endpoint information details.
 */
class Endpoint private constructor(builder: BuilderImpl) {
    /**
     * IP address of the endpoint.
     */
    val address: String? = builder.address
    /**
     * Endpoint cache time to live (TTL) value.
     */
    val cachePeriodInMinutes: Long = builder.cachePeriodInMinutes

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Endpoint = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Endpoint(")
        append("address=$address,")
        append("cachePeriodInMinutes=$cachePeriodInMinutes)")
    }

    override fun hashCode(): kotlin.Int {
        var result = address?.hashCode() ?: 0
        result = 31 * result + (cachePeriodInMinutes.hashCode())
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Endpoint

        if (address != other.address) return false
        if (cachePeriodInMinutes != other.cachePeriodInMinutes) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Endpoint = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Endpoint
        /**
         * IP address of the endpoint.
         */
        fun address(address: String): FluentBuilder
        /**
         * Endpoint cache time to live (TTL) value.
         */
        fun cachePeriodInMinutes(cachePeriodInMinutes: Long): FluentBuilder
    }

    interface DslBuilder {
        /**
         * IP address of the endpoint.
         */
        var address: String?
        /**
         * Endpoint cache time to live (TTL) value.
         */
        var cachePeriodInMinutes: Long

        fun build(): Endpoint
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var address: String? = null
        override var cachePeriodInMinutes: Long = 0L

        constructor(x: Endpoint) : this() {
            this.address = x.address
            this.cachePeriodInMinutes = x.cachePeriodInMinutes
        }

        override fun build(): Endpoint = Endpoint(this)
        override fun address(address: String): FluentBuilder = apply { this.address = address }
        override fun cachePeriodInMinutes(cachePeriodInMinutes: Long): FluentBuilder = apply { this.cachePeriodInMinutes = cachePeriodInMinutes }
    }
}
