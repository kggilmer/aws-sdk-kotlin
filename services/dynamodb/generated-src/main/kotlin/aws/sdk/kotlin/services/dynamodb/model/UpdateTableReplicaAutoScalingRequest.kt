// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model



class UpdateTableReplicaAutoScalingRequest private constructor(builder: BuilderImpl) {
    /**
     * Represents the auto scaling settings of the global secondary indexes of the replica
     * to be updated.
     */
    val globalSecondaryIndexUpdates: List<GlobalSecondaryIndexAutoScalingUpdate>? = builder.globalSecondaryIndexUpdates
    /**
     * Represents the auto scaling settings to be modified for a global table or global
     * secondary index.
     */
    val provisionedWriteCapacityAutoScalingUpdate: AutoScalingSettingsUpdate? = builder.provisionedWriteCapacityAutoScalingUpdate
    /**
     * Represents the auto scaling settings of replicas of the table that will be
     * modified.
     */
    val replicaUpdates: List<ReplicaAutoScalingUpdate>? = builder.replicaUpdates
    /**
     * The name of the global table to be updated.
     */
    val tableName: String? = builder.tableName

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): UpdateTableReplicaAutoScalingRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("UpdateTableReplicaAutoScalingRequest(")
        append("globalSecondaryIndexUpdates=$globalSecondaryIndexUpdates,")
        append("provisionedWriteCapacityAutoScalingUpdate=$provisionedWriteCapacityAutoScalingUpdate,")
        append("replicaUpdates=$replicaUpdates,")
        append("tableName=$tableName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = globalSecondaryIndexUpdates?.hashCode() ?: 0
        result = 31 * result + (provisionedWriteCapacityAutoScalingUpdate?.hashCode() ?: 0)
        result = 31 * result + (replicaUpdates?.hashCode() ?: 0)
        result = 31 * result + (tableName?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as UpdateTableReplicaAutoScalingRequest

        if (globalSecondaryIndexUpdates != other.globalSecondaryIndexUpdates) return false
        if (provisionedWriteCapacityAutoScalingUpdate != other.provisionedWriteCapacityAutoScalingUpdate) return false
        if (replicaUpdates != other.replicaUpdates) return false
        if (tableName != other.tableName) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): UpdateTableReplicaAutoScalingRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): UpdateTableReplicaAutoScalingRequest
        /**
         * Represents the auto scaling settings of the global secondary indexes of the replica
         * to be updated.
         */
        fun globalSecondaryIndexUpdates(globalSecondaryIndexUpdates: List<GlobalSecondaryIndexAutoScalingUpdate>): FluentBuilder
        /**
         * Represents the auto scaling settings to be modified for a global table or global
         * secondary index.
         */
        fun provisionedWriteCapacityAutoScalingUpdate(provisionedWriteCapacityAutoScalingUpdate: AutoScalingSettingsUpdate): FluentBuilder
        /**
         * Represents the auto scaling settings of replicas of the table that will be
         * modified.
         */
        fun replicaUpdates(replicaUpdates: List<ReplicaAutoScalingUpdate>): FluentBuilder
        /**
         * The name of the global table to be updated.
         */
        fun tableName(tableName: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Represents the auto scaling settings of the global secondary indexes of the replica
         * to be updated.
         */
        var globalSecondaryIndexUpdates: List<GlobalSecondaryIndexAutoScalingUpdate>?
        /**
         * Represents the auto scaling settings to be modified for a global table or global
         * secondary index.
         */
        var provisionedWriteCapacityAutoScalingUpdate: AutoScalingSettingsUpdate?
        /**
         * Represents the auto scaling settings of replicas of the table that will be
         * modified.
         */
        var replicaUpdates: List<ReplicaAutoScalingUpdate>?
        /**
         * The name of the global table to be updated.
         */
        var tableName: String?

        fun build(): UpdateTableReplicaAutoScalingRequest
        /**
         * construct an [aws.sdk.kotlin.services.dynamodb.model.AutoScalingSettingsUpdate] inside the given [block]
         */
        fun provisionedWriteCapacityAutoScalingUpdate(block: AutoScalingSettingsUpdate.DslBuilder.() -> kotlin.Unit) {
            this.provisionedWriteCapacityAutoScalingUpdate = AutoScalingSettingsUpdate.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var globalSecondaryIndexUpdates: List<GlobalSecondaryIndexAutoScalingUpdate>? = null
        override var provisionedWriteCapacityAutoScalingUpdate: AutoScalingSettingsUpdate? = null
        override var replicaUpdates: List<ReplicaAutoScalingUpdate>? = null
        override var tableName: String? = null

        constructor(x: UpdateTableReplicaAutoScalingRequest) : this() {
            this.globalSecondaryIndexUpdates = x.globalSecondaryIndexUpdates
            this.provisionedWriteCapacityAutoScalingUpdate = x.provisionedWriteCapacityAutoScalingUpdate
            this.replicaUpdates = x.replicaUpdates
            this.tableName = x.tableName
        }

        override fun build(): UpdateTableReplicaAutoScalingRequest = UpdateTableReplicaAutoScalingRequest(this)
        override fun globalSecondaryIndexUpdates(globalSecondaryIndexUpdates: List<GlobalSecondaryIndexAutoScalingUpdate>): FluentBuilder = apply { this.globalSecondaryIndexUpdates = globalSecondaryIndexUpdates }
        override fun provisionedWriteCapacityAutoScalingUpdate(provisionedWriteCapacityAutoScalingUpdate: AutoScalingSettingsUpdate): FluentBuilder = apply { this.provisionedWriteCapacityAutoScalingUpdate = provisionedWriteCapacityAutoScalingUpdate }
        override fun replicaUpdates(replicaUpdates: List<ReplicaAutoScalingUpdate>): FluentBuilder = apply { this.replicaUpdates = replicaUpdates }
        override fun tableName(tableName: String): FluentBuilder = apply { this.tableName = tableName }
    }
}
