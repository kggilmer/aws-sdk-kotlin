// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class GetObjectLegalHoldResponse private constructor(builder: BuilderImpl) {
    /**
     * The current Legal Hold status for the specified object.
     */
    val legalHold: ObjectLockLegalHold? = builder.legalHold

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetObjectLegalHoldResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetObjectLegalHoldResponse(")
        append("legalHold=$legalHold)")
    }

    override fun hashCode(): kotlin.Int {
        var result = legalHold?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetObjectLegalHoldResponse

        if (legalHold != other.legalHold) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetObjectLegalHoldResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetObjectLegalHoldResponse
        /**
         * The current Legal Hold status for the specified object.
         */
        fun legalHold(legalHold: ObjectLockLegalHold): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The current Legal Hold status for the specified object.
         */
        var legalHold: ObjectLockLegalHold?

        fun build(): GetObjectLegalHoldResponse
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ObjectLockLegalHold] inside the given [block]
         */
        fun legalHold(block: ObjectLockLegalHold.DslBuilder.() -> kotlin.Unit) {
            this.legalHold = ObjectLockLegalHold.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var legalHold: ObjectLockLegalHold? = null

        constructor(x: GetObjectLegalHoldResponse) : this() {
            this.legalHold = x.legalHold
        }

        override fun build(): GetObjectLegalHoldResponse = GetObjectLegalHoldResponse(this)
        override fun legalHold(legalHold: ObjectLockLegalHold): FluentBuilder = apply { this.legalHold = legalHold }
    }
}
