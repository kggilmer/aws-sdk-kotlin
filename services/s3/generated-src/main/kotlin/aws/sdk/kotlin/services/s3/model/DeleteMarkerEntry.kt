// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Information about the delete marker.
 */
class DeleteMarkerEntry private constructor(builder: BuilderImpl) {
    /**
     * Specifies whether the object is (true) or is not (false) the latest version of an
     * object.
     */
    val isLatest: Boolean = builder.isLatest
    /**
     * The object key.
     */
    val key: String? = builder.key
    /**
     * Date and time the object was last modified.
     */
    val lastModified: Instant? = builder.lastModified
    /**
     * The account that created the delete marker.>
     */
    val owner: Owner? = builder.owner
    /**
     * Version ID of an object.
     */
    val versionId: String? = builder.versionId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteMarkerEntry = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteMarkerEntry(")
        append("isLatest=$isLatest,")
        append("key=$key,")
        append("lastModified=$lastModified,")
        append("owner=$owner,")
        append("versionId=$versionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = isLatest.hashCode()
        result = 31 * result + (key?.hashCode() ?: 0)
        result = 31 * result + (lastModified?.hashCode() ?: 0)
        result = 31 * result + (owner?.hashCode() ?: 0)
        result = 31 * result + (versionId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteMarkerEntry

        if (isLatest != other.isLatest) return false
        if (key != other.key) return false
        if (lastModified != other.lastModified) return false
        if (owner != other.owner) return false
        if (versionId != other.versionId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteMarkerEntry = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteMarkerEntry
        /**
         * Specifies whether the object is (true) or is not (false) the latest version of an
         * object.
         */
        fun isLatest(isLatest: Boolean): FluentBuilder
        /**
         * The object key.
         */
        fun key(key: String): FluentBuilder
        /**
         * Date and time the object was last modified.
         */
        fun lastModified(lastModified: Instant): FluentBuilder
        /**
         * The account that created the delete marker.>
         */
        fun owner(owner: Owner): FluentBuilder
        /**
         * Version ID of an object.
         */
        fun versionId(versionId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies whether the object is (true) or is not (false) the latest version of an
         * object.
         */
        var isLatest: Boolean
        /**
         * The object key.
         */
        var key: String?
        /**
         * Date and time the object was last modified.
         */
        var lastModified: Instant?
        /**
         * The account that created the delete marker.>
         */
        var owner: Owner?
        /**
         * Version ID of an object.
         */
        var versionId: String?

        fun build(): DeleteMarkerEntry
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Owner] inside the given [block]
         */
        fun owner(block: Owner.DslBuilder.() -> kotlin.Unit) {
            this.owner = Owner.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var isLatest: Boolean = false
        override var key: String? = null
        override var lastModified: Instant? = null
        override var owner: Owner? = null
        override var versionId: String? = null

        constructor(x: DeleteMarkerEntry) : this() {
            this.isLatest = x.isLatest
            this.key = x.key
            this.lastModified = x.lastModified
            this.owner = x.owner
            this.versionId = x.versionId
        }

        override fun build(): DeleteMarkerEntry = DeleteMarkerEntry(this)
        override fun isLatest(isLatest: Boolean): FluentBuilder = apply { this.isLatest = isLatest }
        override fun key(key: String): FluentBuilder = apply { this.key = key }
        override fun lastModified(lastModified: Instant): FluentBuilder = apply { this.lastModified = lastModified }
        override fun owner(owner: Owner): FluentBuilder = apply { this.owner = owner }
        override fun versionId(versionId: String): FluentBuilder = apply { this.versionId = versionId }
    }
}
