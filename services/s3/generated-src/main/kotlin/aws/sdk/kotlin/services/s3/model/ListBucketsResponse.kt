// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class ListBucketsResponse private constructor(builder: BuilderImpl) {
    /**
     * The list of buckets owned by the requestor.
     */
    val buckets: List<Bucket>? = builder.buckets
    /**
     * The owner of the buckets listed.
     */
    val owner: Owner? = builder.owner

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ListBucketsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ListBucketsResponse(")
        append("buckets=$buckets,")
        append("owner=$owner)")
    }

    override fun hashCode(): kotlin.Int {
        var result = buckets?.hashCode() ?: 0
        result = 31 * result + (owner?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ListBucketsResponse

        if (buckets != other.buckets) return false
        if (owner != other.owner) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ListBucketsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ListBucketsResponse
        /**
         * The list of buckets owned by the requestor.
         */
        fun buckets(buckets: List<Bucket>): FluentBuilder
        /**
         * The owner of the buckets listed.
         */
        fun owner(owner: Owner): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The list of buckets owned by the requestor.
         */
        var buckets: List<Bucket>?
        /**
         * The owner of the buckets listed.
         */
        var owner: Owner?

        fun build(): ListBucketsResponse
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Owner] inside the given [block]
         */
        fun owner(block: Owner.DslBuilder.() -> kotlin.Unit) {
            this.owner = Owner.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var buckets: List<Bucket>? = null
        override var owner: Owner? = null

        constructor(x: ListBucketsResponse) : this() {
            this.buckets = x.buckets
            this.owner = x.owner
        }

        override fun build(): ListBucketsResponse = ListBucketsResponse(this)
        override fun buckets(buckets: List<Bucket>): FluentBuilder = apply { this.buckets = buckets }
        override fun owner(owner: Owner): FluentBuilder = apply { this.owner = owner }
    }
}
