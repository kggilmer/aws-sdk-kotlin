// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies information about where to publish analysis or configuration results for an
 * Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
 */
class Destination private constructor(builder: BuilderImpl) {
    /**
     * Specify this only in a cross-account scenario (where source and destination bucket
     * owners are not the same), and you want to change replica ownership to the Amazon Web Services account that
     * owns the destination bucket. If this is not specified in the replication configuration, the
     * replicas are owned by same Amazon Web Services account that owns the source object.
     */
    val accessControlTranslation: AccessControlTranslation? = builder.accessControlTranslation
    /**
     * Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to
     * change replica ownership to the Amazon Web Services account that owns the destination bucket by specifying
     * the AccessControlTranslation property, this is the account ID of the
     * destination bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html">Replication Additional
     * Configuration: Changing the Replica Owner in the Amazon S3 User Guide.
     */
    val account: String? = builder.account
    /**
     * The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
     */
    val bucket: String? = builder.bucket
    /**
     * A container that provides information about encryption. If
     * SourceSelectionCriteria is specified, you must specify this element.
     */
    val encryptionConfiguration: EncryptionConfiguration? = builder.encryptionConfiguration
    /**
     * A container specifying replication metrics-related settings enabling replication
     * metrics and events.
     */
    val metrics: Metrics? = builder.metrics
    /**
     * A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time
     * when all objects and operations on objects must be replicated. Must be specified together
     * with a Metrics block.
     */
    val replicationTime: ReplicationTime? = builder.replicationTime
    /**
     * The storage class to use when replicating objects, such as S3 Standard or reduced
     * redundancy. By default, Amazon S3 uses the storage class of the source object to create the
     * object replica.
     * For valid values, see the StorageClass element of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT Bucket
     * replication action in the Amazon S3 API Reference.
     */
    val storageClass: StorageClass? = builder.storageClass

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Destination = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Destination(")
        append("accessControlTranslation=$accessControlTranslation,")
        append("account=$account,")
        append("bucket=$bucket,")
        append("encryptionConfiguration=$encryptionConfiguration,")
        append("metrics=$metrics,")
        append("replicationTime=$replicationTime,")
        append("storageClass=$storageClass)")
    }

    override fun hashCode(): kotlin.Int {
        var result = accessControlTranslation?.hashCode() ?: 0
        result = 31 * result + (account?.hashCode() ?: 0)
        result = 31 * result + (bucket?.hashCode() ?: 0)
        result = 31 * result + (encryptionConfiguration?.hashCode() ?: 0)
        result = 31 * result + (metrics?.hashCode() ?: 0)
        result = 31 * result + (replicationTime?.hashCode() ?: 0)
        result = 31 * result + (storageClass?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Destination

        if (accessControlTranslation != other.accessControlTranslation) return false
        if (account != other.account) return false
        if (bucket != other.bucket) return false
        if (encryptionConfiguration != other.encryptionConfiguration) return false
        if (metrics != other.metrics) return false
        if (replicationTime != other.replicationTime) return false
        if (storageClass != other.storageClass) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Destination = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Destination
        /**
         * Specify this only in a cross-account scenario (where source and destination bucket
         * owners are not the same), and you want to change replica ownership to the Amazon Web Services account that
         * owns the destination bucket. If this is not specified in the replication configuration, the
         * replicas are owned by same Amazon Web Services account that owns the source object.
         */
        fun accessControlTranslation(accessControlTranslation: AccessControlTranslation): FluentBuilder
        /**
         * Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to
         * change replica ownership to the Amazon Web Services account that owns the destination bucket by specifying
         * the AccessControlTranslation property, this is the account ID of the
         * destination bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html">Replication Additional
         * Configuration: Changing the Replica Owner in the Amazon S3 User Guide.
         */
        fun account(account: String): FluentBuilder
        /**
         * The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * A container that provides information about encryption. If
         * SourceSelectionCriteria is specified, you must specify this element.
         */
        fun encryptionConfiguration(encryptionConfiguration: EncryptionConfiguration): FluentBuilder
        /**
         * A container specifying replication metrics-related settings enabling replication
         * metrics and events.
         */
        fun metrics(metrics: Metrics): FluentBuilder
        /**
         * A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time
         * when all objects and operations on objects must be replicated. Must be specified together
         * with a Metrics block.
         */
        fun replicationTime(replicationTime: ReplicationTime): FluentBuilder
        /**
         * The storage class to use when replicating objects, such as S3 Standard or reduced
         * redundancy. By default, Amazon S3 uses the storage class of the source object to create the
         * object replica.
         * For valid values, see the StorageClass element of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT Bucket
         * replication action in the Amazon S3 API Reference.
         */
        fun storageClass(storageClass: StorageClass): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specify this only in a cross-account scenario (where source and destination bucket
         * owners are not the same), and you want to change replica ownership to the Amazon Web Services account that
         * owns the destination bucket. If this is not specified in the replication configuration, the
         * replicas are owned by same Amazon Web Services account that owns the source object.
         */
        var accessControlTranslation: AccessControlTranslation?
        /**
         * Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to
         * change replica ownership to the Amazon Web Services account that owns the destination bucket by specifying
         * the AccessControlTranslation property, this is the account ID of the
         * destination bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html">Replication Additional
         * Configuration: Changing the Replica Owner in the Amazon S3 User Guide.
         */
        var account: String?
        /**
         * The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results.
         */
        var bucket: String?
        /**
         * A container that provides information about encryption. If
         * SourceSelectionCriteria is specified, you must specify this element.
         */
        var encryptionConfiguration: EncryptionConfiguration?
        /**
         * A container specifying replication metrics-related settings enabling replication
         * metrics and events.
         */
        var metrics: Metrics?
        /**
         * A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time
         * when all objects and operations on objects must be replicated. Must be specified together
         * with a Metrics block.
         */
        var replicationTime: ReplicationTime?
        /**
         * The storage class to use when replicating objects, such as S3 Standard or reduced
         * redundancy. By default, Amazon S3 uses the storage class of the source object to create the
         * object replica.
         * For valid values, see the StorageClass element of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html">PUT Bucket
         * replication action in the Amazon S3 API Reference.
         */
        var storageClass: StorageClass?

        fun build(): Destination
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.AccessControlTranslation] inside the given [block]
         */
        fun accessControlTranslation(block: AccessControlTranslation.DslBuilder.() -> kotlin.Unit) {
            this.accessControlTranslation = AccessControlTranslation.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.EncryptionConfiguration] inside the given [block]
         */
        fun encryptionConfiguration(block: EncryptionConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.encryptionConfiguration = EncryptionConfiguration.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Metrics] inside the given [block]
         */
        fun metrics(block: Metrics.DslBuilder.() -> kotlin.Unit) {
            this.metrics = Metrics.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ReplicationTime] inside the given [block]
         */
        fun replicationTime(block: ReplicationTime.DslBuilder.() -> kotlin.Unit) {
            this.replicationTime = ReplicationTime.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var accessControlTranslation: AccessControlTranslation? = null
        override var account: String? = null
        override var bucket: String? = null
        override var encryptionConfiguration: EncryptionConfiguration? = null
        override var metrics: Metrics? = null
        override var replicationTime: ReplicationTime? = null
        override var storageClass: StorageClass? = null

        constructor(x: Destination) : this() {
            this.accessControlTranslation = x.accessControlTranslation
            this.account = x.account
            this.bucket = x.bucket
            this.encryptionConfiguration = x.encryptionConfiguration
            this.metrics = x.metrics
            this.replicationTime = x.replicationTime
            this.storageClass = x.storageClass
        }

        override fun build(): Destination = Destination(this)
        override fun accessControlTranslation(accessControlTranslation: AccessControlTranslation): FluentBuilder = apply { this.accessControlTranslation = accessControlTranslation }
        override fun account(account: String): FluentBuilder = apply { this.account = account }
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun encryptionConfiguration(encryptionConfiguration: EncryptionConfiguration): FluentBuilder = apply { this.encryptionConfiguration = encryptionConfiguration }
        override fun metrics(metrics: Metrics): FluentBuilder = apply { this.metrics = metrics }
        override fun replicationTime(replicationTime: ReplicationTime): FluentBuilder = apply { this.replicationTime = replicationTime }
        override fun storageClass(storageClass: StorageClass): FluentBuilder = apply { this.storageClass = storageClass }
    }
}
