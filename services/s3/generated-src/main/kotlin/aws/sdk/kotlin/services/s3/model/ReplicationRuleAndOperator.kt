// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * A container for specifying rule filters. The filters determine the subset of objects to
 * which the rule applies. This element is required only if you specify more than one filter.
 * For example:
 * If you specify both a Prefix and a Tag filter, wrap
 * these filters in an And tag.
 * If you specify a filter based on multiple tags, wrap the Tag elements
 * in an And tag.
 */
class ReplicationRuleAndOperator private constructor(builder: BuilderImpl) {
    /**
     * An object key name prefix that identifies the subset of objects to which the rule
     * applies.
     */
    val prefix: String? = builder.prefix
    /**
     * An array of tags containing key and value pairs.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicationRuleAndOperator = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicationRuleAndOperator(")
        append("prefix=$prefix,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = prefix?.hashCode() ?: 0
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicationRuleAndOperator

        if (prefix != other.prefix) return false
        if (tags != other.tags) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicationRuleAndOperator = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicationRuleAndOperator
        /**
         * An object key name prefix that identifies the subset of objects to which the rule
         * applies.
         */
        fun prefix(prefix: String): FluentBuilder
        /**
         * An array of tags containing key and value pairs.
         */
        fun tags(tags: List<Tag>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * An object key name prefix that identifies the subset of objects to which the rule
         * applies.
         */
        var prefix: String?
        /**
         * An array of tags containing key and value pairs.
         */
        var tags: List<Tag>?

        fun build(): ReplicationRuleAndOperator
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var prefix: String? = null
        override var tags: List<Tag>? = null

        constructor(x: ReplicationRuleAndOperator) : this() {
            this.prefix = x.prefix
            this.tags = x.tags
        }

        override fun build(): ReplicationRuleAndOperator = ReplicationRuleAndOperator(this)
        override fun prefix(prefix: String): FluentBuilder = apply { this.prefix = prefix }
        override fun tags(tags: List<Tag>): FluentBuilder = apply { this.tags = tags }
    }
}
