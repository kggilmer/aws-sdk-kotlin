// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name is globally
 * unique, and the namespace is shared by all Amazon Web Services accounts.
 */
class Bucket private constructor(builder: BuilderImpl) {
    /**
     * Date the bucket was created. This date can change when making changes to your bucket, such as editing its bucket policy.
     */
    val creationDate: Instant? = builder.creationDate
    /**
     * The name of the bucket.
     */
    val name: String? = builder.name

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Bucket = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Bucket(")
        append("creationDate=$creationDate,")
        append("name=$name)")
    }

    override fun hashCode(): kotlin.Int {
        var result = creationDate?.hashCode() ?: 0
        result = 31 * result + (name?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Bucket

        if (creationDate != other.creationDate) return false
        if (name != other.name) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Bucket = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Bucket
        /**
         * Date the bucket was created. This date can change when making changes to your bucket, such as editing its bucket policy.
         */
        fun creationDate(creationDate: Instant): FluentBuilder
        /**
         * The name of the bucket.
         */
        fun name(name: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Date the bucket was created. This date can change when making changes to your bucket, such as editing its bucket policy.
         */
        var creationDate: Instant?
        /**
         * The name of the bucket.
         */
        var name: String?

        fun build(): Bucket
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var creationDate: Instant? = null
        override var name: String? = null

        constructor(x: Bucket) : this() {
            this.creationDate = x.creationDate
            this.name = x.name
        }

        override fun build(): Bucket = Bucket(this)
        override fun creationDate(creationDate: Instant): FluentBuilder = apply { this.creationDate = creationDate }
        override fun name(name: String): FluentBuilder = apply { this.name = name }
    }
}
