// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class GetObjectRetentionResponse private constructor(builder: BuilderImpl) {
    /**
     * The container element for an object's retention settings.
     */
    val retention: ObjectLockRetention? = builder.retention

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetObjectRetentionResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetObjectRetentionResponse(")
        append("retention=$retention)")
    }

    override fun hashCode(): kotlin.Int {
        var result = retention?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetObjectRetentionResponse

        if (retention != other.retention) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetObjectRetentionResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetObjectRetentionResponse
        /**
         * The container element for an object's retention settings.
         */
        fun retention(retention: ObjectLockRetention): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The container element for an object's retention settings.
         */
        var retention: ObjectLockRetention?

        fun build(): GetObjectRetentionResponse
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ObjectLockRetention] inside the given [block]
         */
        fun retention(block: ObjectLockRetention.DslBuilder.() -> kotlin.Unit) {
            this.retention = ObjectLockRetention.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var retention: ObjectLockRetention? = null

        constructor(x: GetObjectRetentionResponse) : this() {
            this.retention = x.retention
        }

        override fun build(): GetObjectRetentionResponse = GetObjectRetentionResponse(this)
        override fun retention(retention: ObjectLockRetention): FluentBuilder = apply { this.retention = retention }
    }
}
