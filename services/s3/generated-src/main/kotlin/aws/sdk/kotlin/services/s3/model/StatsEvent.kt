// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Container for the Stats Event.
 */
class StatsEvent private constructor(builder: BuilderImpl) {
    /**
     * The Stats event details.
     */
    val details: Stats? = builder.details

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): StatsEvent = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("StatsEvent(")
        append("details=$details)")
    }

    override fun hashCode(): kotlin.Int {
        var result = details?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as StatsEvent

        if (details != other.details) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): StatsEvent = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): StatsEvent
        /**
         * The Stats event details.
         */
        fun details(details: Stats): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The Stats event details.
         */
        var details: Stats?

        fun build(): StatsEvent
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Stats] inside the given [block]
         */
        fun details(block: Stats.DslBuilder.() -> kotlin.Unit) {
            this.details = Stats.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var details: Stats? = null

        constructor(x: StatsEvent) : this() {
            this.details = x.details
        }

        override fun build(): StatsEvent = StatsEvent(this)
        override fun details(details: Stats): FluentBuilder = apply { this.details = details }
    }
}
