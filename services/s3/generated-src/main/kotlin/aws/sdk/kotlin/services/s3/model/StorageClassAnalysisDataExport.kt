// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Container for data related to the storage class analysis for an Amazon S3 bucket for
 * export.
 */
class StorageClassAnalysisDataExport private constructor(builder: BuilderImpl) {
    /**
     * The place to store the data for an analysis.
     */
    val destination: AnalyticsExportDestination? = builder.destination
    /**
     * The version of the output schema to use when exporting data. Must be
     * V_1.
     */
    val outputSchemaVersion: StorageClassAnalysisSchemaVersion? = builder.outputSchemaVersion

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): StorageClassAnalysisDataExport = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("StorageClassAnalysisDataExport(")
        append("destination=$destination,")
        append("outputSchemaVersion=$outputSchemaVersion)")
    }

    override fun hashCode(): kotlin.Int {
        var result = destination?.hashCode() ?: 0
        result = 31 * result + (outputSchemaVersion?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as StorageClassAnalysisDataExport

        if (destination != other.destination) return false
        if (outputSchemaVersion != other.outputSchemaVersion) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): StorageClassAnalysisDataExport = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): StorageClassAnalysisDataExport
        /**
         * The place to store the data for an analysis.
         */
        fun destination(destination: AnalyticsExportDestination): FluentBuilder
        /**
         * The version of the output schema to use when exporting data. Must be
         * V_1.
         */
        fun outputSchemaVersion(outputSchemaVersion: StorageClassAnalysisSchemaVersion): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The place to store the data for an analysis.
         */
        var destination: AnalyticsExportDestination?
        /**
         * The version of the output schema to use when exporting data. Must be
         * V_1.
         */
        var outputSchemaVersion: StorageClassAnalysisSchemaVersion?

        fun build(): StorageClassAnalysisDataExport
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.AnalyticsExportDestination] inside the given [block]
         */
        fun destination(block: AnalyticsExportDestination.DslBuilder.() -> kotlin.Unit) {
            this.destination = AnalyticsExportDestination.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var destination: AnalyticsExportDestination? = null
        override var outputSchemaVersion: StorageClassAnalysisSchemaVersion? = null

        constructor(x: StorageClassAnalysisDataExport) : this() {
            this.destination = x.destination
            this.outputSchemaVersion = x.outputSchemaVersion
        }

        override fun build(): StorageClassAnalysisDataExport = StorageClassAnalysisDataExport(this)
        override fun destination(destination: AnalyticsExportDestination): FluentBuilder = apply { this.destination = destination }
        override fun outputSchemaVersion(outputSchemaVersion: StorageClassAnalysisSchemaVersion): FluentBuilder = apply { this.outputSchemaVersion = outputSchemaVersion }
    }
}
