// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * A container for object key name prefix and suffix filtering rules.
 */
class S3KeyFilter private constructor(builder: BuilderImpl) {
    /**
     * A list of containers for the key-value pair that defines the criteria for the filter
     * rule.
     */
    val filterRules: List<FilterRule>? = builder.filterRules

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): S3KeyFilter = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("S3KeyFilter(")
        append("filterRules=$filterRules)")
    }

    override fun hashCode(): kotlin.Int {
        var result = filterRules?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as S3KeyFilter

        if (filterRules != other.filterRules) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): S3KeyFilter = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): S3KeyFilter
        /**
         * A list of containers for the key-value pair that defines the criteria for the filter
         * rule.
         */
        fun filterRules(filterRules: List<FilterRule>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A list of containers for the key-value pair that defines the criteria for the filter
         * rule.
         */
        var filterRules: List<FilterRule>?

        fun build(): S3KeyFilter
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var filterRules: List<FilterRule>? = null

        constructor(x: S3KeyFilter) : this() {
            this.filterRules = x.filterRules
        }

        override fun build(): S3KeyFilter = S3KeyFilter(this)
        override fun filterRules(filterRules: List<FilterRule>): FluentBuilder = apply { this.filterRules = filterRules }
    }
}
