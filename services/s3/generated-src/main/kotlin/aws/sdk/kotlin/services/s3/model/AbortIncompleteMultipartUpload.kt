// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will
 * wait before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">
 * Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy in the
 * Amazon S3 User Guide.
 */
class AbortIncompleteMultipartUpload private constructor(builder: BuilderImpl) {
    /**
     * Specifies the number of days after which Amazon S3 aborts an incomplete multipart
     * upload.
     */
    val daysAfterInitiation: Int = builder.daysAfterInitiation

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): AbortIncompleteMultipartUpload = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("AbortIncompleteMultipartUpload(")
        append("daysAfterInitiation=$daysAfterInitiation)")
    }

    override fun hashCode(): kotlin.Int {
        var result = daysAfterInitiation
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as AbortIncompleteMultipartUpload

        if (daysAfterInitiation != other.daysAfterInitiation) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): AbortIncompleteMultipartUpload = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): AbortIncompleteMultipartUpload
        /**
         * Specifies the number of days after which Amazon S3 aborts an incomplete multipart
         * upload.
         */
        fun daysAfterInitiation(daysAfterInitiation: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies the number of days after which Amazon S3 aborts an incomplete multipart
         * upload.
         */
        var daysAfterInitiation: Int

        fun build(): AbortIncompleteMultipartUpload
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var daysAfterInitiation: Int = 0

        constructor(x: AbortIncompleteMultipartUpload) : this() {
            this.daysAfterInitiation = x.daysAfterInitiation
        }

        override fun build(): AbortIncompleteMultipartUpload = AbortIncompleteMultipartUpload(this)
        override fun daysAfterInitiation(daysAfterInitiation: Int): FluentBuilder = apply { this.daysAfterInitiation = daysAfterInitiation }
    }
}
