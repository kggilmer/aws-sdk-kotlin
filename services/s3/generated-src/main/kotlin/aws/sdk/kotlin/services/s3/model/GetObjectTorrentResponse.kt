// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import aws.smithy.kotlin.runtime.content.ByteStream

class GetObjectTorrentResponse private constructor(builder: BuilderImpl) {
    /**
     * A Bencoded dictionary as defined by the BitTorrent specification
     */
    val body: ByteStream? = builder.body
    /**
     * If present, indicates that the requester was successfully charged for the
     * request.
     */
    val requestCharged: RequestCharged? = builder.requestCharged

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetObjectTorrentResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetObjectTorrentResponse(")
        append("body=$body,")
        append("requestCharged=$requestCharged)")
    }

    override fun hashCode(): kotlin.Int {
        var result = body?.hashCode() ?: 0
        result = 31 * result + (requestCharged?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetObjectTorrentResponse

        if (body != other.body) return false
        if (requestCharged != other.requestCharged) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetObjectTorrentResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetObjectTorrentResponse
        /**
         * A Bencoded dictionary as defined by the BitTorrent specification
         */
        fun body(body: ByteStream): FluentBuilder
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        fun requestCharged(requestCharged: RequestCharged): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A Bencoded dictionary as defined by the BitTorrent specification
         */
        var body: ByteStream?
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        var requestCharged: RequestCharged?

        fun build(): GetObjectTorrentResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var body: ByteStream? = null
        override var requestCharged: RequestCharged? = null

        constructor(x: GetObjectTorrentResponse) : this() {
            this.body = x.body
            this.requestCharged = x.requestCharged
        }

        override fun build(): GetObjectTorrentResponse = GetObjectTorrentResponse(this)
        override fun body(body: ByteStream): FluentBuilder = apply { this.body = body }
        override fun requestCharged(requestCharged: RequestCharged): FluentBuilder = apply { this.requestCharged = requestCharged }
    }
}
