// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class SelectObjectContentResponse private constructor(builder: BuilderImpl) {
    /**
     * The array of results.
     */
    val payload: SelectObjectContentEventStream? = builder.payload

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): SelectObjectContentResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("SelectObjectContentResponse(")
        append("payload=$payload)")
    }

    override fun hashCode(): kotlin.Int {
        var result = payload?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as SelectObjectContentResponse

        if (payload != other.payload) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): SelectObjectContentResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): SelectObjectContentResponse
        /**
         * The array of results.
         */
        fun payload(payload: SelectObjectContentEventStream): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The array of results.
         */
        var payload: SelectObjectContentEventStream?

        fun build(): SelectObjectContentResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var payload: SelectObjectContentEventStream? = null

        constructor(x: SelectObjectContentResponse) : this() {
            this.payload = x.payload
        }

        override fun build(): SelectObjectContentResponse = SelectObjectContentResponse(this)
        override fun payload(payload: SelectObjectContentEventStream): FluentBuilder = apply { this.payload = payload }
    }
}
