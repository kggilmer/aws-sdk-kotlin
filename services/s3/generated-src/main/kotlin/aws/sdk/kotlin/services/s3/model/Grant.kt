// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Container for grant information.
 */
class Grant private constructor(builder: BuilderImpl) {
    /**
     * The person being granted permissions.
     */
    val grantee: Grantee? = builder.grantee
    /**
     * Specifies the permission given to the grantee.
     */
    val permission: Permission? = builder.permission

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Grant = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Grant(")
        append("grantee=$grantee,")
        append("permission=$permission)")
    }

    override fun hashCode(): kotlin.Int {
        var result = grantee?.hashCode() ?: 0
        result = 31 * result + (permission?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Grant

        if (grantee != other.grantee) return false
        if (permission != other.permission) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Grant = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Grant
        /**
         * The person being granted permissions.
         */
        fun grantee(grantee: Grantee): FluentBuilder
        /**
         * Specifies the permission given to the grantee.
         */
        fun permission(permission: Permission): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The person being granted permissions.
         */
        var grantee: Grantee?
        /**
         * Specifies the permission given to the grantee.
         */
        var permission: Permission?

        fun build(): Grant
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Grantee] inside the given [block]
         */
        fun grantee(block: Grantee.DslBuilder.() -> kotlin.Unit) {
            this.grantee = Grantee.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var grantee: Grantee? = null
        override var permission: Permission? = null

        constructor(x: Grant) : this() {
            this.grantee = x.grantee
            this.permission = x.permission
        }

        override fun build(): Grant = Grant(this)
        override fun grantee(grantee: Grantee): FluentBuilder = apply { this.grantee = grantee }
        override fun permission(permission: Permission): FluentBuilder = apply { this.permission = permission }
    }
}
