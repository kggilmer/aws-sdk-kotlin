// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class PutBucketVersioningRequest private constructor(builder: BuilderImpl) {
    /**
     * The bucket name.
     */
    val bucket: String? = builder.bucket
    /**
     * >The base64-encoded 128-bit MD5 digest of the data. You must use this header as a
     * message integrity check to verify that the request body was not corrupted in transit. For
     * more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC
     * 1864.
     * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
     */
    val contentMd5: String? = builder.contentMd5
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: String? = builder.expectedBucketOwner
    /**
     * The concatenation of the authentication device's serial number, a space, and the value
     * that is displayed on your authentication device.
     */
    val mfa: String? = builder.mfa
    /**
     * Container for setting the versioning state.
     */
    val versioningConfiguration: VersioningConfiguration? = builder.versioningConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PutBucketVersioningRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PutBucketVersioningRequest(")
        append("bucket=$bucket,")
        append("contentMd5=$contentMd5,")
        append("expectedBucketOwner=$expectedBucketOwner,")
        append("mfa=$mfa,")
        append("versioningConfiguration=$versioningConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (contentMd5?.hashCode() ?: 0)
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        result = 31 * result + (mfa?.hashCode() ?: 0)
        result = 31 * result + (versioningConfiguration?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PutBucketVersioningRequest

        if (bucket != other.bucket) return false
        if (contentMd5 != other.contentMd5) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false
        if (mfa != other.mfa) return false
        if (versioningConfiguration != other.versioningConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PutBucketVersioningRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PutBucketVersioningRequest
        /**
         * The bucket name.
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * >The base64-encoded 128-bit MD5 digest of the data. You must use this header as a
         * message integrity check to verify that the request body was not corrupted in transit. For
         * more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC
         * 1864.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        fun contentMd5(contentMd5: String): FluentBuilder
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder
        /**
         * The concatenation of the authentication device's serial number, a space, and the value
         * that is displayed on your authentication device.
         */
        fun mfa(mfa: String): FluentBuilder
        /**
         * Container for setting the versioning state.
         */
        fun versioningConfiguration(versioningConfiguration: VersioningConfiguration): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The bucket name.
         */
        var bucket: String?
        /**
         * >The base64-encoded 128-bit MD5 digest of the data. You must use this header as a
         * message integrity check to verify that the request body was not corrupted in transit. For
         * more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC
         * 1864.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        var contentMd5: String?
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: String?
        /**
         * The concatenation of the authentication device's serial number, a space, and the value
         * that is displayed on your authentication device.
         */
        var mfa: String?
        /**
         * Container for setting the versioning state.
         */
        var versioningConfiguration: VersioningConfiguration?

        fun build(): PutBucketVersioningRequest
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.VersioningConfiguration] inside the given [block]
         */
        fun versioningConfiguration(block: VersioningConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.versioningConfiguration = VersioningConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucket: String? = null
        override var contentMd5: String? = null
        override var expectedBucketOwner: String? = null
        override var mfa: String? = null
        override var versioningConfiguration: VersioningConfiguration? = null

        constructor(x: PutBucketVersioningRequest) : this() {
            this.bucket = x.bucket
            this.contentMd5 = x.contentMd5
            this.expectedBucketOwner = x.expectedBucketOwner
            this.mfa = x.mfa
            this.versioningConfiguration = x.versioningConfiguration
        }

        override fun build(): PutBucketVersioningRequest = PutBucketVersioningRequest(this)
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun contentMd5(contentMd5: String): FluentBuilder = apply { this.contentMd5 = contentMd5 }
        override fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder = apply { this.expectedBucketOwner = expectedBucketOwner }
        override fun mfa(mfa: String): FluentBuilder = apply { this.mfa = mfa }
        override fun versioningConfiguration(versioningConfiguration: VersioningConfiguration): FluentBuilder = apply { this.versioningConfiguration = versioningConfiguration }
    }
}
