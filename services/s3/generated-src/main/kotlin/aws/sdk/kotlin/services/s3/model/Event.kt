// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * The bucket event for which to send notifications.
 */
sealed class Event {

    abstract val value: kotlin.String

    object S3ObjectCreated : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectCreated:*"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectCreatedCompleteMultipartUpload : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectCreated:CompleteMultipartUpload"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectCreatedCopy : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectCreated:Copy"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectCreatedPost : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectCreated:Post"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectCreatedPut : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectCreated:Put"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectRemoved : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectRemoved:*"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectRemovedDelete : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectRemoved:Delete"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectRemovedDeleteMarkerCreated : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectRemoved:DeleteMarkerCreated"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectRestore : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectRestore:*"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectRestoreCompleted : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectRestore:Completed"
        override fun toString(): kotlin.String = value
    }

    object S3ObjectRestorePost : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ObjectRestore:Post"
        override fun toString(): kotlin.String = value
    }

    object S3ReducedRedundancyLostObject : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:ReducedRedundancyLostObject"
        override fun toString(): kotlin.String = value
    }

    object S3Replication : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:Replication:*"
        override fun toString(): kotlin.String = value
    }

    object S3ReplicationOperationFailedReplication : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:Replication:OperationFailedReplication"
        override fun toString(): kotlin.String = value
    }

    object S3ReplicationOperationMissedThreshold : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:Replication:OperationMissedThreshold"
        override fun toString(): kotlin.String = value
    }

    object S3ReplicationOperationNotTracked : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:Replication:OperationNotTracked"
        override fun toString(): kotlin.String = value
    }

    object S3ReplicationOperationReplicatedAfterThreshold : aws.sdk.kotlin.services.s3.model.Event() {
        override val value: kotlin.String = "s3:Replication:OperationReplicatedAfterThreshold"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.s3.model.Event() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.s3.model.Event = when(str) {
            "s3:ObjectCreated:*" -> S3ObjectCreated
            "s3:ObjectCreated:CompleteMultipartUpload" -> S3ObjectCreatedCompleteMultipartUpload
            "s3:ObjectCreated:Copy" -> S3ObjectCreatedCopy
            "s3:ObjectCreated:Post" -> S3ObjectCreatedPost
            "s3:ObjectCreated:Put" -> S3ObjectCreatedPut
            "s3:ObjectRemoved:*" -> S3ObjectRemoved
            "s3:ObjectRemoved:Delete" -> S3ObjectRemovedDelete
            "s3:ObjectRemoved:DeleteMarkerCreated" -> S3ObjectRemovedDeleteMarkerCreated
            "s3:ObjectRestore:*" -> S3ObjectRestore
            "s3:ObjectRestore:Completed" -> S3ObjectRestoreCompleted
            "s3:ObjectRestore:Post" -> S3ObjectRestorePost
            "s3:ReducedRedundancyLostObject" -> S3ReducedRedundancyLostObject
            "s3:Replication:*" -> S3Replication
            "s3:Replication:OperationFailedReplication" -> S3ReplicationOperationFailedReplication
            "s3:Replication:OperationMissedThreshold" -> S3ReplicationOperationMissedThreshold
            "s3:Replication:OperationNotTracked" -> S3ReplicationOperationNotTracked
            "s3:Replication:OperationReplicatedAfterThreshold" -> S3ReplicationOperationReplicatedAfterThreshold
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.s3.model.Event> = listOf(
            S3ObjectCreated,
            S3ObjectCreatedCompleteMultipartUpload,
            S3ObjectCreatedCopy,
            S3ObjectCreatedPost,
            S3ObjectCreatedPut,
            S3ObjectRemoved,
            S3ObjectRemovedDelete,
            S3ObjectRemovedDeleteMarkerCreated,
            S3ObjectRestore,
            S3ObjectRestoreCompleted,
            S3ObjectRestorePost,
            S3ReducedRedundancyLostObject,
            S3Replication,
            S3ReplicationOperationFailedReplication,
            S3ReplicationOperationMissedThreshold,
            S3ReplicationOperationNotTracked,
            S3ReplicationOperationReplicatedAfterThreshold
        )
    }
}
