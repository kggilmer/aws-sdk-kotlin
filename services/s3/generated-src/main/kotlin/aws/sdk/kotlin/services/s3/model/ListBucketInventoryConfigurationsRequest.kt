// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class ListBucketInventoryConfigurationsRequest private constructor(builder: BuilderImpl) {
    /**
     * The name of the bucket containing the inventory configurations to retrieve.
     */
    val bucket: String? = builder.bucket
    /**
     * The marker used to continue an inventory configuration listing that has been truncated.
     * Use the NextContinuationToken from a previously truncated list response to continue the
     * listing. The continuation token is an opaque value that Amazon S3 understands.
     */
    val continuationToken: String? = builder.continuationToken
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: String? = builder.expectedBucketOwner

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ListBucketInventoryConfigurationsRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ListBucketInventoryConfigurationsRequest(")
        append("bucket=$bucket,")
        append("continuationToken=$continuationToken,")
        append("expectedBucketOwner=$expectedBucketOwner)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (continuationToken?.hashCode() ?: 0)
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ListBucketInventoryConfigurationsRequest

        if (bucket != other.bucket) return false
        if (continuationToken != other.continuationToken) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ListBucketInventoryConfigurationsRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ListBucketInventoryConfigurationsRequest
        /**
         * The name of the bucket containing the inventory configurations to retrieve.
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * The marker used to continue an inventory configuration listing that has been truncated.
         * Use the NextContinuationToken from a previously truncated list response to continue the
         * listing. The continuation token is an opaque value that Amazon S3 understands.
         */
        fun continuationToken(continuationToken: String): FluentBuilder
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the bucket containing the inventory configurations to retrieve.
         */
        var bucket: String?
        /**
         * The marker used to continue an inventory configuration listing that has been truncated.
         * Use the NextContinuationToken from a previously truncated list response to continue the
         * listing. The continuation token is an opaque value that Amazon S3 understands.
         */
        var continuationToken: String?
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: String?

        fun build(): ListBucketInventoryConfigurationsRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucket: String? = null
        override var continuationToken: String? = null
        override var expectedBucketOwner: String? = null

        constructor(x: ListBucketInventoryConfigurationsRequest) : this() {
            this.bucket = x.bucket
            this.continuationToken = x.continuationToken
            this.expectedBucketOwner = x.expectedBucketOwner
        }

        override fun build(): ListBucketInventoryConfigurationsRequest = ListBucketInventoryConfigurationsRequest(this)
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun continuationToken(continuationToken: String): FluentBuilder = apply { this.continuationToken = continuationToken }
        override fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder = apply { this.expectedBucketOwner = expectedBucketOwner }
    }
}
