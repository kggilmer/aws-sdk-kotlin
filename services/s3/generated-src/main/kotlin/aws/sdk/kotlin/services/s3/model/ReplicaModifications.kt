// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * A filter that you can specify for selection for modifications on replicas. Amazon S3 doesn't
 * replicate replica modifications by default. In the latest version of replication
 * configuration (when Filter is specified), you can specify this element and set
 * the status to Enabled to replicate modifications on replicas.
 * If you don't specify the Filter element, Amazon S3 assumes that the
 * replication configuration is the earlier version, V1. In the earlier version, this
 * element is not allowed.
 */
class ReplicaModifications private constructor(builder: BuilderImpl) {
    /**
     * Specifies whether Amazon S3 replicates modifications on replicas.
     */
    val status: ReplicaModificationsStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicaModifications = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicaModifications(")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = status?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicaModifications

        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicaModifications = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicaModifications
        /**
         * Specifies whether Amazon S3 replicates modifications on replicas.
         */
        fun status(status: ReplicaModificationsStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies whether Amazon S3 replicates modifications on replicas.
         */
        var status: ReplicaModificationsStatus?

        fun build(): ReplicaModifications
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var status: ReplicaModificationsStatus? = null

        constructor(x: ReplicaModifications) : this() {
            this.status = x.status
        }

        override fun build(): ReplicaModifications = ReplicaModifications(this)
        override fun status(status: ReplicaModificationsStatus): FluentBuilder = apply { this.status = status }
    }
}
