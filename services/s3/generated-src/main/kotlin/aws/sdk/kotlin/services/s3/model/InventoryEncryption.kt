// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Contains the type of server-side encryption used to encrypt the inventory
 * results.
 */
class InventoryEncryption private constructor(builder: BuilderImpl) {
    /**
     * Specifies the use of SSE-KMS to encrypt delivered inventory reports.
     */
    val ssekms: Ssekms? = builder.ssekms
    /**
     * Specifies the use of SSE-S3 to encrypt delivered inventory reports.
     */
    val sses3: Sses3? = builder.sses3

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InventoryEncryption = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InventoryEncryption(")
        append("ssekms=$ssekms,")
        append("sses3=$sses3)")
    }

    override fun hashCode(): kotlin.Int {
        var result = ssekms?.hashCode() ?: 0
        result = 31 * result + (sses3?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InventoryEncryption

        if (ssekms != other.ssekms) return false
        if (sses3 != other.sses3) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InventoryEncryption = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InventoryEncryption
        /**
         * Specifies the use of SSE-KMS to encrypt delivered inventory reports.
         */
        fun ssekms(ssekms: Ssekms): FluentBuilder
        /**
         * Specifies the use of SSE-S3 to encrypt delivered inventory reports.
         */
        fun sses3(sses3: Sses3): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies the use of SSE-KMS to encrypt delivered inventory reports.
         */
        var ssekms: Ssekms?
        /**
         * Specifies the use of SSE-S3 to encrypt delivered inventory reports.
         */
        var sses3: Sses3?

        fun build(): InventoryEncryption
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Ssekms] inside the given [block]
         */
        fun ssekms(block: Ssekms.DslBuilder.() -> kotlin.Unit) {
            this.ssekms = Ssekms.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Sses3] inside the given [block]
         */
        fun sses3(block: Sses3.DslBuilder.() -> kotlin.Unit) {
            this.sses3 = Sses3.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var ssekms: Ssekms? = null
        override var sses3: Sses3? = null

        constructor(x: InventoryEncryption) : this() {
            this.ssekms = x.ssekms
            this.sses3 = x.sses3
        }

        override fun build(): InventoryEncryption = InventoryEncryption(this)
        override fun ssekms(ssekms: Ssekms): FluentBuilder = apply { this.ssekms = ssekms }
        override fun sses3(sses3: Sses3): FluentBuilder = apply { this.sses3 = sses3 }
    }
}
