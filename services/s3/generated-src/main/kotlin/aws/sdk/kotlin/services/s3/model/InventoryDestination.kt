// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies the inventory configuration for an Amazon S3 bucket.
 */
class InventoryDestination private constructor(builder: BuilderImpl) {
    /**
     * Contains the bucket name, file format, bucket owner (optional), and prefix (optional)
     * where inventory results are published.
     */
    val s3BucketDestination: InventoryS3BucketDestination? = builder.s3BucketDestination

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InventoryDestination = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InventoryDestination(")
        append("s3BucketDestination=$s3BucketDestination)")
    }

    override fun hashCode(): kotlin.Int {
        var result = s3BucketDestination?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InventoryDestination

        if (s3BucketDestination != other.s3BucketDestination) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InventoryDestination = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InventoryDestination
        /**
         * Contains the bucket name, file format, bucket owner (optional), and prefix (optional)
         * where inventory results are published.
         */
        fun s3BucketDestination(s3BucketDestination: InventoryS3BucketDestination): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Contains the bucket name, file format, bucket owner (optional), and prefix (optional)
         * where inventory results are published.
         */
        var s3BucketDestination: InventoryS3BucketDestination?

        fun build(): InventoryDestination
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.InventoryS3BucketDestination] inside the given [block]
         */
        fun s3BucketDestination(block: InventoryS3BucketDestination.DslBuilder.() -> kotlin.Unit) {
            this.s3BucketDestination = InventoryS3BucketDestination.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var s3BucketDestination: InventoryS3BucketDestination? = null

        constructor(x: InventoryDestination) : this() {
            this.s3BucketDestination = x.s3BucketDestination
        }

        override fun build(): InventoryDestination = InventoryDestination(this)
        override fun s3BucketDestination(s3BucketDestination: InventoryS3BucketDestination): FluentBuilder = apply { this.s3BucketDestination = s3BucketDestination }
    }
}
