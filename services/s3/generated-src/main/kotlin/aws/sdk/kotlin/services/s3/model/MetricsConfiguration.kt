// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies a metrics configuration for the CloudWatch request metrics (specified by the
 * metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics
 * configuration, note that this is a full replacement of the existing metrics configuration.
 * If you don't include the elements you want to keep, they are erased. For more information,
 * see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html">PutBucketMetricsConfiguration.
 */
class MetricsConfiguration private constructor(builder: BuilderImpl) {
    /**
     * Specifies a metrics configuration filter. The metrics configuration will only include
     * objects that meet the filter's criteria. A filter must be a prefix, an object tag, an access point ARN, or a conjunction
     * (MetricsAndOperator).
     */
    val filter: MetricsFilter? = builder.filter
    /**
     * The ID used to identify the metrics configuration.
     */
    val id: String? = builder.id

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): MetricsConfiguration = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("MetricsConfiguration(")
        append("filter=$filter,")
        append("id=$id)")
    }

    override fun hashCode(): kotlin.Int {
        var result = filter?.hashCode() ?: 0
        result = 31 * result + (id?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as MetricsConfiguration

        if (filter != other.filter) return false
        if (id != other.id) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): MetricsConfiguration = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): MetricsConfiguration
        /**
         * Specifies a metrics configuration filter. The metrics configuration will only include
         * objects that meet the filter's criteria. A filter must be a prefix, an object tag, an access point ARN, or a conjunction
         * (MetricsAndOperator).
         */
        fun filter(filter: MetricsFilter): FluentBuilder
        /**
         * The ID used to identify the metrics configuration.
         */
        fun id(id: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies a metrics configuration filter. The metrics configuration will only include
         * objects that meet the filter's criteria. A filter must be a prefix, an object tag, an access point ARN, or a conjunction
         * (MetricsAndOperator).
         */
        var filter: MetricsFilter?
        /**
         * The ID used to identify the metrics configuration.
         */
        var id: String?

        fun build(): MetricsConfiguration
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var filter: MetricsFilter? = null
        override var id: String? = null

        constructor(x: MetricsConfiguration) : this() {
            this.filter = x.filter
            this.id = x.id
        }

        override fun build(): MetricsConfiguration = MetricsConfiguration(this)
        override fun filter(filter: MetricsFilter): FluentBuilder = apply { this.filter = filter }
        override fun id(id: String): FluentBuilder = apply { this.id = id }
    }
}
