// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class PutBucketReplicationRequest private constructor(builder: BuilderImpl) {
    /**
     * The name of the bucket
     */
    val bucket: String? = builder.bucket
    /**
     * The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message
     * integrity check to verify that the request body was not corrupted in transit. For more
     * information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.
     * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
     */
    val contentMd5: String? = builder.contentMd5
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: String? = builder.expectedBucketOwner
    /**
     * A container for replication rules. You can add up to 1,000 rules. The maximum size of a
     * replication configuration is 2 MB.
     */
    val replicationConfiguration: ReplicationConfiguration? = builder.replicationConfiguration
    /**
     * A token to allow Object Lock to be enabled for an existing bucket.
     */
    val token: String? = builder.token

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PutBucketReplicationRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PutBucketReplicationRequest(")
        append("bucket=$bucket,")
        append("contentMd5=$contentMd5,")
        append("expectedBucketOwner=$expectedBucketOwner,")
        append("replicationConfiguration=$replicationConfiguration,")
        append("token=$token)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (contentMd5?.hashCode() ?: 0)
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        result = 31 * result + (replicationConfiguration?.hashCode() ?: 0)
        result = 31 * result + (token?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PutBucketReplicationRequest

        if (bucket != other.bucket) return false
        if (contentMd5 != other.contentMd5) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false
        if (replicationConfiguration != other.replicationConfiguration) return false
        if (token != other.token) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PutBucketReplicationRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PutBucketReplicationRequest
        /**
         * The name of the bucket
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message
         * integrity check to verify that the request body was not corrupted in transit. For more
         * information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        fun contentMd5(contentMd5: String): FluentBuilder
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder
        /**
         * A container for replication rules. You can add up to 1,000 rules. The maximum size of a
         * replication configuration is 2 MB.
         */
        fun replicationConfiguration(replicationConfiguration: ReplicationConfiguration): FluentBuilder
        /**
         * A token to allow Object Lock to be enabled for an existing bucket.
         */
        fun token(token: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the bucket
         */
        var bucket: String?
        /**
         * The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message
         * integrity check to verify that the request body was not corrupted in transit. For more
         * information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        var contentMd5: String?
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: String?
        /**
         * A container for replication rules. You can add up to 1,000 rules. The maximum size of a
         * replication configuration is 2 MB.
         */
        var replicationConfiguration: ReplicationConfiguration?
        /**
         * A token to allow Object Lock to be enabled for an existing bucket.
         */
        var token: String?

        fun build(): PutBucketReplicationRequest
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ReplicationConfiguration] inside the given [block]
         */
        fun replicationConfiguration(block: ReplicationConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.replicationConfiguration = ReplicationConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucket: String? = null
        override var contentMd5: String? = null
        override var expectedBucketOwner: String? = null
        override var replicationConfiguration: ReplicationConfiguration? = null
        override var token: String? = null

        constructor(x: PutBucketReplicationRequest) : this() {
            this.bucket = x.bucket
            this.contentMd5 = x.contentMd5
            this.expectedBucketOwner = x.expectedBucketOwner
            this.replicationConfiguration = x.replicationConfiguration
            this.token = x.token
        }

        override fun build(): PutBucketReplicationRequest = PutBucketReplicationRequest(this)
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun contentMd5(contentMd5: String): FluentBuilder = apply { this.contentMd5 = contentMd5 }
        override fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder = apply { this.expectedBucketOwner = expectedBucketOwner }
        override fun replicationConfiguration(replicationConfiguration: ReplicationConfiguration): FluentBuilder = apply { this.replicationConfiguration = replicationConfiguration }
        override fun token(token: String): FluentBuilder = apply { this.token = token }
    }
}
