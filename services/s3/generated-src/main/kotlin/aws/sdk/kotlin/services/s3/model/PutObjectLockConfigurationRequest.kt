// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class PutObjectLockConfigurationRequest private constructor(builder: BuilderImpl) {
    /**
     * The bucket whose Object Lock configuration you want to create or replace.
     */
    val bucket: String? = builder.bucket
    /**
     * The MD5 hash for the request body.
     * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
     */
    val contentMd5: String? = builder.contentMd5
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: String? = builder.expectedBucketOwner
    /**
     * The Object Lock configuration that you want to apply to the specified bucket.
     */
    val objectLockConfiguration: ObjectLockConfiguration? = builder.objectLockConfiguration
    /**
     * Confirms that the requester knows that they will be charged for the request. Bucket
     * owners need not specify this parameter in their requests. For information about downloading
     * objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
     * Requestor Pays Buckets in the Amazon S3 User Guide.
     */
    val requestPayer: RequestPayer? = builder.requestPayer
    /**
     * A token to allow Object Lock to be enabled for an existing bucket.
     */
    val token: String? = builder.token

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PutObjectLockConfigurationRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PutObjectLockConfigurationRequest(")
        append("bucket=$bucket,")
        append("contentMd5=$contentMd5,")
        append("expectedBucketOwner=$expectedBucketOwner,")
        append("objectLockConfiguration=$objectLockConfiguration,")
        append("requestPayer=$requestPayer,")
        append("token=$token)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (contentMd5?.hashCode() ?: 0)
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        result = 31 * result + (objectLockConfiguration?.hashCode() ?: 0)
        result = 31 * result + (requestPayer?.hashCode() ?: 0)
        result = 31 * result + (token?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PutObjectLockConfigurationRequest

        if (bucket != other.bucket) return false
        if (contentMd5 != other.contentMd5) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false
        if (objectLockConfiguration != other.objectLockConfiguration) return false
        if (requestPayer != other.requestPayer) return false
        if (token != other.token) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PutObjectLockConfigurationRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PutObjectLockConfigurationRequest
        /**
         * The bucket whose Object Lock configuration you want to create or replace.
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * The MD5 hash for the request body.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        fun contentMd5(contentMd5: String): FluentBuilder
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder
        /**
         * The Object Lock configuration that you want to apply to the specified bucket.
         */
        fun objectLockConfiguration(objectLockConfiguration: ObjectLockConfiguration): FluentBuilder
        /**
         * Confirms that the requester knows that they will be charged for the request. Bucket
         * owners need not specify this parameter in their requests. For information about downloading
         * objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
         * Requestor Pays Buckets in the Amazon S3 User Guide.
         */
        fun requestPayer(requestPayer: RequestPayer): FluentBuilder
        /**
         * A token to allow Object Lock to be enabled for an existing bucket.
         */
        fun token(token: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The bucket whose Object Lock configuration you want to create or replace.
         */
        var bucket: String?
        /**
         * The MD5 hash for the request body.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        var contentMd5: String?
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: String?
        /**
         * The Object Lock configuration that you want to apply to the specified bucket.
         */
        var objectLockConfiguration: ObjectLockConfiguration?
        /**
         * Confirms that the requester knows that they will be charged for the request. Bucket
         * owners need not specify this parameter in their requests. For information about downloading
         * objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
         * Requestor Pays Buckets in the Amazon S3 User Guide.
         */
        var requestPayer: RequestPayer?
        /**
         * A token to allow Object Lock to be enabled for an existing bucket.
         */
        var token: String?

        fun build(): PutObjectLockConfigurationRequest
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ObjectLockConfiguration] inside the given [block]
         */
        fun objectLockConfiguration(block: ObjectLockConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.objectLockConfiguration = ObjectLockConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucket: String? = null
        override var contentMd5: String? = null
        override var expectedBucketOwner: String? = null
        override var objectLockConfiguration: ObjectLockConfiguration? = null
        override var requestPayer: RequestPayer? = null
        override var token: String? = null

        constructor(x: PutObjectLockConfigurationRequest) : this() {
            this.bucket = x.bucket
            this.contentMd5 = x.contentMd5
            this.expectedBucketOwner = x.expectedBucketOwner
            this.objectLockConfiguration = x.objectLockConfiguration
            this.requestPayer = x.requestPayer
            this.token = x.token
        }

        override fun build(): PutObjectLockConfigurationRequest = PutObjectLockConfigurationRequest(this)
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun contentMd5(contentMd5: String): FluentBuilder = apply { this.contentMd5 = contentMd5 }
        override fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder = apply { this.expectedBucketOwner = expectedBucketOwner }
        override fun objectLockConfiguration(objectLockConfiguration: ObjectLockConfiguration): FluentBuilder = apply { this.objectLockConfiguration = objectLockConfiguration }
        override fun requestPayer(requestPayer: RequestPayer): FluentBuilder = apply { this.requestPayer = requestPayer }
        override fun token(token: String): FluentBuilder = apply { this.token = token }
    }
}
