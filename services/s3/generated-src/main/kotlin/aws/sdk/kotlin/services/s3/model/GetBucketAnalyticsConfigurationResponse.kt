// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class GetBucketAnalyticsConfigurationResponse private constructor(builder: BuilderImpl) {
    /**
     * The configuration and any analyses for the analytics filter.
     */
    val analyticsConfiguration: AnalyticsConfiguration? = builder.analyticsConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetBucketAnalyticsConfigurationResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetBucketAnalyticsConfigurationResponse(")
        append("analyticsConfiguration=$analyticsConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = analyticsConfiguration?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetBucketAnalyticsConfigurationResponse

        if (analyticsConfiguration != other.analyticsConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetBucketAnalyticsConfigurationResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetBucketAnalyticsConfigurationResponse
        /**
         * The configuration and any analyses for the analytics filter.
         */
        fun analyticsConfiguration(analyticsConfiguration: AnalyticsConfiguration): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The configuration and any analyses for the analytics filter.
         */
        var analyticsConfiguration: AnalyticsConfiguration?

        fun build(): GetBucketAnalyticsConfigurationResponse
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.AnalyticsConfiguration] inside the given [block]
         */
        fun analyticsConfiguration(block: AnalyticsConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.analyticsConfiguration = AnalyticsConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var analyticsConfiguration: AnalyticsConfiguration? = null

        constructor(x: GetBucketAnalyticsConfigurationResponse) : this() {
            this.analyticsConfiguration = x.analyticsConfiguration
        }

        override fun build(): GetBucketAnalyticsConfigurationResponse = GetBucketAnalyticsConfigurationResponse(this)
        override fun analyticsConfiguration(analyticsConfiguration: AnalyticsConfiguration): FluentBuilder = apply { this.analyticsConfiguration = analyticsConfiguration }
    }
}
