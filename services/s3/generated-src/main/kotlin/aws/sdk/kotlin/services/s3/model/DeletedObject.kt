// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Information about the deleted object.
 */
class DeletedObject private constructor(builder: BuilderImpl) {
    /**
     * Specifies whether the versioned object that was permanently deleted was (true) or was
     * not (false) a delete marker. In a simple DELETE, this header indicates whether (true) or
     * not (false) a delete marker was created.
     */
    val deleteMarker: Boolean = builder.deleteMarker
    /**
     * The version ID of the delete marker created as a result of the DELETE operation. If you
     * delete a specific object version, the value returned by this header is the version ID of
     * the object version deleted.
     */
    val deleteMarkerVersionId: String? = builder.deleteMarkerVersionId
    /**
     * The name of the deleted object.
     */
    val key: String? = builder.key
    /**
     * The version ID of the deleted object.
     */
    val versionId: String? = builder.versionId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeletedObject = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeletedObject(")
        append("deleteMarker=$deleteMarker,")
        append("deleteMarkerVersionId=$deleteMarkerVersionId,")
        append("key=$key,")
        append("versionId=$versionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = deleteMarker.hashCode()
        result = 31 * result + (deleteMarkerVersionId?.hashCode() ?: 0)
        result = 31 * result + (key?.hashCode() ?: 0)
        result = 31 * result + (versionId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeletedObject

        if (deleteMarker != other.deleteMarker) return false
        if (deleteMarkerVersionId != other.deleteMarkerVersionId) return false
        if (key != other.key) return false
        if (versionId != other.versionId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeletedObject = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeletedObject
        /**
         * Specifies whether the versioned object that was permanently deleted was (true) or was
         * not (false) a delete marker. In a simple DELETE, this header indicates whether (true) or
         * not (false) a delete marker was created.
         */
        fun deleteMarker(deleteMarker: Boolean): FluentBuilder
        /**
         * The version ID of the delete marker created as a result of the DELETE operation. If you
         * delete a specific object version, the value returned by this header is the version ID of
         * the object version deleted.
         */
        fun deleteMarkerVersionId(deleteMarkerVersionId: String): FluentBuilder
        /**
         * The name of the deleted object.
         */
        fun key(key: String): FluentBuilder
        /**
         * The version ID of the deleted object.
         */
        fun versionId(versionId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies whether the versioned object that was permanently deleted was (true) or was
         * not (false) a delete marker. In a simple DELETE, this header indicates whether (true) or
         * not (false) a delete marker was created.
         */
        var deleteMarker: Boolean
        /**
         * The version ID of the delete marker created as a result of the DELETE operation. If you
         * delete a specific object version, the value returned by this header is the version ID of
         * the object version deleted.
         */
        var deleteMarkerVersionId: String?
        /**
         * The name of the deleted object.
         */
        var key: String?
        /**
         * The version ID of the deleted object.
         */
        var versionId: String?

        fun build(): DeletedObject
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var deleteMarker: Boolean = false
        override var deleteMarkerVersionId: String? = null
        override var key: String? = null
        override var versionId: String? = null

        constructor(x: DeletedObject) : this() {
            this.deleteMarker = x.deleteMarker
            this.deleteMarkerVersionId = x.deleteMarkerVersionId
            this.key = x.key
            this.versionId = x.versionId
        }

        override fun build(): DeletedObject = DeletedObject(this)
        override fun deleteMarker(deleteMarker: Boolean): FluentBuilder = apply { this.deleteMarker = deleteMarker }
        override fun deleteMarkerVersionId(deleteMarkerVersionId: String): FluentBuilder = apply { this.deleteMarkerVersionId = deleteMarkerVersionId }
        override fun key(key: String): FluentBuilder = apply { this.key = key }
        override fun versionId(versionId: String): FluentBuilder = apply { this.versionId = versionId }
    }
}
