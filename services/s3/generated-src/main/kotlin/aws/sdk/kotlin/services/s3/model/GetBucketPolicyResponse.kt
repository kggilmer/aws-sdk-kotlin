// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class GetBucketPolicyResponse private constructor(builder: BuilderImpl) {
    /**
     * The bucket policy as a JSON document.
     */
    val policy: String? = builder.policy

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetBucketPolicyResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetBucketPolicyResponse(")
        append("policy=$policy)")
    }

    override fun hashCode(): kotlin.Int {
        var result = policy?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetBucketPolicyResponse

        if (policy != other.policy) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetBucketPolicyResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetBucketPolicyResponse
        /**
         * The bucket policy as a JSON document.
         */
        fun policy(policy: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The bucket policy as a JSON document.
         */
        var policy: String?

        fun build(): GetBucketPolicyResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var policy: String? = null

        constructor(x: GetBucketPolicyResponse) : this() {
            this.policy = x.policy
        }

        override fun build(): GetBucketPolicyResponse = GetBucketPolicyResponse(this)
        override fun policy(policy: String): FluentBuilder = apply { this.policy = policy }
    }
}
