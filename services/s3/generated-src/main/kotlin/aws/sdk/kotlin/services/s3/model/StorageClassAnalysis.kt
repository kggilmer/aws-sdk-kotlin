// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies data related to access patterns to be collected and made available to analyze
 * the tradeoffs between different storage classes for an Amazon S3 bucket.
 */
class StorageClassAnalysis private constructor(builder: BuilderImpl) {
    /**
     * Specifies how data related to the storage class analysis for an Amazon S3 bucket should be
     * exported.
     */
    val dataExport: StorageClassAnalysisDataExport? = builder.dataExport

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): StorageClassAnalysis = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("StorageClassAnalysis(")
        append("dataExport=$dataExport)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dataExport?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as StorageClassAnalysis

        if (dataExport != other.dataExport) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): StorageClassAnalysis = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): StorageClassAnalysis
        /**
         * Specifies how data related to the storage class analysis for an Amazon S3 bucket should be
         * exported.
         */
        fun dataExport(dataExport: StorageClassAnalysisDataExport): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies how data related to the storage class analysis for an Amazon S3 bucket should be
         * exported.
         */
        var dataExport: StorageClassAnalysisDataExport?

        fun build(): StorageClassAnalysis
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.StorageClassAnalysisDataExport] inside the given [block]
         */
        fun dataExport(block: StorageClassAnalysisDataExport.DslBuilder.() -> kotlin.Unit) {
            this.dataExport = StorageClassAnalysisDataExport.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var dataExport: StorageClassAnalysisDataExport? = null

        constructor(x: StorageClassAnalysis) : this() {
            this.dataExport = x.dataExport
        }

        override fun build(): StorageClassAnalysis = StorageClassAnalysis(this)
        override fun dataExport(dataExport: StorageClassAnalysisDataExport): FluentBuilder = apply { this.dataExport = dataExport }
    }
}
