// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies an inventory filter. The inventory only includes objects that meet the
 * filter's criteria.
 */
class InventoryFilter private constructor(builder: BuilderImpl) {
    /**
     * The prefix that an object must have to be included in the inventory results.
     */
    val prefix: String? = builder.prefix

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InventoryFilter = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InventoryFilter(")
        append("prefix=$prefix)")
    }

    override fun hashCode(): kotlin.Int {
        var result = prefix?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InventoryFilter

        if (prefix != other.prefix) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InventoryFilter = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InventoryFilter
        /**
         * The prefix that an object must have to be included in the inventory results.
         */
        fun prefix(prefix: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The prefix that an object must have to be included in the inventory results.
         */
        var prefix: String?

        fun build(): InventoryFilter
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var prefix: String? = null

        constructor(x: InventoryFilter) : this() {
            this.prefix = x.prefix
        }

        override fun build(): InventoryFilter = InventoryFilter(this)
        override fun prefix(prefix: String): FluentBuilder = apply { this.prefix = prefix }
    }
}
