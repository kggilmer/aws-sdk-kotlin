// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class GetBucketMetricsConfigurationResponse private constructor(builder: BuilderImpl) {
    /**
     * Specifies the metrics configuration.
     */
    val metricsConfiguration: MetricsConfiguration? = builder.metricsConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetBucketMetricsConfigurationResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetBucketMetricsConfigurationResponse(")
        append("metricsConfiguration=$metricsConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = metricsConfiguration?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetBucketMetricsConfigurationResponse

        if (metricsConfiguration != other.metricsConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetBucketMetricsConfigurationResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetBucketMetricsConfigurationResponse
        /**
         * Specifies the metrics configuration.
         */
        fun metricsConfiguration(metricsConfiguration: MetricsConfiguration): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies the metrics configuration.
         */
        var metricsConfiguration: MetricsConfiguration?

        fun build(): GetBucketMetricsConfigurationResponse
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.MetricsConfiguration] inside the given [block]
         */
        fun metricsConfiguration(block: MetricsConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.metricsConfiguration = MetricsConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var metricsConfiguration: MetricsConfiguration? = null

        constructor(x: GetBucketMetricsConfigurationResponse) : this() {
            this.metricsConfiguration = x.metricsConfiguration
        }

        override fun build(): GetBucketMetricsConfigurationResponse = GetBucketMetricsConfigurationResponse(this)
        override fun metricsConfiguration(metricsConfiguration: MetricsConfiguration): FluentBuilder = apply { this.metricsConfiguration = metricsConfiguration }
    }
}
