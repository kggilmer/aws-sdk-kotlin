// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Contains the type of server-side encryption used.
 */
class Encryption private constructor(builder: BuilderImpl) {
    /**
     * The server-side encryption algorithm used when storing job results in Amazon S3 (for example,
     * AES256, aws:kms).
     */
    val encryptionType: ServerSideEncryption? = builder.encryptionType
    /**
     * If the encryption type is aws:kms, this optional value can be used to
     * specify the encryption context for the restore results.
     */
    val kmsContext: String? = builder.kmsContext
    /**
     * If the encryption type is aws:kms, this optional value specifies the ID of
     * the symmetric customer managed key to use for encryption of job results. Amazon S3 only
     * supports symmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and
     * asymmetric keys in the Amazon Web Services Key Management Service Developer Guide.
     */
    val kmsKeyId: String? = builder.kmsKeyId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Encryption = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Encryption(")
        append("encryptionType=$encryptionType,")
        append("kmsContext=$kmsContext,")
        append("kmsKeyId=*** Sensitive Data Redacted ***)")
    }

    override fun hashCode(): kotlin.Int {
        var result = encryptionType?.hashCode() ?: 0
        result = 31 * result + (kmsContext?.hashCode() ?: 0)
        result = 31 * result + (kmsKeyId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Encryption

        if (encryptionType != other.encryptionType) return false
        if (kmsContext != other.kmsContext) return false
        if (kmsKeyId != other.kmsKeyId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Encryption = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Encryption
        /**
         * The server-side encryption algorithm used when storing job results in Amazon S3 (for example,
         * AES256, aws:kms).
         */
        fun encryptionType(encryptionType: ServerSideEncryption): FluentBuilder
        /**
         * If the encryption type is aws:kms, this optional value can be used to
         * specify the encryption context for the restore results.
         */
        fun kmsContext(kmsContext: String): FluentBuilder
        /**
         * If the encryption type is aws:kms, this optional value specifies the ID of
         * the symmetric customer managed key to use for encryption of job results. Amazon S3 only
         * supports symmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and
         * asymmetric keys in the Amazon Web Services Key Management Service Developer Guide.
         */
        fun kmsKeyId(kmsKeyId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The server-side encryption algorithm used when storing job results in Amazon S3 (for example,
         * AES256, aws:kms).
         */
        var encryptionType: ServerSideEncryption?
        /**
         * If the encryption type is aws:kms, this optional value can be used to
         * specify the encryption context for the restore results.
         */
        var kmsContext: String?
        /**
         * If the encryption type is aws:kms, this optional value specifies the ID of
         * the symmetric customer managed key to use for encryption of job results. Amazon S3 only
         * supports symmetric keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and
         * asymmetric keys in the Amazon Web Services Key Management Service Developer Guide.
         */
        var kmsKeyId: String?

        fun build(): Encryption
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var encryptionType: ServerSideEncryption? = null
        override var kmsContext: String? = null
        override var kmsKeyId: String? = null

        constructor(x: Encryption) : this() {
            this.encryptionType = x.encryptionType
            this.kmsContext = x.kmsContext
            this.kmsKeyId = x.kmsKeyId
        }

        override fun build(): Encryption = Encryption(this)
        override fun encryptionType(encryptionType: ServerSideEncryption): FluentBuilder = apply { this.encryptionType = encryptionType }
        override fun kmsContext(kmsContext: String): FluentBuilder = apply { this.kmsContext = kmsContext }
        override fun kmsKeyId(kmsKeyId: String): FluentBuilder = apply { this.kmsKeyId = kmsKeyId }
    }
}
