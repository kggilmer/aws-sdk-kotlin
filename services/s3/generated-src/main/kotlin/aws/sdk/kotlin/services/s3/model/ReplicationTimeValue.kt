// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics
 * EventThreshold.
 */
class ReplicationTimeValue private constructor(builder: BuilderImpl) {
    /**
     * Contains an integer specifying time in minutes.
     * Valid value: 15
     */
    val minutes: Int = builder.minutes

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicationTimeValue = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicationTimeValue(")
        append("minutes=$minutes)")
    }

    override fun hashCode(): kotlin.Int {
        var result = minutes
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicationTimeValue

        if (minutes != other.minutes) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicationTimeValue = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicationTimeValue
        /**
         * Contains an integer specifying time in minutes.
         * Valid value: 15
         */
        fun minutes(minutes: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Contains an integer specifying time in minutes.
         * Valid value: 15
         */
        var minutes: Int

        fun build(): ReplicationTimeValue
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var minutes: Int = 0

        constructor(x: ReplicationTimeValue) : this() {
            this.minutes = x.minutes
        }

        override fun build(): ReplicationTimeValue = ReplicationTimeValue(this)
        override fun minutes(minutes: Int): FluentBuilder = apply { this.minutes = minutes }
    }
}
