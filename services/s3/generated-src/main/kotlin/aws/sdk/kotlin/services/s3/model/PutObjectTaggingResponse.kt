// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class PutObjectTaggingResponse private constructor(builder: BuilderImpl) {
    /**
     * The versionId of the object the tag-set was added to.
     */
    val versionId: String? = builder.versionId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PutObjectTaggingResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PutObjectTaggingResponse(")
        append("versionId=$versionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = versionId?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PutObjectTaggingResponse

        if (versionId != other.versionId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PutObjectTaggingResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PutObjectTaggingResponse
        /**
         * The versionId of the object the tag-set was added to.
         */
        fun versionId(versionId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The versionId of the object the tag-set was added to.
         */
        var versionId: String?

        fun build(): PutObjectTaggingResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var versionId: String? = null

        constructor(x: PutObjectTaggingResponse) : this() {
            this.versionId = x.versionId
        }

        override fun build(): PutObjectTaggingResponse = PutObjectTaggingResponse(this)
        override fun versionId(versionId: String): FluentBuilder = apply { this.versionId = versionId }
    }
}
