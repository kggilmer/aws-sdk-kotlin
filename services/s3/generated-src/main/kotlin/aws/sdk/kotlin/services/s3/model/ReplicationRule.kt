// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies which Amazon S3 objects to replicate and where to store the replicas.
 */
class ReplicationRule private constructor(builder: BuilderImpl) {
    /**
     * Specifies whether Amazon S3 replicates delete markers. If you specify a Filter
     * in your replication configuration, you must also include a
     * DeleteMarkerReplication element. If your Filter includes a
     * Tag element, the DeleteMarkerReplication
     * Status must be set to Disabled, because Amazon S3 does not support replicating
     * delete markers for tag-based rules. For an example configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config">Basic Rule Configuration.
     * For more information about delete marker replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html">Basic Rule
     * Configuration.
     * If you are using an earlier version of the replication configuration, Amazon S3 handles
     * replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward Compatibility.
     */
    val deleteMarkerReplication: DeleteMarkerReplication? = builder.deleteMarkerReplication
    /**
     * A container for information about the replication destination and its configurations
     * including enabling the S3 Replication Time Control (S3 RTC).
     */
    val destination: Destination? = builder.destination
    /**
     *
     */
    val existingObjectReplication: ExistingObjectReplication? = builder.existingObjectReplication
    /**
     * A filter that identifies the subset of objects to which the replication rule applies. A
     * Filter must specify exactly one Prefix, Tag, or
     * an And child element.
     */
    val filter: ReplicationRuleFilter? = builder.filter
    /**
     * A unique identifier for the rule. The maximum value is 255 characters.
     */
    val id: String? = builder.id
    /**
     * An object key name prefix that identifies the object or objects to which the rule
     * applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket,
     * specify an empty string.
     * Replacement must be made for object keys containing special characters (such as carriage returns) when using
     * XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints">
     * XML related object key constraints.
     */
    @Deprecated("No longer recommended for use. See AWS API documentation for more details.")
    val prefix: String? = builder.prefix
    /**
     * The priority indicates which rule has precedence whenever two or more replication rules
     * conflict. Amazon S3 will attempt to replicate objects according to all replication rules.
     * However, if there are two or more rules with the same destination bucket, then objects will
     * be replicated according to the rule with the highest priority. The higher the number, the
     * higher the priority.
     * For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication in the
     * Amazon S3 User Guide.
     */
    val priority: Int = builder.priority
    /**
     * A container that describes additional filters for identifying the source objects that
     * you want to replicate. You can choose to enable or disable the replication of these
     * objects. Currently, Amazon S3 supports only the filter that you can specify for objects created
     * with server-side encryption using a customer managed key stored in Amazon Web Services Key Management
     * Service (SSE-KMS).
     */
    val sourceSelectionCriteria: SourceSelectionCriteria? = builder.sourceSelectionCriteria
    /**
     * Specifies whether the rule is enabled.
     */
    val status: ReplicationRuleStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ReplicationRule = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ReplicationRule(")
        append("deleteMarkerReplication=$deleteMarkerReplication,")
        append("destination=$destination,")
        append("existingObjectReplication=$existingObjectReplication,")
        append("filter=$filter,")
        append("id=$id,")
        append("prefix=$prefix,")
        append("priority=$priority,")
        append("sourceSelectionCriteria=$sourceSelectionCriteria,")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = deleteMarkerReplication?.hashCode() ?: 0
        result = 31 * result + (destination?.hashCode() ?: 0)
        result = 31 * result + (existingObjectReplication?.hashCode() ?: 0)
        result = 31 * result + (filter?.hashCode() ?: 0)
        result = 31 * result + (id?.hashCode() ?: 0)
        result = 31 * result + (prefix?.hashCode() ?: 0)
        result = 31 * result + (priority)
        result = 31 * result + (sourceSelectionCriteria?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ReplicationRule

        if (deleteMarkerReplication != other.deleteMarkerReplication) return false
        if (destination != other.destination) return false
        if (existingObjectReplication != other.existingObjectReplication) return false
        if (filter != other.filter) return false
        if (id != other.id) return false
        if (prefix != other.prefix) return false
        if (priority != other.priority) return false
        if (sourceSelectionCriteria != other.sourceSelectionCriteria) return false
        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ReplicationRule = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ReplicationRule
        /**
         * Specifies whether Amazon S3 replicates delete markers. If you specify a Filter
         * in your replication configuration, you must also include a
         * DeleteMarkerReplication element. If your Filter includes a
         * Tag element, the DeleteMarkerReplication
         * Status must be set to Disabled, because Amazon S3 does not support replicating
         * delete markers for tag-based rules. For an example configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config">Basic Rule Configuration.
         * For more information about delete marker replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html">Basic Rule
         * Configuration.
         * If you are using an earlier version of the replication configuration, Amazon S3 handles
         * replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward Compatibility.
         */
        fun deleteMarkerReplication(deleteMarkerReplication: DeleteMarkerReplication): FluentBuilder
        /**
         * A container for information about the replication destination and its configurations
         * including enabling the S3 Replication Time Control (S3 RTC).
         */
        fun destination(destination: Destination): FluentBuilder
        /**
         *
         */
        fun existingObjectReplication(existingObjectReplication: ExistingObjectReplication): FluentBuilder
        /**
         * A filter that identifies the subset of objects to which the replication rule applies. A
         * Filter must specify exactly one Prefix, Tag, or
         * an And child element.
         */
        fun filter(filter: ReplicationRuleFilter): FluentBuilder
        /**
         * A unique identifier for the rule. The maximum value is 255 characters.
         */
        fun id(id: String): FluentBuilder
        /**
         * An object key name prefix that identifies the object or objects to which the rule
         * applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket,
         * specify an empty string.
         * Replacement must be made for object keys containing special characters (such as carriage returns) when using
         * XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints">
         * XML related object key constraints.
         */
        @Deprecated("No longer recommended for use. See AWS API documentation for more details.")
        fun prefix(prefix: String): FluentBuilder
        /**
         * The priority indicates which rule has precedence whenever two or more replication rules
         * conflict. Amazon S3 will attempt to replicate objects according to all replication rules.
         * However, if there are two or more rules with the same destination bucket, then objects will
         * be replicated according to the rule with the highest priority. The higher the number, the
         * higher the priority.
         * For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication in the
         * Amazon S3 User Guide.
         */
        fun priority(priority: Int): FluentBuilder
        /**
         * A container that describes additional filters for identifying the source objects that
         * you want to replicate. You can choose to enable or disable the replication of these
         * objects. Currently, Amazon S3 supports only the filter that you can specify for objects created
         * with server-side encryption using a customer managed key stored in Amazon Web Services Key Management
         * Service (SSE-KMS).
         */
        fun sourceSelectionCriteria(sourceSelectionCriteria: SourceSelectionCriteria): FluentBuilder
        /**
         * Specifies whether the rule is enabled.
         */
        fun status(status: ReplicationRuleStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Specifies whether Amazon S3 replicates delete markers. If you specify a Filter
         * in your replication configuration, you must also include a
         * DeleteMarkerReplication element. If your Filter includes a
         * Tag element, the DeleteMarkerReplication
         * Status must be set to Disabled, because Amazon S3 does not support replicating
         * delete markers for tag-based rules. For an example configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config">Basic Rule Configuration.
         * For more information about delete marker replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html">Basic Rule
         * Configuration.
         * If you are using an earlier version of the replication configuration, Amazon S3 handles
         * replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward Compatibility.
         */
        var deleteMarkerReplication: DeleteMarkerReplication?
        /**
         * A container for information about the replication destination and its configurations
         * including enabling the S3 Replication Time Control (S3 RTC).
         */
        var destination: Destination?
        /**
         *
         */
        var existingObjectReplication: ExistingObjectReplication?
        /**
         * A filter that identifies the subset of objects to which the replication rule applies. A
         * Filter must specify exactly one Prefix, Tag, or
         * an And child element.
         */
        var filter: ReplicationRuleFilter?
        /**
         * A unique identifier for the rule. The maximum value is 255 characters.
         */
        var id: String?
        /**
         * An object key name prefix that identifies the object or objects to which the rule
         * applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket,
         * specify an empty string.
         * Replacement must be made for object keys containing special characters (such as carriage returns) when using
         * XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints">
         * XML related object key constraints.
         */
        @Deprecated("No longer recommended for use. See AWS API documentation for more details.")
        var prefix: String?
        /**
         * The priority indicates which rule has precedence whenever two or more replication rules
         * conflict. Amazon S3 will attempt to replicate objects according to all replication rules.
         * However, if there are two or more rules with the same destination bucket, then objects will
         * be replicated according to the rule with the highest priority. The higher the number, the
         * higher the priority.
         * For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication in the
         * Amazon S3 User Guide.
         */
        var priority: Int
        /**
         * A container that describes additional filters for identifying the source objects that
         * you want to replicate. You can choose to enable or disable the replication of these
         * objects. Currently, Amazon S3 supports only the filter that you can specify for objects created
         * with server-side encryption using a customer managed key stored in Amazon Web Services Key Management
         * Service (SSE-KMS).
         */
        var sourceSelectionCriteria: SourceSelectionCriteria?
        /**
         * Specifies whether the rule is enabled.
         */
        var status: ReplicationRuleStatus?

        fun build(): ReplicationRule
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.DeleteMarkerReplication] inside the given [block]
         */
        fun deleteMarkerReplication(block: DeleteMarkerReplication.DslBuilder.() -> kotlin.Unit) {
            this.deleteMarkerReplication = DeleteMarkerReplication.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.Destination] inside the given [block]
         */
        fun destination(block: Destination.DslBuilder.() -> kotlin.Unit) {
            this.destination = Destination.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ExistingObjectReplication] inside the given [block]
         */
        fun existingObjectReplication(block: ExistingObjectReplication.DslBuilder.() -> kotlin.Unit) {
            this.existingObjectReplication = ExistingObjectReplication.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.SourceSelectionCriteria] inside the given [block]
         */
        fun sourceSelectionCriteria(block: SourceSelectionCriteria.DslBuilder.() -> kotlin.Unit) {
            this.sourceSelectionCriteria = SourceSelectionCriteria.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var deleteMarkerReplication: DeleteMarkerReplication? = null
        override var destination: Destination? = null
        override var existingObjectReplication: ExistingObjectReplication? = null
        override var filter: ReplicationRuleFilter? = null
        override var id: String? = null
        override var prefix: String? = null
        override var priority: Int = 0
        override var sourceSelectionCriteria: SourceSelectionCriteria? = null
        override var status: ReplicationRuleStatus? = null

        constructor(x: ReplicationRule) : this() {
            this.deleteMarkerReplication = x.deleteMarkerReplication
            this.destination = x.destination
            this.existingObjectReplication = x.existingObjectReplication
            this.filter = x.filter
            this.id = x.id
            this.prefix = x.prefix
            this.priority = x.priority
            this.sourceSelectionCriteria = x.sourceSelectionCriteria
            this.status = x.status
        }

        override fun build(): ReplicationRule = ReplicationRule(this)
        override fun deleteMarkerReplication(deleteMarkerReplication: DeleteMarkerReplication): FluentBuilder = apply { this.deleteMarkerReplication = deleteMarkerReplication }
        override fun destination(destination: Destination): FluentBuilder = apply { this.destination = destination }
        override fun existingObjectReplication(existingObjectReplication: ExistingObjectReplication): FluentBuilder = apply { this.existingObjectReplication = existingObjectReplication }
        override fun filter(filter: ReplicationRuleFilter): FluentBuilder = apply { this.filter = filter }
        override fun id(id: String): FluentBuilder = apply { this.id = id }
        override fun prefix(prefix: String): FluentBuilder = apply { this.prefix = prefix }
        override fun priority(priority: Int): FluentBuilder = apply { this.priority = priority }
        override fun sourceSelectionCriteria(sourceSelectionCriteria: SourceSelectionCriteria): FluentBuilder = apply { this.sourceSelectionCriteria = sourceSelectionCriteria }
        override fun status(status: ReplicationRuleStatus): FluentBuilder = apply { this.status = status }
    }
}
