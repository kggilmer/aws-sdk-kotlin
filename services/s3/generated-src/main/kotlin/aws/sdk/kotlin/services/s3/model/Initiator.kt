// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Container element that identifies who initiated the multipart upload.
 */
class Initiator private constructor(builder: BuilderImpl) {
    /**
     * Name of the Principal.
     */
    val displayName: String? = builder.displayName
    /**
     * If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the principal
     * is an IAM User, it provides a user ARN value.
     */
    val id: String? = builder.id

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): Initiator = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("Initiator(")
        append("displayName=$displayName,")
        append("id=$id)")
    }

    override fun hashCode(): kotlin.Int {
        var result = displayName?.hashCode() ?: 0
        result = 31 * result + (id?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Initiator

        if (displayName != other.displayName) return false
        if (id != other.id) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): Initiator = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): Initiator
        /**
         * Name of the Principal.
         */
        fun displayName(displayName: String): FluentBuilder
        /**
         * If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the principal
         * is an IAM User, it provides a user ARN value.
         */
        fun id(id: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Name of the Principal.
         */
        var displayName: String?
        /**
         * If the principal is an Amazon Web Services account, it provides the Canonical User ID. If the principal
         * is an IAM User, it provides a user ARN value.
         */
        var id: String?

        fun build(): Initiator
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var displayName: String? = null
        override var id: String? = null

        constructor(x: Initiator) : this() {
            this.displayName = x.displayName
            this.id = x.id
        }

        override fun build(): Initiator = Initiator(this)
        override fun displayName(displayName: String): FluentBuilder = apply { this.displayName = displayName }
        override fun id(id: String): FluentBuilder = apply { this.id = id }
    }
}
