// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class DeleteObjectRequest private constructor(builder: BuilderImpl) {
    /**
     * The bucket name of the bucket containing the object.
     * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points in the Amazon S3 User Guide.
     * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts in the Amazon S3 User Guide.
     */
    val bucket: String? = builder.bucket
    /**
     * Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process
     * this operation. To use this header, you must have the s3:PutBucketPublicAccessBlock
     * permission.
     */
    val bypassGovernanceRetention: Boolean = builder.bypassGovernanceRetention
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: String? = builder.expectedBucketOwner
    /**
     * Key name of the object to delete.
     */
    val key: String? = builder.key
    /**
     * The concatenation of the authentication device's serial number, a space, and the value
     * that is displayed on your authentication device. Required to permanently delete a versioned
     * object if versioning is configured with MFA delete enabled.
     */
    val mfa: String? = builder.mfa
    /**
     * Confirms that the requester knows that they will be charged for the request. Bucket
     * owners need not specify this parameter in their requests. For information about downloading
     * objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
     * Requestor Pays Buckets in the Amazon S3 User Guide.
     */
    val requestPayer: RequestPayer? = builder.requestPayer
    /**
     * VersionId used to reference a specific version of the object.
     */
    val versionId: String? = builder.versionId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DeleteObjectRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteObjectRequest(")
        append("bucket=$bucket,")
        append("bypassGovernanceRetention=$bypassGovernanceRetention,")
        append("expectedBucketOwner=$expectedBucketOwner,")
        append("key=$key,")
        append("mfa=$mfa,")
        append("requestPayer=$requestPayer,")
        append("versionId=$versionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (bypassGovernanceRetention.hashCode())
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        result = 31 * result + (key?.hashCode() ?: 0)
        result = 31 * result + (mfa?.hashCode() ?: 0)
        result = 31 * result + (requestPayer?.hashCode() ?: 0)
        result = 31 * result + (versionId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DeleteObjectRequest

        if (bucket != other.bucket) return false
        if (bypassGovernanceRetention != other.bypassGovernanceRetention) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false
        if (key != other.key) return false
        if (mfa != other.mfa) return false
        if (requestPayer != other.requestPayer) return false
        if (versionId != other.versionId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DeleteObjectRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DeleteObjectRequest
        /**
         * The bucket name of the bucket containing the object.
         * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points in the Amazon S3 User Guide.
         * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts in the Amazon S3 User Guide.
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process
         * this operation. To use this header, you must have the s3:PutBucketPublicAccessBlock
         * permission.
         */
        fun bypassGovernanceRetention(bypassGovernanceRetention: Boolean): FluentBuilder
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder
        /**
         * Key name of the object to delete.
         */
        fun key(key: String): FluentBuilder
        /**
         * The concatenation of the authentication device's serial number, a space, and the value
         * that is displayed on your authentication device. Required to permanently delete a versioned
         * object if versioning is configured with MFA delete enabled.
         */
        fun mfa(mfa: String): FluentBuilder
        /**
         * Confirms that the requester knows that they will be charged for the request. Bucket
         * owners need not specify this parameter in their requests. For information about downloading
         * objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
         * Requestor Pays Buckets in the Amazon S3 User Guide.
         */
        fun requestPayer(requestPayer: RequestPayer): FluentBuilder
        /**
         * VersionId used to reference a specific version of the object.
         */
        fun versionId(versionId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The bucket name of the bucket containing the object.
         * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points in the Amazon S3 User Guide.
         * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts in the Amazon S3 User Guide.
         */
        var bucket: String?
        /**
         * Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process
         * this operation. To use this header, you must have the s3:PutBucketPublicAccessBlock
         * permission.
         */
        var bypassGovernanceRetention: Boolean
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: String?
        /**
         * Key name of the object to delete.
         */
        var key: String?
        /**
         * The concatenation of the authentication device's serial number, a space, and the value
         * that is displayed on your authentication device. Required to permanently delete a versioned
         * object if versioning is configured with MFA delete enabled.
         */
        var mfa: String?
        /**
         * Confirms that the requester knows that they will be charged for the request. Bucket
         * owners need not specify this parameter in their requests. For information about downloading
         * objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
         * Requestor Pays Buckets in the Amazon S3 User Guide.
         */
        var requestPayer: RequestPayer?
        /**
         * VersionId used to reference a specific version of the object.
         */
        var versionId: String?

        fun build(): DeleteObjectRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucket: String? = null
        override var bypassGovernanceRetention: Boolean = false
        override var expectedBucketOwner: String? = null
        override var key: String? = null
        override var mfa: String? = null
        override var requestPayer: RequestPayer? = null
        override var versionId: String? = null

        constructor(x: DeleteObjectRequest) : this() {
            this.bucket = x.bucket
            this.bypassGovernanceRetention = x.bypassGovernanceRetention
            this.expectedBucketOwner = x.expectedBucketOwner
            this.key = x.key
            this.mfa = x.mfa
            this.requestPayer = x.requestPayer
            this.versionId = x.versionId
        }

        override fun build(): DeleteObjectRequest = DeleteObjectRequest(this)
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun bypassGovernanceRetention(bypassGovernanceRetention: Boolean): FluentBuilder = apply { this.bypassGovernanceRetention = bypassGovernanceRetention }
        override fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder = apply { this.expectedBucketOwner = expectedBucketOwner }
        override fun key(key: String): FluentBuilder = apply { this.key = key }
        override fun mfa(mfa: String): FluentBuilder = apply { this.mfa = mfa }
        override fun requestPayer(requestPayer: RequestPayer): FluentBuilder = apply { this.requestPayer = requestPayer }
        override fun versionId(versionId: String): FluentBuilder = apply { this.versionId = versionId }
    }
}
