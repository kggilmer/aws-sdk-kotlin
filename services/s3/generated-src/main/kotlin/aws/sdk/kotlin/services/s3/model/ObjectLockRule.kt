// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * The container element for an Object Lock rule.
 */
class ObjectLockRule private constructor(builder: BuilderImpl) {
    /**
     * The default Object Lock retention mode and period that you want to apply to new objects
     * placed in the specified bucket. Bucket settings require both a mode and a period.
     * The period can be either Days or Years but you must select one.
     * You cannot specify Days and Years at the same time.
     */
    val defaultRetention: DefaultRetention? = builder.defaultRetention

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ObjectLockRule = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ObjectLockRule(")
        append("defaultRetention=$defaultRetention)")
    }

    override fun hashCode(): kotlin.Int {
        var result = defaultRetention?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ObjectLockRule

        if (defaultRetention != other.defaultRetention) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ObjectLockRule = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ObjectLockRule
        /**
         * The default Object Lock retention mode and period that you want to apply to new objects
         * placed in the specified bucket. Bucket settings require both a mode and a period.
         * The period can be either Days or Years but you must select one.
         * You cannot specify Days and Years at the same time.
         */
        fun defaultRetention(defaultRetention: DefaultRetention): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The default Object Lock retention mode and period that you want to apply to new objects
         * placed in the specified bucket. Bucket settings require both a mode and a period.
         * The period can be either Days or Years but you must select one.
         * You cannot specify Days and Years at the same time.
         */
        var defaultRetention: DefaultRetention?

        fun build(): ObjectLockRule
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.DefaultRetention] inside the given [block]
         */
        fun defaultRetention(block: DefaultRetention.DslBuilder.() -> kotlin.Unit) {
            this.defaultRetention = DefaultRetention.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var defaultRetention: DefaultRetention? = null

        constructor(x: ObjectLockRule) : this() {
            this.defaultRetention = x.defaultRetention
        }

        override fun build(): ObjectLockRule = ObjectLockRule(this)
        override fun defaultRetention(defaultRetention: DefaultRetention): FluentBuilder = apply { this.defaultRetention = defaultRetention }
    }
}
