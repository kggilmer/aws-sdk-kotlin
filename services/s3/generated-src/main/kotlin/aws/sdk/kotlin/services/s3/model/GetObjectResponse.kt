// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import aws.smithy.kotlin.runtime.content.ByteStream
import aws.smithy.kotlin.runtime.time.Instant

class GetObjectResponse private constructor(builder: BuilderImpl) {
    /**
     * Indicates that a range of bytes was specified.
     */
    val acceptRanges: String? = builder.acceptRanges
    /**
     * Object data.
     */
    val body: ByteStream? = builder.body
    /**
     * Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
     */
    val bucketKeyEnabled: Boolean = builder.bucketKeyEnabled
    /**
     * Specifies caching behavior along the request/reply chain.
     */
    val cacheControl: String? = builder.cacheControl
    /**
     * Specifies presentational information for the object.
     */
    val contentDisposition: String? = builder.contentDisposition
    /**
     * Specifies what content encodings have been applied to the object and thus what decoding
     * mechanisms must be applied to obtain the media-type referenced by the Content-Type header
     * field.
     */
    val contentEncoding: String? = builder.contentEncoding
    /**
     * The language the content is in.
     */
    val contentLanguage: String? = builder.contentLanguage
    /**
     * Size of the body in bytes.
     */
    val contentLength: Long = builder.contentLength
    /**
     * The portion of the object returned in the response.
     */
    val contentRange: String? = builder.contentRange
    /**
     * A standard MIME type describing the format of the object data.
     */
    val contentType: String? = builder.contentType
    /**
     * Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
     * false, this response header does not appear in the response.
     */
    val deleteMarker: Boolean = builder.deleteMarker
    /**
     * An ETag is an opaque identifier assigned by a web server to a specific version of a
     * resource found at a URL.
     */
    val eTag: String? = builder.eTag
    /**
     * If the object expiration is configured (see PUT Bucket lifecycle), the response includes
     * this header. It includes the expiry-date and rule-id key-value pairs providing object
     * expiration information. The value of the rule-id is URL encoded.
     */
    val expiration: String? = builder.expiration
    /**
     * The date and time at which the object is no longer cacheable.
     */
    val expires: Instant? = builder.expires
    /**
     * Creation date of the object.
     */
    val lastModified: Instant? = builder.lastModified
    /**
     * A map of metadata to store with the object in S3.
     */
    val metadata: Map<String, String>? = builder.metadata
    /**
     * This is set to the number of metadata entries not returned in x-amz-meta
     * headers. This can happen if you create metadata using an API like SOAP that supports more
     * flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
     * values are not legal HTTP headers.
     */
    val missingMeta: Int = builder.missingMeta
    /**
     * Indicates whether this object has an active legal hold. This field is only returned if
     * you have permission to view an object's legal hold status.
     */
    val objectLockLegalHoldStatus: ObjectLockLegalHoldStatus? = builder.objectLockLegalHoldStatus
    /**
     * The Object Lock mode currently in place for this object.
     */
    val objectLockMode: ObjectLockMode? = builder.objectLockMode
    /**
     * The date and time when this object's Object Lock will expire.
     */
    val objectLockRetainUntilDate: Instant? = builder.objectLockRetainUntilDate
    /**
     * The count of parts this object has.
     */
    val partsCount: Int = builder.partsCount
    /**
     * Amazon S3 can return this if your request involves a bucket that is either a source or
     * destination in a replication rule.
     */
    val replicationStatus: ReplicationStatus? = builder.replicationStatus
    /**
     * If present, indicates that the requester was successfully charged for the
     * request.
     */
    val requestCharged: RequestCharged? = builder.requestCharged
    /**
     * Provides information about object restoration action and expiration time of the
     * restored object copy.
     */
    val restore: String? = builder.restore
    /**
     * The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
     * AES256, aws:kms).
     */
    val serverSideEncryption: ServerSideEncryption? = builder.serverSideEncryption
    /**
     * If server-side encryption with a customer-provided encryption key was requested, the
     * response will include this header confirming the encryption algorithm used.
     */
    val sseCustomerAlgorithm: String? = builder.sseCustomerAlgorithm
    /**
     * If server-side encryption with a customer-provided encryption key was requested, the
     * response will include this header to provide round-trip message integrity verification of
     * the customer-provided encryption key.
     */
    val sseCustomerKeyMd5: String? = builder.sseCustomerKeyMd5
    /**
     * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
     * customer managed key that was used for the object.
     */
    val ssekmsKeyId: String? = builder.ssekmsKeyId
    /**
     * Provides storage class information of the object. Amazon S3 returns this header for all
     * objects except for S3 Standard storage class objects.
     */
    val storageClass: StorageClass? = builder.storageClass
    /**
     * The number of tags, if any, on the object.
     */
    val tagCount: Int = builder.tagCount
    /**
     * Version of the object.
     */
    val versionId: String? = builder.versionId
    /**
     * If the bucket is configured as a website, redirects requests for this object to another
     * object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
     * the object metadata.
     */
    val websiteRedirectLocation: String? = builder.websiteRedirectLocation

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetObjectResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetObjectResponse(")
        append("acceptRanges=$acceptRanges,")
        append("body=$body,")
        append("bucketKeyEnabled=$bucketKeyEnabled,")
        append("cacheControl=$cacheControl,")
        append("contentDisposition=$contentDisposition,")
        append("contentEncoding=$contentEncoding,")
        append("contentLanguage=$contentLanguage,")
        append("contentLength=$contentLength,")
        append("contentRange=$contentRange,")
        append("contentType=$contentType,")
        append("deleteMarker=$deleteMarker,")
        append("eTag=$eTag,")
        append("expiration=$expiration,")
        append("expires=$expires,")
        append("lastModified=$lastModified,")
        append("metadata=$metadata,")
        append("missingMeta=$missingMeta,")
        append("objectLockLegalHoldStatus=$objectLockLegalHoldStatus,")
        append("objectLockMode=$objectLockMode,")
        append("objectLockRetainUntilDate=$objectLockRetainUntilDate,")
        append("partsCount=$partsCount,")
        append("replicationStatus=$replicationStatus,")
        append("requestCharged=$requestCharged,")
        append("restore=$restore,")
        append("serverSideEncryption=$serverSideEncryption,")
        append("sseCustomerAlgorithm=$sseCustomerAlgorithm,")
        append("sseCustomerKeyMd5=$sseCustomerKeyMd5,")
        append("ssekmsKeyId=*** Sensitive Data Redacted ***,")
        append("storageClass=$storageClass,")
        append("tagCount=$tagCount,")
        append("versionId=$versionId,")
        append("websiteRedirectLocation=$websiteRedirectLocation)")
    }

    override fun hashCode(): kotlin.Int {
        var result = acceptRanges?.hashCode() ?: 0
        result = 31 * result + (body?.hashCode() ?: 0)
        result = 31 * result + (bucketKeyEnabled.hashCode())
        result = 31 * result + (cacheControl?.hashCode() ?: 0)
        result = 31 * result + (contentDisposition?.hashCode() ?: 0)
        result = 31 * result + (contentEncoding?.hashCode() ?: 0)
        result = 31 * result + (contentLanguage?.hashCode() ?: 0)
        result = 31 * result + (contentLength.hashCode())
        result = 31 * result + (contentRange?.hashCode() ?: 0)
        result = 31 * result + (contentType?.hashCode() ?: 0)
        result = 31 * result + (deleteMarker.hashCode())
        result = 31 * result + (eTag?.hashCode() ?: 0)
        result = 31 * result + (expiration?.hashCode() ?: 0)
        result = 31 * result + (expires?.hashCode() ?: 0)
        result = 31 * result + (lastModified?.hashCode() ?: 0)
        result = 31 * result + (metadata?.hashCode() ?: 0)
        result = 31 * result + (missingMeta)
        result = 31 * result + (objectLockLegalHoldStatus?.hashCode() ?: 0)
        result = 31 * result + (objectLockMode?.hashCode() ?: 0)
        result = 31 * result + (objectLockRetainUntilDate?.hashCode() ?: 0)
        result = 31 * result + (partsCount)
        result = 31 * result + (replicationStatus?.hashCode() ?: 0)
        result = 31 * result + (requestCharged?.hashCode() ?: 0)
        result = 31 * result + (restore?.hashCode() ?: 0)
        result = 31 * result + (serverSideEncryption?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerAlgorithm?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerKeyMd5?.hashCode() ?: 0)
        result = 31 * result + (ssekmsKeyId?.hashCode() ?: 0)
        result = 31 * result + (storageClass?.hashCode() ?: 0)
        result = 31 * result + (tagCount)
        result = 31 * result + (versionId?.hashCode() ?: 0)
        result = 31 * result + (websiteRedirectLocation?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetObjectResponse

        if (acceptRanges != other.acceptRanges) return false
        if (body != other.body) return false
        if (bucketKeyEnabled != other.bucketKeyEnabled) return false
        if (cacheControl != other.cacheControl) return false
        if (contentDisposition != other.contentDisposition) return false
        if (contentEncoding != other.contentEncoding) return false
        if (contentLanguage != other.contentLanguage) return false
        if (contentLength != other.contentLength) return false
        if (contentRange != other.contentRange) return false
        if (contentType != other.contentType) return false
        if (deleteMarker != other.deleteMarker) return false
        if (eTag != other.eTag) return false
        if (expiration != other.expiration) return false
        if (expires != other.expires) return false
        if (lastModified != other.lastModified) return false
        if (metadata != other.metadata) return false
        if (missingMeta != other.missingMeta) return false
        if (objectLockLegalHoldStatus != other.objectLockLegalHoldStatus) return false
        if (objectLockMode != other.objectLockMode) return false
        if (objectLockRetainUntilDate != other.objectLockRetainUntilDate) return false
        if (partsCount != other.partsCount) return false
        if (replicationStatus != other.replicationStatus) return false
        if (requestCharged != other.requestCharged) return false
        if (restore != other.restore) return false
        if (serverSideEncryption != other.serverSideEncryption) return false
        if (sseCustomerAlgorithm != other.sseCustomerAlgorithm) return false
        if (sseCustomerKeyMd5 != other.sseCustomerKeyMd5) return false
        if (ssekmsKeyId != other.ssekmsKeyId) return false
        if (storageClass != other.storageClass) return false
        if (tagCount != other.tagCount) return false
        if (versionId != other.versionId) return false
        if (websiteRedirectLocation != other.websiteRedirectLocation) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetObjectResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetObjectResponse
        /**
         * Indicates that a range of bytes was specified.
         */
        fun acceptRanges(acceptRanges: String): FluentBuilder
        /**
         * Object data.
         */
        fun body(body: ByteStream): FluentBuilder
        /**
         * Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
         */
        fun bucketKeyEnabled(bucketKeyEnabled: Boolean): FluentBuilder
        /**
         * Specifies caching behavior along the request/reply chain.
         */
        fun cacheControl(cacheControl: String): FluentBuilder
        /**
         * Specifies presentational information for the object.
         */
        fun contentDisposition(contentDisposition: String): FluentBuilder
        /**
         * Specifies what content encodings have been applied to the object and thus what decoding
         * mechanisms must be applied to obtain the media-type referenced by the Content-Type header
         * field.
         */
        fun contentEncoding(contentEncoding: String): FluentBuilder
        /**
         * The language the content is in.
         */
        fun contentLanguage(contentLanguage: String): FluentBuilder
        /**
         * Size of the body in bytes.
         */
        fun contentLength(contentLength: Long): FluentBuilder
        /**
         * The portion of the object returned in the response.
         */
        fun contentRange(contentRange: String): FluentBuilder
        /**
         * A standard MIME type describing the format of the object data.
         */
        fun contentType(contentType: String): FluentBuilder
        /**
         * Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
         * false, this response header does not appear in the response.
         */
        fun deleteMarker(deleteMarker: Boolean): FluentBuilder
        /**
         * An ETag is an opaque identifier assigned by a web server to a specific version of a
         * resource found at a URL.
         */
        fun eTag(eTag: String): FluentBuilder
        /**
         * If the object expiration is configured (see PUT Bucket lifecycle), the response includes
         * this header. It includes the expiry-date and rule-id key-value pairs providing object
         * expiration information. The value of the rule-id is URL encoded.
         */
        fun expiration(expiration: String): FluentBuilder
        /**
         * The date and time at which the object is no longer cacheable.
         */
        fun expires(expires: Instant): FluentBuilder
        /**
         * Creation date of the object.
         */
        fun lastModified(lastModified: Instant): FluentBuilder
        /**
         * A map of metadata to store with the object in S3.
         */
        fun metadata(metadata: Map<String, String>): FluentBuilder
        /**
         * This is set to the number of metadata entries not returned in x-amz-meta
         * headers. This can happen if you create metadata using an API like SOAP that supports more
         * flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
         * values are not legal HTTP headers.
         */
        fun missingMeta(missingMeta: Int): FluentBuilder
        /**
         * Indicates whether this object has an active legal hold. This field is only returned if
         * you have permission to view an object's legal hold status.
         */
        fun objectLockLegalHoldStatus(objectLockLegalHoldStatus: ObjectLockLegalHoldStatus): FluentBuilder
        /**
         * The Object Lock mode currently in place for this object.
         */
        fun objectLockMode(objectLockMode: ObjectLockMode): FluentBuilder
        /**
         * The date and time when this object's Object Lock will expire.
         */
        fun objectLockRetainUntilDate(objectLockRetainUntilDate: Instant): FluentBuilder
        /**
         * The count of parts this object has.
         */
        fun partsCount(partsCount: Int): FluentBuilder
        /**
         * Amazon S3 can return this if your request involves a bucket that is either a source or
         * destination in a replication rule.
         */
        fun replicationStatus(replicationStatus: ReplicationStatus): FluentBuilder
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        fun requestCharged(requestCharged: RequestCharged): FluentBuilder
        /**
         * Provides information about object restoration action and expiration time of the
         * restored object copy.
         */
        fun restore(restore: String): FluentBuilder
        /**
         * The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
         * AES256, aws:kms).
         */
        fun serverSideEncryption(serverSideEncryption: ServerSideEncryption): FluentBuilder
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header confirming the encryption algorithm used.
         */
        fun sseCustomerAlgorithm(sseCustomerAlgorithm: String): FluentBuilder
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header to provide round-trip message integrity verification of
         * the customer-provided encryption key.
         */
        fun sseCustomerKeyMd5(sseCustomerKeyMd5: String): FluentBuilder
        /**
         * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
         * customer managed key that was used for the object.
         */
        fun ssekmsKeyId(ssekmsKeyId: String): FluentBuilder
        /**
         * Provides storage class information of the object. Amazon S3 returns this header for all
         * objects except for S3 Standard storage class objects.
         */
        fun storageClass(storageClass: StorageClass): FluentBuilder
        /**
         * The number of tags, if any, on the object.
         */
        fun tagCount(tagCount: Int): FluentBuilder
        /**
         * Version of the object.
         */
        fun versionId(versionId: String): FluentBuilder
        /**
         * If the bucket is configured as a website, redirects requests for this object to another
         * object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
         * the object metadata.
         */
        fun websiteRedirectLocation(websiteRedirectLocation: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates that a range of bytes was specified.
         */
        var acceptRanges: String?
        /**
         * Object data.
         */
        var body: ByteStream?
        /**
         * Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
         */
        var bucketKeyEnabled: Boolean
        /**
         * Specifies caching behavior along the request/reply chain.
         */
        var cacheControl: String?
        /**
         * Specifies presentational information for the object.
         */
        var contentDisposition: String?
        /**
         * Specifies what content encodings have been applied to the object and thus what decoding
         * mechanisms must be applied to obtain the media-type referenced by the Content-Type header
         * field.
         */
        var contentEncoding: String?
        /**
         * The language the content is in.
         */
        var contentLanguage: String?
        /**
         * Size of the body in bytes.
         */
        var contentLength: Long
        /**
         * The portion of the object returned in the response.
         */
        var contentRange: String?
        /**
         * A standard MIME type describing the format of the object data.
         */
        var contentType: String?
        /**
         * Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If
         * false, this response header does not appear in the response.
         */
        var deleteMarker: Boolean
        /**
         * An ETag is an opaque identifier assigned by a web server to a specific version of a
         * resource found at a URL.
         */
        var eTag: String?
        /**
         * If the object expiration is configured (see PUT Bucket lifecycle), the response includes
         * this header. It includes the expiry-date and rule-id key-value pairs providing object
         * expiration information. The value of the rule-id is URL encoded.
         */
        var expiration: String?
        /**
         * The date and time at which the object is no longer cacheable.
         */
        var expires: Instant?
        /**
         * Creation date of the object.
         */
        var lastModified: Instant?
        /**
         * A map of metadata to store with the object in S3.
         */
        var metadata: Map<String, String>?
        /**
         * This is set to the number of metadata entries not returned in x-amz-meta
         * headers. This can happen if you create metadata using an API like SOAP that supports more
         * flexible metadata than the REST API. For example, using SOAP, you can create metadata whose
         * values are not legal HTTP headers.
         */
        var missingMeta: Int
        /**
         * Indicates whether this object has an active legal hold. This field is only returned if
         * you have permission to view an object's legal hold status.
         */
        var objectLockLegalHoldStatus: ObjectLockLegalHoldStatus?
        /**
         * The Object Lock mode currently in place for this object.
         */
        var objectLockMode: ObjectLockMode?
        /**
         * The date and time when this object's Object Lock will expire.
         */
        var objectLockRetainUntilDate: Instant?
        /**
         * The count of parts this object has.
         */
        var partsCount: Int
        /**
         * Amazon S3 can return this if your request involves a bucket that is either a source or
         * destination in a replication rule.
         */
        var replicationStatus: ReplicationStatus?
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        var requestCharged: RequestCharged?
        /**
         * Provides information about object restoration action and expiration time of the
         * restored object copy.
         */
        var restore: String?
        /**
         * The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
         * AES256, aws:kms).
         */
        var serverSideEncryption: ServerSideEncryption?
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header confirming the encryption algorithm used.
         */
        var sseCustomerAlgorithm: String?
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header to provide round-trip message integrity verification of
         * the customer-provided encryption key.
         */
        var sseCustomerKeyMd5: String?
        /**
         * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
         * customer managed key that was used for the object.
         */
        var ssekmsKeyId: String?
        /**
         * Provides storage class information of the object. Amazon S3 returns this header for all
         * objects except for S3 Standard storage class objects.
         */
        var storageClass: StorageClass?
        /**
         * The number of tags, if any, on the object.
         */
        var tagCount: Int
        /**
         * Version of the object.
         */
        var versionId: String?
        /**
         * If the bucket is configured as a website, redirects requests for this object to another
         * object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
         * the object metadata.
         */
        var websiteRedirectLocation: String?

        fun build(): GetObjectResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var acceptRanges: String? = null
        override var body: ByteStream? = null
        override var bucketKeyEnabled: Boolean = false
        override var cacheControl: String? = null
        override var contentDisposition: String? = null
        override var contentEncoding: String? = null
        override var contentLanguage: String? = null
        override var contentLength: Long = 0L
        override var contentRange: String? = null
        override var contentType: String? = null
        override var deleteMarker: Boolean = false
        override var eTag: String? = null
        override var expiration: String? = null
        override var expires: Instant? = null
        override var lastModified: Instant? = null
        override var metadata: Map<String, String>? = null
        override var missingMeta: Int = 0
        override var objectLockLegalHoldStatus: ObjectLockLegalHoldStatus? = null
        override var objectLockMode: ObjectLockMode? = null
        override var objectLockRetainUntilDate: Instant? = null
        override var partsCount: Int = 0
        override var replicationStatus: ReplicationStatus? = null
        override var requestCharged: RequestCharged? = null
        override var restore: String? = null
        override var serverSideEncryption: ServerSideEncryption? = null
        override var sseCustomerAlgorithm: String? = null
        override var sseCustomerKeyMd5: String? = null
        override var ssekmsKeyId: String? = null
        override var storageClass: StorageClass? = null
        override var tagCount: Int = 0
        override var versionId: String? = null
        override var websiteRedirectLocation: String? = null

        constructor(x: GetObjectResponse) : this() {
            this.acceptRanges = x.acceptRanges
            this.body = x.body
            this.bucketKeyEnabled = x.bucketKeyEnabled
            this.cacheControl = x.cacheControl
            this.contentDisposition = x.contentDisposition
            this.contentEncoding = x.contentEncoding
            this.contentLanguage = x.contentLanguage
            this.contentLength = x.contentLength
            this.contentRange = x.contentRange
            this.contentType = x.contentType
            this.deleteMarker = x.deleteMarker
            this.eTag = x.eTag
            this.expiration = x.expiration
            this.expires = x.expires
            this.lastModified = x.lastModified
            this.metadata = x.metadata
            this.missingMeta = x.missingMeta
            this.objectLockLegalHoldStatus = x.objectLockLegalHoldStatus
            this.objectLockMode = x.objectLockMode
            this.objectLockRetainUntilDate = x.objectLockRetainUntilDate
            this.partsCount = x.partsCount
            this.replicationStatus = x.replicationStatus
            this.requestCharged = x.requestCharged
            this.restore = x.restore
            this.serverSideEncryption = x.serverSideEncryption
            this.sseCustomerAlgorithm = x.sseCustomerAlgorithm
            this.sseCustomerKeyMd5 = x.sseCustomerKeyMd5
            this.ssekmsKeyId = x.ssekmsKeyId
            this.storageClass = x.storageClass
            this.tagCount = x.tagCount
            this.versionId = x.versionId
            this.websiteRedirectLocation = x.websiteRedirectLocation
        }

        override fun build(): GetObjectResponse = GetObjectResponse(this)
        override fun acceptRanges(acceptRanges: String): FluentBuilder = apply { this.acceptRanges = acceptRanges }
        override fun body(body: ByteStream): FluentBuilder = apply { this.body = body }
        override fun bucketKeyEnabled(bucketKeyEnabled: Boolean): FluentBuilder = apply { this.bucketKeyEnabled = bucketKeyEnabled }
        override fun cacheControl(cacheControl: String): FluentBuilder = apply { this.cacheControl = cacheControl }
        override fun contentDisposition(contentDisposition: String): FluentBuilder = apply { this.contentDisposition = contentDisposition }
        override fun contentEncoding(contentEncoding: String): FluentBuilder = apply { this.contentEncoding = contentEncoding }
        override fun contentLanguage(contentLanguage: String): FluentBuilder = apply { this.contentLanguage = contentLanguage }
        override fun contentLength(contentLength: Long): FluentBuilder = apply { this.contentLength = contentLength }
        override fun contentRange(contentRange: String): FluentBuilder = apply { this.contentRange = contentRange }
        override fun contentType(contentType: String): FluentBuilder = apply { this.contentType = contentType }
        override fun deleteMarker(deleteMarker: Boolean): FluentBuilder = apply { this.deleteMarker = deleteMarker }
        override fun eTag(eTag: String): FluentBuilder = apply { this.eTag = eTag }
        override fun expiration(expiration: String): FluentBuilder = apply { this.expiration = expiration }
        override fun expires(expires: Instant): FluentBuilder = apply { this.expires = expires }
        override fun lastModified(lastModified: Instant): FluentBuilder = apply { this.lastModified = lastModified }
        override fun metadata(metadata: Map<String, String>): FluentBuilder = apply { this.metadata = metadata }
        override fun missingMeta(missingMeta: Int): FluentBuilder = apply { this.missingMeta = missingMeta }
        override fun objectLockLegalHoldStatus(objectLockLegalHoldStatus: ObjectLockLegalHoldStatus): FluentBuilder = apply { this.objectLockLegalHoldStatus = objectLockLegalHoldStatus }
        override fun objectLockMode(objectLockMode: ObjectLockMode): FluentBuilder = apply { this.objectLockMode = objectLockMode }
        override fun objectLockRetainUntilDate(objectLockRetainUntilDate: Instant): FluentBuilder = apply { this.objectLockRetainUntilDate = objectLockRetainUntilDate }
        override fun partsCount(partsCount: Int): FluentBuilder = apply { this.partsCount = partsCount }
        override fun replicationStatus(replicationStatus: ReplicationStatus): FluentBuilder = apply { this.replicationStatus = replicationStatus }
        override fun requestCharged(requestCharged: RequestCharged): FluentBuilder = apply { this.requestCharged = requestCharged }
        override fun restore(restore: String): FluentBuilder = apply { this.restore = restore }
        override fun serverSideEncryption(serverSideEncryption: ServerSideEncryption): FluentBuilder = apply { this.serverSideEncryption = serverSideEncryption }
        override fun sseCustomerAlgorithm(sseCustomerAlgorithm: String): FluentBuilder = apply { this.sseCustomerAlgorithm = sseCustomerAlgorithm }
        override fun sseCustomerKeyMd5(sseCustomerKeyMd5: String): FluentBuilder = apply { this.sseCustomerKeyMd5 = sseCustomerKeyMd5 }
        override fun ssekmsKeyId(ssekmsKeyId: String): FluentBuilder = apply { this.ssekmsKeyId = ssekmsKeyId }
        override fun storageClass(storageClass: StorageClass): FluentBuilder = apply { this.storageClass = storageClass }
        override fun tagCount(tagCount: Int): FluentBuilder = apply { this.tagCount = tagCount }
        override fun versionId(versionId: String): FluentBuilder = apply { this.versionId = versionId }
        override fun websiteRedirectLocation(websiteRedirectLocation: String): FluentBuilder = apply { this.websiteRedirectLocation = websiteRedirectLocation }
    }
}
