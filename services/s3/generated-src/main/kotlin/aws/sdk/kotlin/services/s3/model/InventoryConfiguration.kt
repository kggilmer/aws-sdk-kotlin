// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies the inventory configuration for an Amazon S3 bucket. For more information, see
 * <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET Bucket inventory in the Amazon S3 API Reference.
 */
class InventoryConfiguration private constructor(builder: BuilderImpl) {
    /**
     * Contains information about where to publish the inventory results.
     */
    val destination: InventoryDestination? = builder.destination
    /**
     * Specifies an inventory filter. The inventory only includes objects that meet the
     * filter's criteria.
     */
    val filter: InventoryFilter? = builder.filter
    /**
     * The ID used to identify the inventory configuration.
     */
    val id: String? = builder.id
    /**
     * Object versions to include in the inventory list. If set to All, the list
     * includes all the object versions, which adds the version-related fields
     * VersionId, IsLatest, and DeleteMarker to the
     * list. If set to Current, the list does not contain these version-related
     * fields.
     */
    val includedObjectVersions: InventoryIncludedObjectVersions? = builder.includedObjectVersions
    /**
     * Specifies whether the inventory is enabled or disabled. If set to True, an
     * inventory list is generated. If set to False, no inventory list is
     * generated.
     */
    val isEnabled: Boolean = builder.isEnabled
    /**
     * Contains the optional fields that are included in the inventory results.
     */
    val optionalFields: List<InventoryOptionalField>? = builder.optionalFields
    /**
     * Specifies the schedule for generating inventory results.
     */
    val schedule: InventorySchedule? = builder.schedule

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): InventoryConfiguration = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("InventoryConfiguration(")
        append("destination=$destination,")
        append("filter=$filter,")
        append("id=$id,")
        append("includedObjectVersions=$includedObjectVersions,")
        append("isEnabled=$isEnabled,")
        append("optionalFields=$optionalFields,")
        append("schedule=$schedule)")
    }

    override fun hashCode(): kotlin.Int {
        var result = destination?.hashCode() ?: 0
        result = 31 * result + (filter?.hashCode() ?: 0)
        result = 31 * result + (id?.hashCode() ?: 0)
        result = 31 * result + (includedObjectVersions?.hashCode() ?: 0)
        result = 31 * result + (isEnabled.hashCode())
        result = 31 * result + (optionalFields?.hashCode() ?: 0)
        result = 31 * result + (schedule?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as InventoryConfiguration

        if (destination != other.destination) return false
        if (filter != other.filter) return false
        if (id != other.id) return false
        if (includedObjectVersions != other.includedObjectVersions) return false
        if (isEnabled != other.isEnabled) return false
        if (optionalFields != other.optionalFields) return false
        if (schedule != other.schedule) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): InventoryConfiguration = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): InventoryConfiguration
        /**
         * Contains information about where to publish the inventory results.
         */
        fun destination(destination: InventoryDestination): FluentBuilder
        /**
         * Specifies an inventory filter. The inventory only includes objects that meet the
         * filter's criteria.
         */
        fun filter(filter: InventoryFilter): FluentBuilder
        /**
         * The ID used to identify the inventory configuration.
         */
        fun id(id: String): FluentBuilder
        /**
         * Object versions to include in the inventory list. If set to All, the list
         * includes all the object versions, which adds the version-related fields
         * VersionId, IsLatest, and DeleteMarker to the
         * list. If set to Current, the list does not contain these version-related
         * fields.
         */
        fun includedObjectVersions(includedObjectVersions: InventoryIncludedObjectVersions): FluentBuilder
        /**
         * Specifies whether the inventory is enabled or disabled. If set to True, an
         * inventory list is generated. If set to False, no inventory list is
         * generated.
         */
        fun isEnabled(isEnabled: Boolean): FluentBuilder
        /**
         * Contains the optional fields that are included in the inventory results.
         */
        fun optionalFields(optionalFields: List<InventoryOptionalField>): FluentBuilder
        /**
         * Specifies the schedule for generating inventory results.
         */
        fun schedule(schedule: InventorySchedule): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Contains information about where to publish the inventory results.
         */
        var destination: InventoryDestination?
        /**
         * Specifies an inventory filter. The inventory only includes objects that meet the
         * filter's criteria.
         */
        var filter: InventoryFilter?
        /**
         * The ID used to identify the inventory configuration.
         */
        var id: String?
        /**
         * Object versions to include in the inventory list. If set to All, the list
         * includes all the object versions, which adds the version-related fields
         * VersionId, IsLatest, and DeleteMarker to the
         * list. If set to Current, the list does not contain these version-related
         * fields.
         */
        var includedObjectVersions: InventoryIncludedObjectVersions?
        /**
         * Specifies whether the inventory is enabled or disabled. If set to True, an
         * inventory list is generated. If set to False, no inventory list is
         * generated.
         */
        var isEnabled: Boolean
        /**
         * Contains the optional fields that are included in the inventory results.
         */
        var optionalFields: List<InventoryOptionalField>?
        /**
         * Specifies the schedule for generating inventory results.
         */
        var schedule: InventorySchedule?

        fun build(): InventoryConfiguration
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.InventoryDestination] inside the given [block]
         */
        fun destination(block: InventoryDestination.DslBuilder.() -> kotlin.Unit) {
            this.destination = InventoryDestination.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.InventoryFilter] inside the given [block]
         */
        fun filter(block: InventoryFilter.DslBuilder.() -> kotlin.Unit) {
            this.filter = InventoryFilter.invoke(block)
        }
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.InventorySchedule] inside the given [block]
         */
        fun schedule(block: InventorySchedule.DslBuilder.() -> kotlin.Unit) {
            this.schedule = InventorySchedule.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var destination: InventoryDestination? = null
        override var filter: InventoryFilter? = null
        override var id: String? = null
        override var includedObjectVersions: InventoryIncludedObjectVersions? = null
        override var isEnabled: Boolean = false
        override var optionalFields: List<InventoryOptionalField>? = null
        override var schedule: InventorySchedule? = null

        constructor(x: InventoryConfiguration) : this() {
            this.destination = x.destination
            this.filter = x.filter
            this.id = x.id
            this.includedObjectVersions = x.includedObjectVersions
            this.isEnabled = x.isEnabled
            this.optionalFields = x.optionalFields
            this.schedule = x.schedule
        }

        override fun build(): InventoryConfiguration = InventoryConfiguration(this)
        override fun destination(destination: InventoryDestination): FluentBuilder = apply { this.destination = destination }
        override fun filter(filter: InventoryFilter): FluentBuilder = apply { this.filter = filter }
        override fun id(id: String): FluentBuilder = apply { this.id = id }
        override fun includedObjectVersions(includedObjectVersions: InventoryIncludedObjectVersions): FluentBuilder = apply { this.includedObjectVersions = includedObjectVersions }
        override fun isEnabled(isEnabled: Boolean): FluentBuilder = apply { this.isEnabled = isEnabled }
        override fun optionalFields(optionalFields: List<InventoryOptionalField>): FluentBuilder = apply { this.optionalFields = optionalFields }
        override fun schedule(schedule: InventorySchedule): FluentBuilder = apply { this.schedule = schedule }
    }
}
