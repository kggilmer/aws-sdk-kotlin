// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Optional configuration to replicate existing source bucket objects. For more
 * information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication">Replicating Existing Objects in the Amazon S3 User Guide.
 */
class ExistingObjectReplication private constructor(builder: BuilderImpl) {
    /**
     *
     */
    val status: ExistingObjectReplicationStatus? = builder.status

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): ExistingObjectReplication = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("ExistingObjectReplication(")
        append("status=$status)")
    }

    override fun hashCode(): kotlin.Int {
        var result = status?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExistingObjectReplication

        if (status != other.status) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): ExistingObjectReplication = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): ExistingObjectReplication
        /**
         *
         */
        fun status(status: ExistingObjectReplicationStatus): FluentBuilder
    }

    interface DslBuilder {
        /**
         *
         */
        var status: ExistingObjectReplicationStatus?

        fun build(): ExistingObjectReplication
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var status: ExistingObjectReplicationStatus? = null

        constructor(x: ExistingObjectReplication) : this() {
            this.status = x.status
        }

        override fun build(): ExistingObjectReplication = ExistingObjectReplication(this)
        override fun status(status: ExistingObjectReplicationStatus): FluentBuilder = apply { this.status = status }
    }
}
