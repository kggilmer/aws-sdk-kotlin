// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Details of the parts that were uploaded.
 */
class CompletedPart private constructor(builder: BuilderImpl) {
    /**
     * Entity tag returned when the part was uploaded.
     */
    val eTag: String? = builder.eTag
    /**
     * Part number that identifies the part. This is a positive integer between 1 and
     * 10,000.
     */
    val partNumber: Int = builder.partNumber

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CompletedPart = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CompletedPart(")
        append("eTag=$eTag,")
        append("partNumber=$partNumber)")
    }

    override fun hashCode(): kotlin.Int {
        var result = eTag?.hashCode() ?: 0
        result = 31 * result + (partNumber)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CompletedPart

        if (eTag != other.eTag) return false
        if (partNumber != other.partNumber) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CompletedPart = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CompletedPart
        /**
         * Entity tag returned when the part was uploaded.
         */
        fun eTag(eTag: String): FluentBuilder
        /**
         * Part number that identifies the part. This is a positive integer between 1 and
         * 10,000.
         */
        fun partNumber(partNumber: Int): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Entity tag returned when the part was uploaded.
         */
        var eTag: String?
        /**
         * Part number that identifies the part. This is a positive integer between 1 and
         * 10,000.
         */
        var partNumber: Int

        fun build(): CompletedPart
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var eTag: String? = null
        override var partNumber: Int = 0

        constructor(x: CompletedPart) : this() {
            this.eTag = x.eTag
            this.partNumber = x.partNumber
        }

        override fun build(): CompletedPart = CompletedPart(this)
        override fun eTag(eTag: String): FluentBuilder = apply { this.eTag = eTag }
        override fun partNumber(partNumber: Int): FluentBuilder = apply { this.partNumber = partNumber }
    }
}
