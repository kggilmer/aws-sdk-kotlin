// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class CopyObjectResponse private constructor(builder: BuilderImpl) {
    /**
     * Indicates whether the copied object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
     */
    val bucketKeyEnabled: Boolean = builder.bucketKeyEnabled
    /**
     * Container for all response elements.
     */
    val copyObjectResult: CopyObjectResult? = builder.copyObjectResult
    /**
     * Version of the copied object in the destination bucket.
     */
    val copySourceVersionId: String? = builder.copySourceVersionId
    /**
     * If the object expiration is configured, the response includes this header.
     */
    val expiration: String? = builder.expiration
    /**
     * If present, indicates that the requester was successfully charged for the
     * request.
     */
    val requestCharged: RequestCharged? = builder.requestCharged
    /**
     * The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
     * AES256, aws:kms).
     */
    val serverSideEncryption: ServerSideEncryption? = builder.serverSideEncryption
    /**
     * If server-side encryption with a customer-provided encryption key was requested, the
     * response will include this header confirming the encryption algorithm used.
     */
    val sseCustomerAlgorithm: String? = builder.sseCustomerAlgorithm
    /**
     * If server-side encryption with a customer-provided encryption key was requested, the
     * response will include this header to provide round-trip message integrity verification of
     * the customer-provided encryption key.
     */
    val sseCustomerKeyMd5: String? = builder.sseCustomerKeyMd5
    /**
     * If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The
     * value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
     * context key-value pairs.
     */
    val ssekmsEncryptionContext: String? = builder.ssekmsEncryptionContext
    /**
     * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
     * customer managed key that was used for the object.
     */
    val ssekmsKeyId: String? = builder.ssekmsKeyId
    /**
     * Version ID of the newly created copy.
     */
    val versionId: String? = builder.versionId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): CopyObjectResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("CopyObjectResponse(")
        append("bucketKeyEnabled=$bucketKeyEnabled,")
        append("copyObjectResult=$copyObjectResult,")
        append("copySourceVersionId=$copySourceVersionId,")
        append("expiration=$expiration,")
        append("requestCharged=$requestCharged,")
        append("serverSideEncryption=$serverSideEncryption,")
        append("sseCustomerAlgorithm=$sseCustomerAlgorithm,")
        append("sseCustomerKeyMd5=$sseCustomerKeyMd5,")
        append("ssekmsEncryptionContext=*** Sensitive Data Redacted ***,")
        append("ssekmsKeyId=*** Sensitive Data Redacted ***,")
        append("versionId=$versionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucketKeyEnabled.hashCode()
        result = 31 * result + (copyObjectResult?.hashCode() ?: 0)
        result = 31 * result + (copySourceVersionId?.hashCode() ?: 0)
        result = 31 * result + (expiration?.hashCode() ?: 0)
        result = 31 * result + (requestCharged?.hashCode() ?: 0)
        result = 31 * result + (serverSideEncryption?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerAlgorithm?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerKeyMd5?.hashCode() ?: 0)
        result = 31 * result + (ssekmsEncryptionContext?.hashCode() ?: 0)
        result = 31 * result + (ssekmsKeyId?.hashCode() ?: 0)
        result = 31 * result + (versionId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as CopyObjectResponse

        if (bucketKeyEnabled != other.bucketKeyEnabled) return false
        if (copyObjectResult != other.copyObjectResult) return false
        if (copySourceVersionId != other.copySourceVersionId) return false
        if (expiration != other.expiration) return false
        if (requestCharged != other.requestCharged) return false
        if (serverSideEncryption != other.serverSideEncryption) return false
        if (sseCustomerAlgorithm != other.sseCustomerAlgorithm) return false
        if (sseCustomerKeyMd5 != other.sseCustomerKeyMd5) return false
        if (ssekmsEncryptionContext != other.ssekmsEncryptionContext) return false
        if (ssekmsKeyId != other.ssekmsKeyId) return false
        if (versionId != other.versionId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): CopyObjectResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): CopyObjectResponse
        /**
         * Indicates whether the copied object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
         */
        fun bucketKeyEnabled(bucketKeyEnabled: Boolean): FluentBuilder
        /**
         * Container for all response elements.
         */
        fun copyObjectResult(copyObjectResult: CopyObjectResult): FluentBuilder
        /**
         * Version of the copied object in the destination bucket.
         */
        fun copySourceVersionId(copySourceVersionId: String): FluentBuilder
        /**
         * If the object expiration is configured, the response includes this header.
         */
        fun expiration(expiration: String): FluentBuilder
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        fun requestCharged(requestCharged: RequestCharged): FluentBuilder
        /**
         * The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
         * AES256, aws:kms).
         */
        fun serverSideEncryption(serverSideEncryption: ServerSideEncryption): FluentBuilder
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header confirming the encryption algorithm used.
         */
        fun sseCustomerAlgorithm(sseCustomerAlgorithm: String): FluentBuilder
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header to provide round-trip message integrity verification of
         * the customer-provided encryption key.
         */
        fun sseCustomerKeyMd5(sseCustomerKeyMd5: String): FluentBuilder
        /**
         * If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The
         * value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
         * context key-value pairs.
         */
        fun ssekmsEncryptionContext(ssekmsEncryptionContext: String): FluentBuilder
        /**
         * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
         * customer managed key that was used for the object.
         */
        fun ssekmsKeyId(ssekmsKeyId: String): FluentBuilder
        /**
         * Version ID of the newly created copy.
         */
        fun versionId(versionId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * Indicates whether the copied object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
         */
        var bucketKeyEnabled: Boolean
        /**
         * Container for all response elements.
         */
        var copyObjectResult: CopyObjectResult?
        /**
         * Version of the copied object in the destination bucket.
         */
        var copySourceVersionId: String?
        /**
         * If the object expiration is configured, the response includes this header.
         */
        var expiration: String?
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        var requestCharged: RequestCharged?
        /**
         * The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
         * AES256, aws:kms).
         */
        var serverSideEncryption: ServerSideEncryption?
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header confirming the encryption algorithm used.
         */
        var sseCustomerAlgorithm: String?
        /**
         * If server-side encryption with a customer-provided encryption key was requested, the
         * response will include this header to provide round-trip message integrity verification of
         * the customer-provided encryption key.
         */
        var sseCustomerKeyMd5: String?
        /**
         * If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The
         * value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
         * context key-value pairs.
         */
        var ssekmsEncryptionContext: String?
        /**
         * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
         * customer managed key that was used for the object.
         */
        var ssekmsKeyId: String?
        /**
         * Version ID of the newly created copy.
         */
        var versionId: String?

        fun build(): CopyObjectResponse
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.CopyObjectResult] inside the given [block]
         */
        fun copyObjectResult(block: CopyObjectResult.DslBuilder.() -> kotlin.Unit) {
            this.copyObjectResult = CopyObjectResult.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucketKeyEnabled: Boolean = false
        override var copyObjectResult: CopyObjectResult? = null
        override var copySourceVersionId: String? = null
        override var expiration: String? = null
        override var requestCharged: RequestCharged? = null
        override var serverSideEncryption: ServerSideEncryption? = null
        override var sseCustomerAlgorithm: String? = null
        override var sseCustomerKeyMd5: String? = null
        override var ssekmsEncryptionContext: String? = null
        override var ssekmsKeyId: String? = null
        override var versionId: String? = null

        constructor(x: CopyObjectResponse) : this() {
            this.bucketKeyEnabled = x.bucketKeyEnabled
            this.copyObjectResult = x.copyObjectResult
            this.copySourceVersionId = x.copySourceVersionId
            this.expiration = x.expiration
            this.requestCharged = x.requestCharged
            this.serverSideEncryption = x.serverSideEncryption
            this.sseCustomerAlgorithm = x.sseCustomerAlgorithm
            this.sseCustomerKeyMd5 = x.sseCustomerKeyMd5
            this.ssekmsEncryptionContext = x.ssekmsEncryptionContext
            this.ssekmsKeyId = x.ssekmsKeyId
            this.versionId = x.versionId
        }

        override fun build(): CopyObjectResponse = CopyObjectResponse(this)
        override fun bucketKeyEnabled(bucketKeyEnabled: Boolean): FluentBuilder = apply { this.bucketKeyEnabled = bucketKeyEnabled }
        override fun copyObjectResult(copyObjectResult: CopyObjectResult): FluentBuilder = apply { this.copyObjectResult = copyObjectResult }
        override fun copySourceVersionId(copySourceVersionId: String): FluentBuilder = apply { this.copySourceVersionId = copySourceVersionId }
        override fun expiration(expiration: String): FluentBuilder = apply { this.expiration = expiration }
        override fun requestCharged(requestCharged: RequestCharged): FluentBuilder = apply { this.requestCharged = requestCharged }
        override fun serverSideEncryption(serverSideEncryption: ServerSideEncryption): FluentBuilder = apply { this.serverSideEncryption = serverSideEncryption }
        override fun sseCustomerAlgorithm(sseCustomerAlgorithm: String): FluentBuilder = apply { this.sseCustomerAlgorithm = sseCustomerAlgorithm }
        override fun sseCustomerKeyMd5(sseCustomerKeyMd5: String): FluentBuilder = apply { this.sseCustomerKeyMd5 = sseCustomerKeyMd5 }
        override fun ssekmsEncryptionContext(ssekmsEncryptionContext: String): FluentBuilder = apply { this.ssekmsEncryptionContext = ssekmsEncryptionContext }
        override fun ssekmsKeyId(ssekmsKeyId: String): FluentBuilder = apply { this.ssekmsKeyId = ssekmsKeyId }
        override fun versionId(versionId: String): FluentBuilder = apply { this.versionId = versionId }
    }
}
