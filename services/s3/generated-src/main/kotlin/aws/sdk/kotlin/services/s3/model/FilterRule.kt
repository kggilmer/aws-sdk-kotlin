// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or
 * prefix of the key name.
 */
class FilterRule private constructor(builder: BuilderImpl) {
    /**
     * The object key name prefix or suffix identifying one or more objects to which the
     * filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and
     * suffixes are not supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications
     * in the Amazon S3 User Guide.
     */
    val name: FilterRuleName? = builder.name
    /**
     * The value that the filter searches for in object key names.
     */
    val value: String? = builder.value

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): FilterRule = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("FilterRule(")
        append("name=$name,")
        append("value=$value)")
    }

    override fun hashCode(): kotlin.Int {
        var result = name?.hashCode() ?: 0
        result = 31 * result + (value?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as FilterRule

        if (name != other.name) return false
        if (value != other.value) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): FilterRule = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): FilterRule
        /**
         * The object key name prefix or suffix identifying one or more objects to which the
         * filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and
         * suffixes are not supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications
         * in the Amazon S3 User Guide.
         */
        fun name(name: FilterRuleName): FluentBuilder
        /**
         * The value that the filter searches for in object key names.
         */
        fun value(value: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The object key name prefix or suffix identifying one or more objects to which the
         * filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and
         * suffixes are not supported. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications
         * in the Amazon S3 User Guide.
         */
        var name: FilterRuleName?
        /**
         * The value that the filter searches for in object key names.
         */
        var value: String?

        fun build(): FilterRule
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var name: FilterRuleName? = null
        override var value: String? = null

        constructor(x: FilterRule) : this() {
            this.name = x.name
            this.value = x.value
        }

        override fun build(): FilterRule = FilterRule(this)
        override fun name(name: FilterRuleName): FluentBuilder = apply { this.name = name }
        override fun value(value: String): FluentBuilder = apply { this.value = value }
    }
}
