// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class GetBucketCorsResponse private constructor(builder: BuilderImpl) {
    /**
     * A set of origins and methods (cross-origin access that you want to allow). You can add
     * up to 100 rules to the configuration.
     */
    val corsRules: List<CorsRule>? = builder.corsRules

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetBucketCorsResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetBucketCorsResponse(")
        append("corsRules=$corsRules)")
    }

    override fun hashCode(): kotlin.Int {
        var result = corsRules?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetBucketCorsResponse

        if (corsRules != other.corsRules) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetBucketCorsResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetBucketCorsResponse
        /**
         * A set of origins and methods (cross-origin access that you want to allow). You can add
         * up to 100 rules to the configuration.
         */
        fun corsRules(corsRules: List<CorsRule>): FluentBuilder
    }

    interface DslBuilder {
        /**
         * A set of origins and methods (cross-origin access that you want to allow). You can add
         * up to 100 rules to the configuration.
         */
        var corsRules: List<CorsRule>?

        fun build(): GetBucketCorsResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var corsRules: List<CorsRule>? = null

        constructor(x: GetBucketCorsResponse) : this() {
            this.corsRules = x.corsRules
        }

        override fun build(): GetBucketCorsResponse = GetBucketCorsResponse(this)
        override fun corsRules(corsRules: List<CorsRule>): FluentBuilder = apply { this.corsRules = corsRules }
    }
}
