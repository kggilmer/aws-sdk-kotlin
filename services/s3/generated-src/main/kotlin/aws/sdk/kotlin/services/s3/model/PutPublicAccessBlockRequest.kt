// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class PutPublicAccessBlockRequest private constructor(builder: BuilderImpl) {
    /**
     * The name of the Amazon S3 bucket whose PublicAccessBlock configuration you want
     * to set.
     */
    val bucket: String? = builder.bucket
    /**
     * The MD5 hash of the PutPublicAccessBlock request body.
     * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
     */
    val contentMd5: String? = builder.contentMd5
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: String? = builder.expectedBucketOwner
    /**
     * The PublicAccessBlock configuration that you want to apply to this Amazon S3
     * bucket. You can enable the configuration options in any combination. For more information
     * about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public" in the Amazon S3 User Guide.
     */
    val publicAccessBlockConfiguration: PublicAccessBlockConfiguration? = builder.publicAccessBlockConfiguration

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): PutPublicAccessBlockRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("PutPublicAccessBlockRequest(")
        append("bucket=$bucket,")
        append("contentMd5=$contentMd5,")
        append("expectedBucketOwner=$expectedBucketOwner,")
        append("publicAccessBlockConfiguration=$publicAccessBlockConfiguration)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (contentMd5?.hashCode() ?: 0)
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        result = 31 * result + (publicAccessBlockConfiguration?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PutPublicAccessBlockRequest

        if (bucket != other.bucket) return false
        if (contentMd5 != other.contentMd5) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false
        if (publicAccessBlockConfiguration != other.publicAccessBlockConfiguration) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): PutPublicAccessBlockRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): PutPublicAccessBlockRequest
        /**
         * The name of the Amazon S3 bucket whose PublicAccessBlock configuration you want
         * to set.
         */
        fun bucket(bucket: String): FluentBuilder
        /**
         * The MD5 hash of the PutPublicAccessBlock request body.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        fun contentMd5(contentMd5: String): FluentBuilder
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder
        /**
         * The PublicAccessBlock configuration that you want to apply to this Amazon S3
         * bucket. You can enable the configuration options in any combination. For more information
         * about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public" in the Amazon S3 User Guide.
         */
        fun publicAccessBlockConfiguration(publicAccessBlockConfiguration: PublicAccessBlockConfiguration): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The name of the Amazon S3 bucket whose PublicAccessBlock configuration you want
         * to set.
         */
        var bucket: String?
        /**
         * The MD5 hash of the PutPublicAccessBlock request body.
         * For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.
         */
        var contentMd5: String?
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: String?
        /**
         * The PublicAccessBlock configuration that you want to apply to this Amazon S3
         * bucket. You can enable the configuration options in any combination. For more information
         * about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public" in the Amazon S3 User Guide.
         */
        var publicAccessBlockConfiguration: PublicAccessBlockConfiguration?

        fun build(): PutPublicAccessBlockRequest
        /**
         * construct an [aws.sdk.kotlin.services.s3.model.PublicAccessBlockConfiguration] inside the given [block]
         */
        fun publicAccessBlockConfiguration(block: PublicAccessBlockConfiguration.DslBuilder.() -> kotlin.Unit) {
            this.publicAccessBlockConfiguration = PublicAccessBlockConfiguration.invoke(block)
        }
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var bucket: String? = null
        override var contentMd5: String? = null
        override var expectedBucketOwner: String? = null
        override var publicAccessBlockConfiguration: PublicAccessBlockConfiguration? = null

        constructor(x: PutPublicAccessBlockRequest) : this() {
            this.bucket = x.bucket
            this.contentMd5 = x.contentMd5
            this.expectedBucketOwner = x.expectedBucketOwner
            this.publicAccessBlockConfiguration = x.publicAccessBlockConfiguration
        }

        override fun build(): PutPublicAccessBlockRequest = PutPublicAccessBlockRequest(this)
        override fun bucket(bucket: String): FluentBuilder = apply { this.bucket = bucket }
        override fun contentMd5(contentMd5: String): FluentBuilder = apply { this.contentMd5 = contentMd5 }
        override fun expectedBucketOwner(expectedBucketOwner: String): FluentBuilder = apply { this.expectedBucketOwner = expectedBucketOwner }
        override fun publicAccessBlockConfiguration(publicAccessBlockConfiguration: PublicAccessBlockConfiguration): FluentBuilder = apply { this.publicAccessBlockConfiguration = publicAccessBlockConfiguration }
    }
}
