// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.sts.model



/**
 * A document that contains additional information about the authorization status of a
 * request from an encoded message that is returned in response to an Amazon Web Services request.
 */
class DecodeAuthorizationMessageResponse private constructor(builder: BuilderImpl) {
    /**
     * An XML document that contains the decoded message.
     */
    val decodedMessage: String? = builder.decodedMessage

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DecodeAuthorizationMessageResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DecodeAuthorizationMessageResponse(")
        append("decodedMessage=$decodedMessage)")
    }

    override fun hashCode(): kotlin.Int {
        var result = decodedMessage?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DecodeAuthorizationMessageResponse

        if (decodedMessage != other.decodedMessage) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DecodeAuthorizationMessageResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DecodeAuthorizationMessageResponse
        /**
         * An XML document that contains the decoded message.
         */
        fun decodedMessage(decodedMessage: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * An XML document that contains the decoded message.
         */
        var decodedMessage: String?

        fun build(): DecodeAuthorizationMessageResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var decodedMessage: String? = null

        constructor(x: DecodeAuthorizationMessageResponse) : this() {
            this.decodedMessage = x.decodedMessage
        }

        override fun build(): DecodeAuthorizationMessageResponse = DecodeAuthorizationMessageResponse(this)
        override fun decodedMessage(decodedMessage: String): FluentBuilder = apply { this.decodedMessage = decodedMessage }
    }
}
