// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.sts.model



class DecodeAuthorizationMessageRequest private constructor(builder: BuilderImpl) {
    /**
     * The encoded message that was returned with the response.
     */
    val encodedMessage: String? = builder.encodedMessage

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): DecodeAuthorizationMessageRequest = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("DecodeAuthorizationMessageRequest(")
        append("encodedMessage=$encodedMessage)")
    }

    override fun hashCode(): kotlin.Int {
        var result = encodedMessage?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as DecodeAuthorizationMessageRequest

        if (encodedMessage != other.encodedMessage) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): DecodeAuthorizationMessageRequest = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): DecodeAuthorizationMessageRequest
        /**
         * The encoded message that was returned with the response.
         */
        fun encodedMessage(encodedMessage: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The encoded message that was returned with the response.
         */
        var encodedMessage: String?

        fun build(): DecodeAuthorizationMessageRequest
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var encodedMessage: String? = null

        constructor(x: DecodeAuthorizationMessageRequest) : this() {
            this.encodedMessage = x.encodedMessage
        }

        override fun build(): DecodeAuthorizationMessageRequest = DecodeAuthorizationMessageRequest(this)
        override fun encodedMessage(encodedMessage: String): FluentBuilder = apply { this.encodedMessage = encodedMessage }
    }
}
