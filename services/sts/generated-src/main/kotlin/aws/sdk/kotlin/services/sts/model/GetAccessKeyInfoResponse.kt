// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.sts.model



class GetAccessKeyInfoResponse private constructor(builder: BuilderImpl) {
    /**
     * The number used to identify the Amazon Web Services account.
     */
    val account: String? = builder.account

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): GetAccessKeyInfoResponse = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("GetAccessKeyInfoResponse(")
        append("account=$account)")
    }

    override fun hashCode(): kotlin.Int {
        var result = account?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GetAccessKeyInfoResponse

        if (account != other.account) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): GetAccessKeyInfoResponse = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): GetAccessKeyInfoResponse
        /**
         * The number used to identify the Amazon Web Services account.
         */
        fun account(account: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The number used to identify the Amazon Web Services account.
         */
        var account: String?

        fun build(): GetAccessKeyInfoResponse
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var account: String? = null

        constructor(x: GetAccessKeyInfoResponse) : this() {
            this.account = x.account
        }

        override fun build(): GetAccessKeyInfoResponse = GetAccessKeyInfoResponse(this)
        override fun account(account: String): FluentBuilder = apply { this.account = account }
    }
}
