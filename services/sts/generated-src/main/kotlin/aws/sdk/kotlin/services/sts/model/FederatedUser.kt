// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.sts.model



/**
 * Identifiers for the federated user that is associated with the credentials.
 */
class FederatedUser private constructor(builder: BuilderImpl) {
    /**
     * The ARN that specifies the federated user that is associated with the credentials. For
     * more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
     * Identifiers in the IAM User Guide.
     */
    val arn: String? = builder.arn
    /**
     * The string that identifies the federated user associated with the credentials, similar
     * to the unique ID of an IAM user.
     */
    val federatedUserId: String? = builder.federatedUserId

    companion object {
        @JvmStatic
        fun fluentBuilder(): FluentBuilder = BuilderImpl()

        internal fun builder(): DslBuilder = BuilderImpl()

        operator fun invoke(block: DslBuilder.() -> kotlin.Unit): FederatedUser = BuilderImpl().apply(block).build()

    }

    override fun toString(): kotlin.String = buildString {
        append("FederatedUser(")
        append("arn=$arn,")
        append("federatedUserId=$federatedUserId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = arn?.hashCode() ?: 0
        result = 31 * result + (federatedUserId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as FederatedUser

        if (arn != other.arn) return false
        if (federatedUserId != other.federatedUserId) return false

        return true
    }

    fun copy(block: DslBuilder.() -> kotlin.Unit = {}): FederatedUser = BuilderImpl(this).apply(block).build()

    interface FluentBuilder {
        fun build(): FederatedUser
        /**
         * The ARN that specifies the federated user that is associated with the credentials. For
         * more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
         * Identifiers in the IAM User Guide.
         */
        fun arn(arn: String): FluentBuilder
        /**
         * The string that identifies the federated user associated with the credentials, similar
         * to the unique ID of an IAM user.
         */
        fun federatedUserId(federatedUserId: String): FluentBuilder
    }

    interface DslBuilder {
        /**
         * The ARN that specifies the federated user that is associated with the credentials. For
         * more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
         * Identifiers in the IAM User Guide.
         */
        var arn: String?
        /**
         * The string that identifies the federated user associated with the credentials, similar
         * to the unique ID of an IAM user.
         */
        var federatedUserId: String?

        fun build(): FederatedUser
    }

    private class BuilderImpl() : FluentBuilder, DslBuilder {
        override var arn: String? = null
        override var federatedUserId: String? = null

        constructor(x: FederatedUser) : this() {
            this.arn = x.arn
            this.federatedUserId = x.federatedUserId
        }

        override fun build(): FederatedUser = FederatedUser(this)
        override fun arn(arn: String): FluentBuilder = apply { this.arn = arn }
        override fun federatedUserId(federatedUserId: String): FluentBuilder = apply { this.federatedUserId = federatedUserId }
    }
}
